{"version":3,"sources":["../../src/commands-old/pull.js"],"sourcesContent":["const path = require('path');\nconst { getSchemaConnectors } = require('../utils/helpers');\nconst { fs, isDirEmpty } = require('@genx/sys');\n\n/**\n * Pull schema from database (reverse engineering).\n * @param {ServiceContainer} app\n * @param {object} context \n * @property {string} context.gemlPath\n * @property {string} context.modelPath         \n * @property {string} context.scriptPath\n * @property {string} context.manifestPath\n * @property {bool} context.useJsonSource\n * @property {bool} context.saveIntermediate\n * @property {object} context.schemas   \n * @returns {Promise}\n */\nmodule.exports = async (app, context) => {\n    app.log('verbose', `${app.name} pull`);\n\n    let schemaName = app.option('schema');\n    let override = app.option('override');\n\n    let schemaToConnector = getSchemaConnectors(app, context.schemas);\n    let connector = schemaToConnector[schemaName];\n\n    if (!context.manifestPath) {\n        throw new Error('Config \"geml.manifestPath\" for \"pull\" command is required.');\n    }\n\n    let targetPath = path.join(context.manifestPath, 'reverse');\n    fs.ensureDirSync(targetPath);\n\n    if (!override && !isDirEmpty(targetPath)) {\n        throw new Error(`Target path \"${targetPath}\" is not empty. Use --override to force.`);\n    }\n\n    const ReserveEngineering = require(`../modeler/database/${connector.driver}/ReverseEngineering`);\n    let modeler = new ReserveEngineering(context, app, connector);\n\n    await modeler.reverse_(targetPath);\n};\n"],"names":["path","require","getSchemaConnectors","fs","isDirEmpty","module","exports","app","context","log","name","schemaName","option","override","schemaToConnector","schemas","connector","manifestPath","Error","targetPath","join","ensureDirSync","ReserveEngineering","driver","modeler","reverse_"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";AAAA,MAAMA,OAAOC,QAAQ;AACrB,MAAM,EAAEC,mBAAmB,EAAE,GAAGD,QAAQ;AACxC,MAAM,EAAEE,EAAE,EAAEC,UAAU,EAAE,GAAGH,QAAQ;AAEnC;;;;;;;;;;;;CAYC,GACDI,OAAOC,OAAO,GAAG,OAAOC,KAAKC;IACzBD,IAAIE,GAAG,CAAC,WAAW,CAAC,EAAEF,IAAIG,IAAI,CAAC,KAAK,CAAC;IAErC,IAAIC,aAAaJ,IAAIK,MAAM,CAAC;IAC5B,IAAIC,WAAWN,IAAIK,MAAM,CAAC;IAE1B,IAAIE,oBAAoBZ,oBAAoBK,KAAKC,QAAQO,OAAO;IAChE,IAAIC,YAAYF,iBAAiB,CAACH,WAAW;IAE7C,IAAI,CAACH,QAAQS,YAAY,EAAE;QACvB,MAAM,IAAIC,MAAM;IACpB;IAEA,IAAIC,aAAanB,KAAKoB,IAAI,CAACZ,QAAQS,YAAY,EAAE;IACjDd,GAAGkB,aAAa,CAACF;IAEjB,IAAI,CAACN,YAAY,CAACT,WAAWe,aAAa;QACtC,MAAM,IAAID,MAAM,CAAC,aAAa,EAAEC,WAAW,wCAAwC,CAAC;IACxF;IAEA,MAAMG,qBAAqBrB,QAAQ,CAAC,oBAAoB,EAAEe,UAAUO,MAAM,CAAC,mBAAmB,CAAC;IAC/F,IAAIC,UAAU,IAAIF,mBAAmBd,SAASD,KAAKS;IAEnD,MAAMQ,QAAQC,QAAQ,CAACN;AAC3B"}