{"version":3,"sources":["../../src/commands-old/migrate.js"],"sourcesContent":["const { _, eachAsync_ } = require('@genx/july');\nconst { throwIfFileNotExist, importDataFiles } = require('../utils/helpers');\n\n/**\n * Build database scripts and entity models from oolong files.\n * @param {ServiceContainer} app\n * @param {object} context \n * @property {string} context.gemlPath\n * @property {string} context.modelPath         \n * @property {string} context.scriptPath\n * @property {string} context.manifestPath\n * @property {bool} context.useJsonSource\n * @property {bool} context.saveIntermediate\n * @property {object} context.schemas   \n * @returns {Promise}\n */\nmodule.exports = async (app, context) => {\n    app.log('verbose', `${app.name} migrate`);\n\n    throwIfFileNotExist(\"modelPath\", context.modelPath);\n    throwIfFileNotExist(\"scriptPath\", context.scriptPath);\n\n    let reset = app.option('reset');\n\n    if (reset) {\n        await eachAsync_(Object.keys(context.schemas).reverse(), async (schemaName) => {            \n            const db = app.db(schemaName);\n    \n            const Migrator = require(`../migration/${db.driver}`);\n            const migrator = new Migrator(app, context, db);\n\n            await migrator.reset_();    \n        });\n    }\n\n    return eachAsync_(context.schemas, async (schemaConfig, schemaName) => {\n        const db = app.db(schemaName);        \n    \n        const Migrator = require(`../migration/${db.driver}`);\n        const migrator = new Migrator(app, context, db);\n\n        await migrator.create_(schemaConfig.extraOptions);      \n\n        await importDataFiles(migrator, '_init');  \n    });\n};\n"],"names":["_","eachAsync_","require","throwIfFileNotExist","importDataFiles","module","exports","app","context","log","name","modelPath","scriptPath","reset","option","Object","keys","schemas","reverse","schemaName","db","Migrator","driver","migrator","reset_","schemaConfig","create_","extraOptions"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";AAAA,MAAM,EAAEA,CAAC,EAAEC,UAAU,EAAE,GAAGC,QAAQ;AAClC,MAAM,EAAEC,mBAAmB,EAAEC,eAAe,EAAE,GAAGF,QAAQ;AAEzD;;;;;;;;;;;;CAYC,GACDG,OAAOC,OAAO,GAAG,OAAOC,KAAKC;IACzBD,IAAIE,GAAG,CAAC,WAAW,CAAC,EAAEF,IAAIG,IAAI,CAAC,QAAQ,CAAC;IAExCP,oBAAoB,aAAaK,QAAQG,SAAS;IAClDR,oBAAoB,cAAcK,QAAQI,UAAU;IAEpD,IAAIC,QAAQN,IAAIO,MAAM,CAAC;IAEvB,IAAID,OAAO;QACP,MAAMZ,WAAWc,OAAOC,IAAI,CAACR,QAAQS,OAAO,EAAEC,OAAO,IAAI,OAAOC;YAC5D,MAAMC,KAAKb,IAAIa,EAAE,CAACD;YAElB,MAAME,WAAWnB,QAAQ,CAAC,aAAa,EAAEkB,GAAGE,MAAM,CAAC,CAAC;YACpD,MAAMC,WAAW,IAAIF,SAASd,KAAKC,SAASY;YAE5C,MAAMG,SAASC,MAAM;QACzB;IACJ;IAEA,OAAOvB,WAAWO,QAAQS,OAAO,EAAE,OAAOQ,cAAcN;QACpD,MAAMC,KAAKb,IAAIa,EAAE,CAACD;QAElB,MAAME,WAAWnB,QAAQ,CAAC,aAAa,EAAEkB,GAAGE,MAAM,CAAC,CAAC;QACpD,MAAMC,WAAW,IAAIF,SAASd,KAAKC,SAASY;QAE5C,MAAMG,SAASG,OAAO,CAACD,aAAaE,YAAY;QAEhD,MAAMvB,gBAAgBmB,UAAU;IACpC;AACJ"}