{"version":3,"sources":["../../src/commands-old/init.js"],"sourcesContent":["const path = require('path');\nconst { fs } = require('@genx/sys');\nconst copyFileFromTemplate_ = require('../utils/copyFileFromTemplate_');\nconst npmInstall_ = require('../utils/npmInstall_');\n\nconst gxDataPkg = 'genx-tech/gx-data#v2';\nconst gxModelPkg = 'genx-tech/gx-model#v2';\n\n/**\n * Build database scripts and entity models from oolong files.\n * @param {ServiceContainer} app\n * @param {object} context \n * @property {string} context.gemlPath\n * @property {string} context.modelPath         \n * @property {string} context.scriptPath\n * @property {string} context.manifestPath\n * @property {bool} context.useJsonSource\n * @property {bool} context.saveIntermediate\n * @property {object} context.schemas   \n * @returns {Promise}\n */\nmodule.exports = async (app, context) => {\n    app.log('verbose', `${app.name} init`);\n\n    const schemaName = app.commandLine.option('schema');\n\n    let workingPath = app.workingPath;\n\n    let configFile = path.join(workingPath, 'conf', `app.default.json`);\n    if (!fs.existsSync(configFile)) {\n        configFile = path.join(workingPath, 'conf', `server.default.json`);\n        if (!fs.existsSync(configFile)) {\n            throw new Error('Either \"conf/app.default.json\" or \"conf/server.default.json\" not found.');\n        }\n    }    \n\n    const config = await fs.readJson(configFile);\n    if (config.settings?.geml) {\n        throw new Error(`\"geml\" setting has already exist in ${configFile}`);\n    }\n\n    config.settings = {\n        ...config.settings,\n        geml: {\n            gemlPath: \"geml\",\n            modelPath: \"src/models\",\n            scriptPath: \"src/scripts\",\n            manifestPath: \"manifests\"\n        }\n    };\n\n    await fs.writeJson(configFile, config, { spaces: 4 });\n    app.log('info', `\"geml\" setting is added into ${configFile}`);\n\n    const gemlPath = path.join(workingPath, 'geml', 'entities');\n    await fs.ensureDir(gemlPath);\n\n    const schemaSource = path.resolve(__dirname, 'init/sample.geml');\n    const entitySource = path.resolve(__dirname, 'init/test.geml');\n\n    const schemaFile = path.join(workingPath, 'geml', `${schemaName}.geml`);\n    const entityFile = path.join(workingPath, 'geml', 'entities', 'test.geml');\n\n    await copyFileFromTemplate_(schemaSource, schemaFile, { schemaName });\n    app.log('info', `Created ${schemaFile}`);\n\n    await fs.copyFile(entitySource, entityFile);\n    app.log('info', `Created ${entityFile}`);\n\n    await npmInstall_(app, workingPath, [gxDataPkg]);\n    await npmInstall_(app, workingPath, ['-D', gxModelPkg]);    \n};\n"],"names":["path","require","fs","copyFileFromTemplate_","npmInstall_","gxDataPkg","gxModelPkg","module","exports","app","context","log","name","schemaName","commandLine","option","workingPath","configFile","join","existsSync","Error","config","readJson","settings","geml","gemlPath","modelPath","scriptPath","manifestPath","writeJson","spaces","ensureDir","schemaSource","resolve","__dirname","entitySource","schemaFile","entityFile","copyFile"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";AAAA,MAAMA,OAAOC,QAAQ;AACrB,MAAM,EAAEC,EAAE,EAAE,GAAGD,QAAQ;AACvB,MAAME,wBAAwBF,QAAQ;AACtC,MAAMG,cAAcH,QAAQ;AAE5B,MAAMI,YAAY;AAClB,MAAMC,aAAa;AAEnB;;;;;;;;;;;;CAYC,GACDC,OAAOC,OAAO,GAAG,OAAOC,KAAKC;IACzBD,IAAIE,GAAG,CAAC,WAAW,CAAC,EAAEF,IAAIG,IAAI,CAAC,KAAK,CAAC;IAErC,MAAMC,aAAaJ,IAAIK,WAAW,CAACC,MAAM,CAAC;IAE1C,IAAIC,cAAcP,IAAIO,WAAW;IAEjC,IAAIC,aAAajB,KAAKkB,IAAI,CAACF,aAAa,QAAQ,CAAC,gBAAgB,CAAC;IAClE,IAAI,CAACd,GAAGiB,UAAU,CAACF,aAAa;QAC5BA,aAAajB,KAAKkB,IAAI,CAACF,aAAa,QAAQ,CAAC,mBAAmB,CAAC;QACjE,IAAI,CAACd,GAAGiB,UAAU,CAACF,aAAa;YAC5B,MAAM,IAAIG,MAAM;QACpB;IACJ;IAEA,MAAMC,SAAS,MAAMnB,GAAGoB,QAAQ,CAACL;IACjC,IAAII,OAAOE,QAAQ,EAAEC,MAAM;QACvB,MAAM,IAAIJ,MAAM,CAAC,oCAAoC,EAAEH,WAAW,CAAC;IACvE;IAEAI,OAAOE,QAAQ,GAAG;QACd,GAAGF,OAAOE,QAAQ;QAClBC,MAAM;YACFC,UAAU;YACVC,WAAW;YACXC,YAAY;YACZC,cAAc;QAClB;IACJ;IAEA,MAAM1B,GAAG2B,SAAS,CAACZ,YAAYI,QAAQ;QAAES,QAAQ;IAAE;IACnDrB,IAAIE,GAAG,CAAC,QAAQ,CAAC,6BAA6B,EAAEM,WAAW,CAAC;IAE5D,MAAMQ,WAAWzB,KAAKkB,IAAI,CAACF,aAAa,QAAQ;IAChD,MAAMd,GAAG6B,SAAS,CAACN;IAEnB,MAAMO,eAAehC,KAAKiC,OAAO,CAACC,WAAW;IAC7C,MAAMC,eAAenC,KAAKiC,OAAO,CAACC,WAAW;IAE7C,MAAME,aAAapC,KAAKkB,IAAI,CAACF,aAAa,QAAQ,CAAC,EAAEH,WAAW,KAAK,CAAC;IACtE,MAAMwB,aAAarC,KAAKkB,IAAI,CAACF,aAAa,QAAQ,YAAY;IAE9D,MAAMb,sBAAsB6B,cAAcI,YAAY;QAAEvB;IAAW;IACnEJ,IAAIE,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAEyB,WAAW,CAAC;IAEvC,MAAMlC,GAAGoC,QAAQ,CAACH,cAAcE;IAChC5B,IAAIE,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE0B,WAAW,CAAC;IAEvC,MAAMjC,YAAYK,KAAKO,aAAa;QAACX;KAAU;IAC/C,MAAMD,YAAYK,KAAKO,aAAa;QAAC;QAAMV;KAAW;AAC1D"}