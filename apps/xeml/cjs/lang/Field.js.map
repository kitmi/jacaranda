{"version":3,"sources":["../../src/lang/Field.js"],"sourcesContent":["\"use strict\";\n\nconst { _ } = require('@genx/july');\nconst { generateDisplayName, deepCloneField, Clonable, fieldNaming } = require('./GemlUtils');\nconst { Types } = require('@genx/data');\nconst RESERVED_KEYS = new Set(['name', 'type', 'modifiers', 'subClass', 'values']);\n\n/**\n * Geml entity field class.\n * @class\n */\nclass Field extends Clonable {\n    /**\n     * @param {string} name\n     * @param {object} info\n     */\n    constructor(name, info) {\n        super();\n\n        this.name = fieldNaming(name);\n\n        /**\n         * Original type information.\n         * @member {object}\n         */\n        this.info = info;        \n    }\n\n    /**\n     * Linking the \n     */\n    link() {\n        assert: Types.Builtin.has(this.info.type);\n        let typeObject = Types[this.info.type];\n\n        _.forOwn(this.info, (value, key) => {\n            if (RESERVED_KEYS.has(key)) {\n                this[key] = value;\n                return;\n            }       \n\n            if (!typeObject.qualifiers.includes(key)) {\n                throw new Error(`Unsupported field qualifier \"${key}\" for type \"${this.info.type}\" of field \"${this.name}.\"`);\n            }\n\n            this[key] = Array.isArray(value) ? value[0] : value;\n        });\n\n        if (this.info.modifiers && _.find(this.info.modifiers, mod => mod.oolType === 'Activator')) {\n            this.hasActivator = true;\n        }\n\n        /**\n         * The default name of the field\n         * @member {string}\n         */\n        this.displayName = generateDisplayName(this.name);        \n\n        deepCloneField(this.info, this, 'modifiers');\n\n        this.linked = true;\n    }\n\n    hasSameType(targetField) {\n        return _.isEqual(this.toJSON(), targetField);\n    }\n\n    /**\n     * Clone the field     \n     * @returns {Field}\n     */\n    clone() {\n        super.clone();\n\n        let field = new Field(this.name, this.info);\n        Object.assign(field, this.toJSON());\n        field.linked = true;\n        \n        return field;\n    }\n\n    /**\n     * Translate the field into a plain JSON object\n     * @returns {object}\n     */\n    toJSON() {\n        return _.omit(_.toPlainObject(this), [ 'name', 'linked', 'info' ]);\n    }\n}\n\nmodule.exports = Field;"],"names":["_","require","generateDisplayName","deepCloneField","Clonable","fieldNaming","Types","RESERVED_KEYS","Set","Field","link","assert","Builtin","has","info","type","typeObject","forOwn","value","key","qualifiers","includes","Error","name","Array","isArray","modifiers","find","mod","oolType","hasActivator","displayName","linked","hasSameType","targetField","isEqual","toJSON","clone","field","Object","assign","omit","toPlainObject","constructor","module","exports"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;AAEA,MAAM,EAAEA,CAAC,EAAE,GAAGC,QAAQ;AACtB,MAAM,EAAEC,mBAAmB,EAAEC,cAAc,EAAEC,QAAQ,EAAEC,WAAW,EAAE,GAAGJ,QAAQ;AAC/E,MAAM,EAAEK,KAAK,EAAE,GAAGL,QAAQ;AAC1B,MAAMM,gBAAgB,IAAIC,IAAI;IAAC;IAAQ;IAAQ;IAAa;IAAY;CAAS;AAEjF;;;CAGC,GACD,MAAMC,cAAcL;IAiBhB;;KAEC,GACDM,OAAO;QACHC,QAAQL,MAAMM,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,IAAI,CAACC,IAAI;QACxC,IAAIC,aAAaV,KAAK,CAAC,IAAI,CAACQ,IAAI,CAACC,IAAI,CAAC;QAEtCf,EAAEiB,MAAM,CAAC,IAAI,CAACH,IAAI,EAAE,CAACI,OAAOC;YACxB,IAAIZ,cAAcM,GAAG,CAACM,MAAM;gBACxB,IAAI,CAACA,IAAI,GAAGD;gBACZ;YACJ;YAEA,IAAI,CAACF,WAAWI,UAAU,CAACC,QAAQ,CAACF,MAAM;gBACtC,MAAM,IAAIG,MAAM,CAAC,6BAA6B,EAAEH,IAAI,YAAY,EAAE,IAAI,CAACL,IAAI,CAACC,IAAI,CAAC,YAAY,EAAE,IAAI,CAACQ,IAAI,CAAC,EAAE,CAAC;YAChH;YAEA,IAAI,CAACJ,IAAI,GAAGK,MAAMC,OAAO,CAACP,SAASA,KAAK,CAAC,EAAE,GAAGA;QAClD;QAEA,IAAI,IAAI,CAACJ,IAAI,CAACY,SAAS,IAAI1B,EAAE2B,IAAI,CAAC,IAAI,CAACb,IAAI,CAACY,SAAS,EAAEE,CAAAA,MAAOA,IAAIC,OAAO,KAAK,cAAc;YACxF,IAAI,CAACC,YAAY,GAAG;QACxB;QAEA;;;SAGC,GACD,IAAI,CAACC,WAAW,GAAG7B,oBAAoB,IAAI,CAACqB,IAAI;QAEhDpB,eAAe,IAAI,CAACW,IAAI,EAAE,IAAI,EAAE;QAEhC,IAAI,CAACkB,MAAM,GAAG;IAClB;IAEAC,YAAYC,WAAW,EAAE;QACrB,OAAOlC,EAAEmC,OAAO,CAAC,IAAI,CAACC,MAAM,IAAIF;IACpC;IAEA;;;KAGC,GACDG,QAAQ;QACJ,KAAK,CAACA;QAEN,IAAIC,QAAQ,IAAI7B,MAAM,IAAI,CAACc,IAAI,EAAE,IAAI,CAACT,IAAI;QAC1CyB,OAAOC,MAAM,CAACF,OAAO,IAAI,CAACF,MAAM;QAChCE,MAAMN,MAAM,GAAG;QAEf,OAAOM;IACX;IAEA;;;KAGC,GACDF,SAAS;QACL,OAAOpC,EAAEyC,IAAI,CAACzC,EAAE0C,aAAa,CAAC,IAAI,GAAG;YAAE;YAAQ;YAAU;SAAQ;IACrE;IA3EA;;;KAGC,GACDC,YAAYpB,IAAI,EAAET,IAAI,CAAE;QACpB,KAAK;QAEL,IAAI,CAACS,IAAI,GAAGlB,YAAYkB;QAExB;;;SAGC,GACD,IAAI,CAACT,IAAI,GAAGA;IAChB;AA8DJ;AAEA8B,OAAOC,OAAO,GAAGpC"}