{"version":3,"sources":["../../../src/lang/entityFeatures/logicalDeletion.js"],"sourcesContent":["\"use strict\";\n\nconst { _ } = require('@genx/july')\n\nconst FEATURE_NAME = 'logicalDeletion';\n\n/**\n * A rule specifies the entity will not be deleted physically.\n * @module EntityFeature_LogicalDeletion\n */\n\n/**\n * Initialize the feature\n * @param {Entity} entity - Entity to apply this feature\n * @param {object} options - Field options, can be a string as a new status field or an object reference to a certain status of an existing field\n */\nfunction feature(entity, args = []) {\n    let newField = true, fieldInfo = {\n        name: 'isDeleted',\n        type: 'boolean',\n        'default': false,\n        readOnly: true\n    }, fieldName, featureSetting;\n\n    let [ options ] = args;\n\n    if (options) {\n        if (_.isPlainObject(options)) {\n            newField = false;\n\n            let keys = Object.keys(options);\n            if (keys.length !== 1) {\n                throw new Error(`Invalid options for feature \"${FEATURE_NAME}\".`);\n            }\n\n            let fieldName = keys[0];\n\n            featureSetting = {\n                field: fieldName,\n                value: options[fieldName]\n            };\n\n        } else if (typeof options === 'string') {\n            Object.assign(fieldInfo, { name: options });\n        } else {\n            throw new Error(`Invalid options for feature \"${FEATURE_NAME}\".`);\n        }\n    }\n\n    if (newField) {\n        fieldName = fieldInfo.name;\n\n        let timestampFieldName = 'deletedAt';\n        let deletedTimestamp = {\n            type: 'datetime',\n            readOnly: true,\n            optional: true,\n            writeOnce: true,\n            auto: true\n        };\n\n        entity.addFeature(FEATURE_NAME, {\n            field: fieldName,\n            value: true,\n            timestampField: timestampFieldName\n        });\n\n        entity.once('afterAddingFields', () => {\n            entity.addField(fieldName, fieldInfo);\n            entity.addField(timestampFieldName, deletedTimestamp);\n        });\n    } else {\n        entity.addFeature(FEATURE_NAME, featureSetting);\n\n        entity.once('afterAddingFields', () => {\n            if (!entity.hasField(featureSetting.field)) {\n                throw new Error(`Field \"${featureSetting.field}\" used by feature \"${FEATURE_NAME}\" is not found in entity \"${entity.name}\".`);\n            }\n        });\n    }\n}\n\nmodule.exports = feature;"],"names":["_","require","FEATURE_NAME","feature","entity","args","newField","fieldInfo","name","type","readOnly","fieldName","featureSetting","options","isPlainObject","keys","Object","length","Error","field","value","assign","timestampFieldName","deletedTimestamp","optional","writeOnce","auto","addFeature","timestampField","once","addField","hasField","module","exports"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;AAEA,MAAM,EAAEA,CAAC,EAAE,GAAGC,QAAQ;AAEtB,MAAMC,eAAe;AAErB;;;CAGC,GAED;;;;CAIC,GACD,SAASC,QAAQC,MAAM,EAAEC,OAAO,EAAE;IAC9B,IAAIC,WAAW,MAAMC,YAAY;QAC7BC,MAAM;QACNC,MAAM;QACN,WAAW;QACXC,UAAU;IACd,GAAGC,WAAWC;IAEd,IAAI,CAAEC,QAAS,GAAGR;IAElB,IAAIQ,SAAS;QACT,IAAIb,EAAEc,aAAa,CAACD,UAAU;YAC1BP,WAAW;YAEX,IAAIS,OAAOC,OAAOD,IAAI,CAACF;YACvB,IAAIE,KAAKE,MAAM,KAAK,GAAG;gBACnB,MAAM,IAAIC,MAAM,CAAC,6BAA6B,EAAEhB,aAAa,EAAE,CAAC;YACpE;YAEA,IAAIS,YAAYI,IAAI,CAAC,EAAE;YAEvBH,iBAAiB;gBACbO,OAAOR;gBACPS,OAAOP,OAAO,CAACF,UAAU;YAC7B;QAEJ,OAAO,IAAI,OAAOE,YAAY,UAAU;YACpCG,OAAOK,MAAM,CAACd,WAAW;gBAAEC,MAAMK;YAAQ;QAC7C,OAAO;YACH,MAAM,IAAIK,MAAM,CAAC,6BAA6B,EAAEhB,aAAa,EAAE,CAAC;QACpE;IACJ;IAEA,IAAII,UAAU;QACVK,YAAYJ,UAAUC,IAAI;QAE1B,IAAIc,qBAAqB;QACzB,IAAIC,mBAAmB;YACnBd,MAAM;YACNC,UAAU;YACVc,UAAU;YACVC,WAAW;YACXC,MAAM;QACV;QAEAtB,OAAOuB,UAAU,CAACzB,cAAc;YAC5BiB,OAAOR;YACPS,OAAO;YACPQ,gBAAgBN;QACpB;QAEAlB,OAAOyB,IAAI,CAAC,qBAAqB;YAC7BzB,OAAO0B,QAAQ,CAACnB,WAAWJ;YAC3BH,OAAO0B,QAAQ,CAACR,oBAAoBC;QACxC;IACJ,OAAO;QACHnB,OAAOuB,UAAU,CAACzB,cAAcU;QAEhCR,OAAOyB,IAAI,CAAC,qBAAqB;YAC7B,IAAI,CAACzB,OAAO2B,QAAQ,CAACnB,eAAeO,KAAK,GAAG;gBACxC,MAAM,IAAID,MAAM,CAAC,OAAO,EAAEN,eAAeO,KAAK,CAAC,mBAAmB,EAAEjB,aAAa,0BAA0B,EAAEE,OAAOI,IAAI,CAAC,EAAE,CAAC;YAChI;QACJ;IACJ;AACJ;AAEAwB,OAAOC,OAAO,GAAG9B"}