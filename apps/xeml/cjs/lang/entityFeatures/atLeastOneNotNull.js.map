{"version":3,"sources":["../../../src/lang/entityFeatures/atLeastOneNotNull.js"],"sourcesContent":["\"use strict\";\n\nconst FEATURE_NAME = 'atLeastOneNotNull';\n\n/**\n * A rule specifies at least one field not null, e.g. email or mobile.\n * @module EntityFeature_AtLeastOneNotNull\n */\n\n/**\n * Initialize the feature\n * @param {Entity} entity - Entity to apply this feature\n * @param {array} fields - List of field names\n */\nfunction feature(entity, [ fields ]) {\n    if (!fields) {\n        throw new Error('Missing field names!');\n    }\n\n    Array.isArray(fields) || (fields = [ fields ]);\n\n    entity.addFeature(FEATURE_NAME, fields, true).once('afterAddingFields', () => {\n        fields.forEach(fieldName => {\n            let field = entity.fields[fieldName];\n\n            if (!field) {\n                throw new Error('Required field \"' + fieldName + '\" not exist.');\n            }\n\n            field.optional = true;\n        });\n    });\n}\n\nmodule.exports = feature;"],"names":["FEATURE_NAME","feature","entity","fields","Error","Array","isArray","addFeature","once","forEach","fieldName","field","optional","module","exports"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;AAEA,MAAMA,eAAe;AAErB;;;CAGC,GAED;;;;CAIC,GACD,SAASC,QAAQC,MAAM,EAAE,CAAEC,OAAQ;IAC/B,IAAI,CAACA,QAAQ;QACT,MAAM,IAAIC,MAAM;IACpB;IAEAC,MAAMC,OAAO,CAACH,WAAYA,CAAAA,SAAS;QAAEA;KAAQ,AAAD;IAE5CD,OAAOK,UAAU,CAACP,cAAcG,QAAQ,MAAMK,IAAI,CAAC,qBAAqB;QACpEL,OAAOM,OAAO,CAACC,CAAAA;YACX,IAAIC,QAAQT,OAAOC,MAAM,CAACO,UAAU;YAEpC,IAAI,CAACC,OAAO;gBACR,MAAM,IAAIP,MAAM,qBAAqBM,YAAY;YACrD;YAEAC,MAAMC,QAAQ,GAAG;QACrB;IACJ;AACJ;AAEAC,OAAOC,OAAO,GAAGb"}