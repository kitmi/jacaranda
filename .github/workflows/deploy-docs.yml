# Sample workflow for building and deploying a mdBook site to GitHub Pages
#
# To get started with mdBook see: https://rust-lang.github.io/mdBook/index.html
#
name: Deploy mdBook site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      MDBOOK_VERSION: 0.4.36
    steps:
      - uses: actions/checkout@v4
      - name: Install mdBook
        run: |
          curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf -y | sh
          rustup update
          cargo install --version ${MDBOOK_VERSION} mdbook
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      - name: Build with mdBook
        run: |
          cp ./README.md ./docs/src/index.md
          cp ./packages/data/docs/tech-design.md ./docs/src/data-access-models.md
          cp ./packages/data/docs/manual.md ./docs/src/data-manual.md
          cp ./packages/data/docs/how-to.md ./docs/src/data-how-to.md
          cp ./packages/tester/README.md ./docs/src/tester.md
          cd docs
          mdbook build
      - name: Copy project docs
        run: |
          mkdir -p ./docs/book/@kitmi/adapters
          cp -R ./packages/adapters/docs/manual/* ./docs/book/@kitmi/adapters
          mkdir -p ./docs/book/@kitmi/algo
          cp -R ./packages/algorithm/docs/manual/* ./docs/book/@kitmi/algo
          mkdir -p ./docs/book/@kitmi/config
          cp -R ./packages/config/docs/manual/* ./docs/book/@kitmi/config
          mkdir -p ./docs/book/@kitmi/jacaranda
          cp -R ./packages/jacaranda/docs/manual/* ./docs/book/@kitmi/jacaranda
          mkdir -p ./docs/book/@kitmi/jsonv
          cp -R ./packages/jsonv/docs/manual/* ./docs/book/@kitmi/jsonv
          mkdir -p ./docs/book/@kitmi/jsonx
          cp -R ./packages/jsonx/docs/manual/* ./docs/book/@kitmi/jsonx
          mkdir -p ./docs/book/@kitmi/sys
          cp -R ./packages/sys/docs/manual/* ./docs/book/@kitmi/sys
          mkdir -p ./docs/book/@kitmi/tester
          cp -R ./packages/tester/docs/manual/* ./docs/book/@kitmi/tester
          mkdir -p ./docs/book/@kitmi/types
          cp -R ./packages/types/docs/manual/* ./docs/book/@kitmi/types
          mkdir -p ./docs/book/@kitmi/utils
          cp -R ./packages/utils/docs/manual/* ./docs/book/@kitmi/utils
          mkdir -p ./docs/book/@kitmi/validators
          cp -R ./packages/validators/docs/manual/* ./docs/book/@kitmi/validators
          mkdir -p ./docs/book/@kitmi/data
          cp -R ./packages/data/docs/manual/* ./docs/book/@kitmi/data
          mkdir -p ./docs/book/@kitmi/xeml
          cp -R ./apps/xeml/docs/manual/* ./docs/book/@kitmi/xeml

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs/book

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
