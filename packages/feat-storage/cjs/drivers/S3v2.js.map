{"version":3,"sources":["../../src/drivers/S3v2.js"],"sourcesContent":["import { fxargs } from '@kitmi/utils';\nimport { DEFAULT_UPLOAD_EXPIRY, DEFAULT_DOWNLOAD_EXPIRY } from '../common';\n\nclass S3Service {\n    static packages = ['aws-sdk'];\n\n    constructor(app, options) {\n        const { endpoint, accessKeyId, secretAccessKey, bucket } = options;\n\n        const AWS = app.tryRequire('aws-sdk');\n\n        const spacesEndpoint = new AWS.Endpoint(endpoint);\n\n        this.client = new AWS.S3({\n            endpoint: spacesEndpoint,\n            accessKeyId,\n            secretAccessKey,\n            signatureVersion: 'v4',\n        });\n\n        this.bucket = bucket;\n    }\n\n    async getUploadUrl_(...args) {\n        const [objectKey, contentType, expiresInSeconds = DEFAULT_UPLOAD_EXPIRY, payload] = fxargs(args, [\n            'string',\n            'string?',\n            'integer?',\n            'object?',\n        ]);\n\n        const params = {\n            Bucket: this.bucket,\n            Key: objectKey,\n            Expires: expiresInSeconds,\n        };\n\n        if (contentType) {\n            // most of the time, you don't know the contentType before user selected the file\n            params.ContentType = contentType;\n        }\n\n        return this.client.getSignedUrl('putObject', {\n            ...params,\n            ...payload,\n        });\n    }\n\n    async getDownloadUrl_(...args) {\n        const [objectKey, expiresInSeconds = DEFAULT_DOWNLOAD_EXPIRY, payload] = fxargs(args, [\n            'string',\n            'integer?',\n            'object?',\n        ]);\n\n        return this.client.getSignedUrl('getObject', {\n            Bucket: this.bucket,\n            Key: objectKey,\n            Expires: expiresInSeconds,\n            ...payload,\n        });\n    }\n}\n\nexport default S3Service;\n"],"names":["S3Service","getUploadUrl_","args","objectKey","contentType","expiresInSeconds","DEFAULT_UPLOAD_EXPIRY","payload","fxargs","params","Bucket","bucket","Key","Expires","ContentType","client","getSignedUrl","getDownloadUrl_","DEFAULT_DOWNLOAD_EXPIRY","constructor","app","options","endpoint","accessKeyId","secretAccessKey","AWS","tryRequire","spacesEndpoint","Endpoint","S3","signatureVersion","packages"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAgEA;;;eAAA;;;uBAhEuB;wBACwC;;;;;;;;;;;;;;AAE/D,MAAMA;IAoBF,MAAMC,cAAc,GAAGC,IAAI,EAAE;QACzB,MAAM,CAACC,WAAWC,aAAaC,mBAAmBC,6BAAqB,EAAEC,QAAQ,GAAGC,IAAAA,aAAM,EAACN,MAAM;YAC7F;YACA;YACA;YACA;SACH;QAED,MAAMO,SAAS;YACXC,QAAQ,IAAI,CAACC,MAAM;YACnBC,KAAKT;YACLU,SAASR;QACb;QAEA,IAAID,aAAa;YACb,iFAAiF;YACjFK,OAAOK,WAAW,GAAGV;QACzB;QAEA,OAAO,IAAI,CAACW,MAAM,CAACC,YAAY,CAAC,aAAa;YACzC,GAAGP,MAAM;YACT,GAAGF,OAAO;QACd;IACJ;IAEA,MAAMU,gBAAgB,GAAGf,IAAI,EAAE;QAC3B,MAAM,CAACC,WAAWE,mBAAmBa,+BAAuB,EAAEX,QAAQ,GAAGC,IAAAA,aAAM,EAACN,MAAM;YAClF;YACA;YACA;SACH;QAED,OAAO,IAAI,CAACa,MAAM,CAACC,YAAY,CAAC,aAAa;YACzCN,QAAQ,IAAI,CAACC,MAAM;YACnBC,KAAKT;YACLU,SAASR;YACT,GAAGE,OAAO;QACd;IACJ;IAvDAY,YAAYC,GAAG,EAAEC,OAAO,CAAE;QACtB,MAAM,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,eAAe,EAAEb,MAAM,EAAE,GAAGU;QAE3D,MAAMI,MAAML,IAAIM,UAAU,CAAC;QAE3B,MAAMC,iBAAiB,IAAIF,IAAIG,QAAQ,CAACN;QAExC,IAAI,CAACP,MAAM,GAAG,IAAIU,IAAII,EAAE,CAAC;YACrBP,UAAUK;YACVJ;YACAC;YACAM,kBAAkB;QACtB;QAEA,IAAI,CAACnB,MAAM,GAAGA;IAClB;AAyCJ;AA1DI,iBADEX,WACK+B,YAAW;IAAC;CAAU;MA4DjC,WAAe/B"}