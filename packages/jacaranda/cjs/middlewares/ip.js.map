{"version":3,"sources":["../../src/middlewares/ip.js"],"sourcesContent":["const IPV4_PREFIX = '::ffff:';\nconst IPV4_LOCALHOST = '::1';\n\nconst ip = async (options, app) => {\n    const requestIp = await app.tryRequire_('request-ip');\n\n    return async (ctx, next) => {\n        let ip = requestIp.getClientIp(ctx.req);\n\n        if (ip.startsWith(IPV4_PREFIX)) {\n            ip = ip.substring(IPV4_PREFIX.length);\n        }\n\n        if (ip === IPV4_LOCALHOST) {\n            ip = '127.0.0.1';\n        }\n\n        ctx.request.ip = ip;\n        ctx.req.info = { remoteAddress: ip, remotePort: ctx.req.socket.remotePort };\n        return next();\n    };\n};\n\nexport default ip;\n"],"names":["IPV4_PREFIX","IPV4_LOCALHOST","ip","options","app","requestIp","tryRequire_","ctx","next","getClientIp","req","startsWith","substring","length","request","info","remoteAddress","remotePort","socket"],"mappings":";;;;+BAuBA;;;eAAA;;;AAvBA,MAAMA,cAAc;AACpB,MAAMC,iBAAiB;AAEvB,MAAMC,KAAK,OAAOC,SAASC;IACvB,MAAMC,YAAY,MAAMD,IAAIE,WAAW,CAAC;IAExC,OAAO,OAAOC,KAAKC;QACf,IAAIN,KAAKG,UAAUI,WAAW,CAACF,IAAIG,GAAG;QAEtC,IAAIR,GAAGS,UAAU,CAACX,cAAc;YAC5BE,KAAKA,GAAGU,SAAS,CAACZ,YAAYa,MAAM;QACxC;QAEA,IAAIX,OAAOD,gBAAgB;YACvBC,KAAK;QACT;QAEAK,IAAIO,OAAO,CAACZ,EAAE,GAAGA;QACjBK,IAAIG,GAAG,CAACK,IAAI,GAAG;YAAEC,eAAed;YAAIe,YAAYV,IAAIG,GAAG,CAACQ,MAAM,CAACD,UAAU;QAAC;QAC1E,OAAOT;IACX;AACJ;MAEA,WAAeN"}