{"version":3,"sources":["../../src/webFeatures/routing.js"],"sourcesContent":["/**\n * Enable web request routing.\n * @module Feature_Routing\n */\n\nimport { _, batchAsync_, isPlainObject, esmCheck } from '@kitmi/utils';\nimport { InvalidConfiguration } from '@kitmi/types';\nimport Feature from '../Feature';\n\nexport default {\n    /**\n     * This feature is loaded at ready (final) stage.\n     * @member {string}\n     */\n    stage: Feature.PLUGIN,\n\n    /**\n     * Load the feature.\n     * @param {Routable} app - The app module object\n     * @param {object} routes - Routes and configuration\n     * @returns {Promise.<*>}\n     */\n    load_: (app, routes) => { \n        if (app.router == null) {\n            // if mount to server level\n            app.createServerModuleRouter();\n        }\n\n        app.once('after:' + Feature.PLUGIN, () =>\n            batchAsync_(routes, async (routersConfig, route) => {\n                if (isPlainObject(routersConfig)) {\n                    return batchAsync_(routersConfig, async (options, type) => {\n                        let loader_;\n\n                        try {\n                            loader_ = esmCheck(require('../routers/' + type));\n                        } catch (e) {\n                            if (e.code === 'MODULE_NOT_FOUND') {\n                                throw new InvalidConfiguration(`Supported router type: ${type}`, app, `routing[${route}]`);\n                            }\n                        }\n\n                        app.log('verbose', `A \"${type}\" router is created at \"${route}\" in app [${app.name}].`);\n\n                        return loader_(app, route, options);\n                    });\n                } else {\n                    // 'route': 'method:/path'\n                    let mainRoute = '/',\n                        baseRoute = route;\n                    let pos = route.indexOf(':/');\n\n                    if (pos !== -1) {\n                        mainRoute = route.substring(0, pos + 2);\n                        baseRoute = route.substring(pos + 1);\n                    } else if (Array.isArray(routersConfig)) {\n                        //all handled by middleware chains\n                        mainRoute = 'all:/';\n                    }\n\n                    let rules = {\n                        [mainRoute]: routersConfig,\n                    };\n\n                    const loader_ = esmCheck(require('../routers/rule'));\n                    app.log('verbose', `A \"rule\" router is created at \"${baseRoute}\" in app [${app.name}].`);\n\n                    return loader_(app, baseRoute, { rules: rules });\n                }\n            })\n        );\n    },\n};\n"],"names":["stage","Feature","PLUGIN","load_","app","routes","router","createServerModuleRouter","once","batchAsync_","routersConfig","route","isPlainObject","options","type","loader_","esmCheck","require","e","code","InvalidConfiguration","log","name","mainRoute","baseRoute","pos","indexOf","substring","Array","isArray","rules"],"mappings":"AAAA;;;CAGC;;;;+BAMD;;;eAAA;;;uBAJwD;uBACnB;gEACjB;;;;;;MAEpB,WAAe;IACX;;;KAGC,GACDA,OAAOC,gBAAO,CAACC,MAAM;IAErB;;;;;KAKC,GACDC,OAAO,CAACC,KAAKC;QACT,IAAID,IAAIE,MAAM,IAAI,MAAM;YACpB,2BAA2B;YAC3BF,IAAIG,wBAAwB;QAChC;QAEAH,IAAII,IAAI,CAAC,WAAWP,gBAAO,CAACC,MAAM,EAAE,IAChCO,IAAAA,kBAAW,EAACJ,QAAQ,OAAOK,eAAeC;gBACtC,IAAIC,IAAAA,oBAAa,EAACF,gBAAgB;oBAC9B,OAAOD,IAAAA,kBAAW,EAACC,eAAe,OAAOG,SAASC;wBAC9C,IAAIC;wBAEJ,IAAI;4BACAA,UAAUC,IAAAA,eAAQ,EAACC,QAAQ,gBAAgBH;wBAC/C,EAAE,OAAOI,GAAG;4BACR,IAAIA,EAAEC,IAAI,KAAK,oBAAoB;gCAC/B,MAAM,IAAIC,2BAAoB,CAAC,CAAC,uBAAuB,EAAEN,KAAK,CAAC,EAAEV,KAAK,CAAC,QAAQ,EAAEO,MAAM,CAAC,CAAC;4BAC7F;wBACJ;wBAEAP,IAAIiB,GAAG,CAAC,WAAW,CAAC,GAAG,EAAEP,KAAK,wBAAwB,EAAEH,MAAM,UAAU,EAAEP,IAAIkB,IAAI,CAAC,EAAE,CAAC;wBAEtF,OAAOP,QAAQX,KAAKO,OAAOE;oBAC/B;gBACJ,OAAO;oBACH,0BAA0B;oBAC1B,IAAIU,YAAY,KACZC,YAAYb;oBAChB,IAAIc,MAAMd,MAAMe,OAAO,CAAC;oBAExB,IAAID,QAAQ,CAAC,GAAG;wBACZF,YAAYZ,MAAMgB,SAAS,CAAC,GAAGF,MAAM;wBACrCD,YAAYb,MAAMgB,SAAS,CAACF,MAAM;oBACtC,OAAO,IAAIG,MAAMC,OAAO,CAACnB,gBAAgB;wBACrC,kCAAkC;wBAClCa,YAAY;oBAChB;oBAEA,IAAIO,QAAQ;wBACR,CAACP,UAAU,EAAEb;oBACjB;oBAEA,MAAMK,UAAUC,IAAAA,eAAQ,EAACC,QAAQ;oBACjCb,IAAIiB,GAAG,CAAC,WAAW,CAAC,+BAA+B,EAAEG,UAAU,UAAU,EAAEpB,IAAIkB,IAAI,CAAC,EAAE,CAAC;oBAEvF,OAAOP,QAAQX,KAAKoB,WAAW;wBAAEM,OAAOA;oBAAM;gBAClD;YACJ;IAER;AACJ"}