{"version":3,"sources":["../../src/webFeatures/middlewareFactory.js"],"sourcesContent":["/**\n * Enable middleware factory\n * @module Feature_MiddlewareFactory\n *\n * @example\n *   \"middlewareFactory\": {\n *       //new middleware name\n *       \"listOfMiddleware\": {\n *           \"middleware1\": { // options\n *               ...\n *           },\n *           \"middleware2\": { // options\n *               ...\n *           }\n *       },\n *        \"altListOfMiddleware\": [\n *           {\n *               \"name\": \"middleware1\",\n *               \"options\": { ... }\n *           },\n *           [ \"middleware2\", { ... } ],\n *           \"middleware3\"\n *       ]\n *   },\n */\n\nimport { _, isPlainObject, eachAsync_ } from '@kitmi/utils';\nimport { InvalidConfiguration } from '@kitmi/types';\nimport Feature from '../Feature';\n\nexport default {\n    /**\n     * This feature is loaded at init stage\n     * @member {string}\n     */\n    stage: Feature.INIT,\n\n    /**\n     * Load the feature\n     * @param {App} app - The app module object\n     * @param {object} factories - Object factories\n     * @returns {Promise.<*>}\n     */\n    load_: (app, factories) => {\n        _.each(factories, (factoryInfo, name) => {\n            app.registerMiddlewareFactory(name, async (opt, targetApp) => {\n                if (!_.isEmpty(opt)) {\n                    throw new InvalidConfiguration(\n                        'Middleware factory should be used with empty options.',\n                        app,\n                        `middlewareFactory.${name}`\n                    );\n                }\n\n                let chains;\n\n                if (isPlainObject(factoryInfo)) {\n                    chains = [];\n\n                    await eachAsync_(factoryInfo, async (options, middleware) => {\n                        chains.push(await app.getMiddlewareFactory(middleware)(options, targetApp));\n                    });\n                } else if (Array.isArray(factoryInfo)) {\n                    chains = await eachAsync_(factoryInfo, async (middlewareInfo, i) => {\n                        if (isPlainObject(middlewareInfo)) {\n                            if (!middlewareInfo.name) {\n                                throw new InvalidConfiguration(\n                                    'Missing referenced middleware name.',\n                                    app,\n                                    `middlewareFactory.${name}[${i}].name`\n                                );\n                            }\n\n                            return app.getMiddlewareFactory(middlewareInfo.name)(middlewareInfo.options, targetApp);\n                        }\n\n                        if (Array.isArray(middlewareInfo)) {\n                            if (\n                                middlewareInfo.length < 1 ||\n                                middlewareInfo.length > 2 ||\n                                typeof middlewareInfo[0] !== 'string'\n                            ) {\n                                throw new InvalidConfiguration(\n                                    'Invalid middleware factory item config.',\n                                    app,\n                                    `middlewareFactory.${name}[${i}]`\n                                );\n                            }\n\n                            return app.getMiddlewareFactory(middlewareInfo[0])(\n                                middlewareInfo.length > 1 ? middlewareInfo[1] : undefined,\n                                targetApp\n                            );\n                        }\n\n                        if (typeof middlewareInfo === 'string') {\n                            return app.getMiddlewareFactory(middlewareInfo)(undefined, targetApp);\n                        }\n\n                        throw new InvalidConfiguration(\n                            'Invalid middleware factory item config.',\n                            app,\n                            `middlewareFactory.${name}[${i}]`\n                        );\n                    });\n                } else {\n                    throw new InvalidConfiguration(\n                        'Invalid middleware factory config.',\n                        app,\n                        `middlewareFactory.${name}`\n                    );\n                }\n\n                return chains.length === 1 ? chains[0] : chains;\n            });\n        });\n    },\n};\n"],"names":["stage","Feature","INIT","load_","app","factories","_","each","factoryInfo","name","registerMiddlewareFactory","opt","targetApp","isEmpty","InvalidConfiguration","chains","isPlainObject","eachAsync_","options","middleware","push","getMiddlewareFactory","Array","isArray","middlewareInfo","i","length","undefined"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;CAwBC;;;;+BAMD;;;eAAA;;;uBAJ6C;uBACR;gEACjB;;;;;;MAEpB,WAAe;IACX;;;KAGC,GACDA,OAAOC,gBAAO,CAACC,IAAI;IAEnB;;;;;KAKC,GACDC,OAAO,CAACC,KAAKC;QACTC,QAAC,CAACC,IAAI,CAACF,WAAW,CAACG,aAAaC;YAC5BL,IAAIM,yBAAyB,CAACD,MAAM,OAAOE,KAAKC;gBAC5C,IAAI,CAACN,QAAC,CAACO,OAAO,CAACF,MAAM;oBACjB,MAAM,IAAIG,2BAAoB,CAC1B,yDACAV,KACA,CAAC,kBAAkB,EAAEK,KAAK,CAAC;gBAEnC;gBAEA,IAAIM;gBAEJ,IAAIC,IAAAA,oBAAa,EAACR,cAAc;oBAC5BO,SAAS,EAAE;oBAEX,MAAME,IAAAA,iBAAU,EAACT,aAAa,OAAOU,SAASC;wBAC1CJ,OAAOK,IAAI,CAAC,MAAMhB,IAAIiB,oBAAoB,CAACF,YAAYD,SAASN;oBACpE;gBACJ,OAAO,IAAIU,MAAMC,OAAO,CAACf,cAAc;oBACnCO,SAAS,MAAME,IAAAA,iBAAU,EAACT,aAAa,OAAOgB,gBAAgBC;wBAC1D,IAAIT,IAAAA,oBAAa,EAACQ,iBAAiB;4BAC/B,IAAI,CAACA,eAAef,IAAI,EAAE;gCACtB,MAAM,IAAIK,2BAAoB,CAC1B,uCACAV,KACA,CAAC,kBAAkB,EAAEK,KAAK,CAAC,EAAEgB,EAAE,MAAM,CAAC;4BAE9C;4BAEA,OAAOrB,IAAIiB,oBAAoB,CAACG,eAAef,IAAI,EAAEe,eAAeN,OAAO,EAAEN;wBACjF;wBAEA,IAAIU,MAAMC,OAAO,CAACC,iBAAiB;4BAC/B,IACIA,eAAeE,MAAM,GAAG,KACxBF,eAAeE,MAAM,GAAG,KACxB,OAAOF,cAAc,CAAC,EAAE,KAAK,UAC/B;gCACE,MAAM,IAAIV,2BAAoB,CAC1B,2CACAV,KACA,CAAC,kBAAkB,EAAEK,KAAK,CAAC,EAAEgB,EAAE,CAAC,CAAC;4BAEzC;4BAEA,OAAOrB,IAAIiB,oBAAoB,CAACG,cAAc,CAAC,EAAE,EAC7CA,eAAeE,MAAM,GAAG,IAAIF,cAAc,CAAC,EAAE,GAAGG,WAChDf;wBAER;wBAEA,IAAI,OAAOY,mBAAmB,UAAU;4BACpC,OAAOpB,IAAIiB,oBAAoB,CAACG,gBAAgBG,WAAWf;wBAC/D;wBAEA,MAAM,IAAIE,2BAAoB,CAC1B,2CACAV,KACA,CAAC,kBAAkB,EAAEK,KAAK,CAAC,EAAEgB,EAAE,CAAC,CAAC;oBAEzC;gBACJ,OAAO;oBACH,MAAM,IAAIX,2BAAoB,CAC1B,sCACAV,KACA,CAAC,kBAAkB,EAAEK,KAAK,CAAC;gBAEnC;gBAEA,OAAOM,OAAOW,MAAM,KAAK,IAAIX,MAAM,CAAC,EAAE,GAAGA;YAC7C;QACJ;IACJ;AACJ"}