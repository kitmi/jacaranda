{"version":3,"sources":["../src/WebServer.js"],"sourcesContent":["import path from 'node:path';\nimport { _, batchAsync_, isPlainObject } from '@kitmi/utils';\nimport { InvalidConfiguration } from '@kitmi/types';\nimport Runnable from './Runnable';\nimport Routable from './Routable';\nimport ServiceContainer from './ServiceContainer';\nimport defaultServerOpts from './defaultServerOpts';\nimport * as builtinMiddlewares from './middlewares';\n\nexport function createWebServer(Base) {\n    /**\n     * Web server class.\n     * @class\n     * @extends Routable(App)\n     */\n    return class extends Routable(Base) {\n        /**\n         * @param {string} [name='server'] - The name of the server.\n         * @param {object} [options] - The app module's extra options defined in its parent's configuration.\n         * @property {object} [options.logger] - Logger options\n         * @property {bool} [options.verbose=false] - Flag to output trivial information for diagnostics\n         * @property {string} [options.workingPath] - App's working path, default to process.cwd()\n         * @property {string} [options.configPath] - App's config path, default to \"conf\" under workingPath\n         * @property {string} [options.configName] - App's config basename, default to \"app\"\n         * @property {string} [options.sourcePath='server'] - Relative path of back-end server source files\n         * @property {string} [options.appModulesPath=app_modules] - Relative path of child modules\n         */\n        constructor(name, options) {\n            if (typeof options === 'undefined' && isPlainObject(name)) {\n                options = name;\n                name = undefined;\n            }\n\n            super(name || 'server', {\n                ...defaultServerOpts,\n                ...options,\n            });\n\n            /**\n             * Hosting server.\n             * @member {WebServer}\n             **/\n            this.server = this;\n\n            /**\n             * Whether it is a server.\n             * @member {boolean}\n             **/\n            this.isServer = true;\n\n            /**\n             * App modules path.\n             * @member {string}\n             */\n            this.appModulesPath = this.toAbsolutePath(this.options.appModulesPath);\n\n            /**\n             * Base route.\n             * @member {string}\n             */\n            this.route = '/';\n\n            // add built-in middlewares\n            this.registry.middlewares = {\n                ...builtinMiddlewares,\n                ...this.registry.middlewares,\n            };\n\n            this.once('after:Initial', () => {\n                if (this.engine == null) {\n                    throw new InvalidConfiguration('Missing server engine feature, e.g. koa or hono.', this);\n                }\n            });\n\n            process.once('SIGINT', () => {\n                this.stop_().then(() => {}).catch((error) => console.error(error.message || error));\n            });\n        }\n\n        async stop_() {\n            let stopByThis = false;\n\n            if (this.started) {\n                stopByThis = true;\n\n                if (this.appModules) {\n                    await batchAsync_(this.appModules, (app) => app.stop_());\n                    delete this.appModules;\n                    delete this.appModulesByAlias;\n                }\n            }\n\n            if (stopByThis && this.httpServer) {\n                await new Promise((resolve, reject) => {\n                    this.httpServer.close((err) => {\n                        if (err) return reject(err);\n                        resolve();\n                    });\n                });\n\n                delete this.httpServer;\n                this.log('info', `The http service is stopped.`);\n            }\n\n            return super.stop_();\n        }\n\n        visitChildModules(vistor) {\n            super.visitChildModules(vistor);\n\n            if (this.appModules) {\n                _.each(this.appModules, vistor);\n            }\n        }\n\n        getExports() {\n            return this._stuffToExport;\n        }\n\n        /**\n         * Mount an app at specified route.\n         * @param {WebModule} app\n         */\n        mountApp(app) {\n            if (!this.appModules) {\n                this.appModules = {};\n                this.appModulesByAlias = {};\n            }\n\n            if (app.route in this.appModules) {\n                throw new Error(`The route \"${app.route}\" is already mounted by another app.`);\n            }\n\n            this.engine.mount(app.route, app.router);\n\n            this.appModules[app.route] = app;\n\n            if (app.name in this.appModulesByAlias) {\n                let existingApp = this.appModulesByAlias[app.name];\n                //move bucket\n                this.appModulesByAlias[`${existingApp.name}[@${existingApp.route}]`] = existingApp;\n                delete this.appModulesByAlias[app.name];\n\n                this.appModulesByAlias[`${app.name}[@${app.route}]`] = app;\n            } else {\n                this.appModulesByAlias[app.name] = app;\n            }\n\n            this.log('verbose', `All routes from app [${app.name}] are mounted under \"${app.route}\".`);\n        }\n\n        /**\n         * Get the app module object by base route\n         * @param {string} p - App module base route started with \"/\"\n         */\n        getAppByRoute(p) {\n            return this.appModules[p];\n        }\n\n        /**\n         * Get the app module object by app alias, usually the app name if no duplicate entry\n         * @param {string} a - App module alias\n         */\n        getAppByAlias(a) {\n            return this.appModulesByAlias[a];\n        }\n\n        /**\n         * Get a registered service\n         * @param {string} name\n         *\n         * @example\n         *  // Get service from a lib module\n         *  const service = app.getService('<lib name>/<service name>');\n         *  // e.g const service = app.getService('data/mysql.mydb');\n         *\n         *  // Get service from a web app module\n         *  const service = app.getService('<app name>:<service name>');\n         *  // e.g const service = app.getService('admin:mysql.mydb');\n         */\n        getService(name) {\n            let pos = name.indexOf(':');\n            if (pos === -1) {\n                return super.getService(name);\n            }\n\n            let modAlias = name.substring(0, pos);\n            name = name.substring(pos + 1);\n\n            let app = this.getAppByAlias(modAlias);\n            return app && app.getService(name, true);\n        }\n\n        _getFeatureFallbackPath() {\n            let pathArray = super._getFeatureFallbackPath();\n            pathArray.splice(1, 0, path.resolve(__dirname, 'serverFeatures'));\n\n            return pathArray;\n        }\n    };\n}\n\nconst WebServer = createWebServer(Runnable(ServiceContainer));\n\nexport default WebServer;\n"],"names":["createWebServer","Base","Routable","stop_","stopByThis","started","appModules","batchAsync_","app","appModulesByAlias","httpServer","Promise","resolve","reject","close","err","log","visitChildModules","vistor","_","each","getExports","_stuffToExport","mountApp","route","Error","engine","mount","router","name","existingApp","getAppByRoute","p","getAppByAlias","a","getService","pos","indexOf","modAlias","substring","_getFeatureFallbackPath","pathArray","splice","path","__dirname","constructor","options","isPlainObject","undefined","defaultServerOpts","server","isServer","appModulesPath","toAbsolutePath","registry","middlewares","builtinMiddlewares","once","InvalidConfiguration","process","then","catch","error","console","message","WebServer","Runnable","ServiceContainer"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}