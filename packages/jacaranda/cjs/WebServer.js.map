{"version":3,"sources":["../src/WebServer.js"],"sourcesContent":["import path from 'node:path';\nimport { _, batchAsync_, isPlainObject } from '@kitmi/utils';\nimport { InvalidConfiguration } from '@kitmi/types';\nimport Runnable from './Runnable';\nimport Routable from './Routable';\nimport ServiceContainer from './ServiceContainer';\nimport defaultServerOpts from './defaultServerOpts';\n\n/**\n * Web server class.\n * @class\n * @extends Routable(App)\n */\nclass WebServer extends Routable(Runnable(ServiceContainer)) {\n    /**\n     * @param {string} [name='server'] - The name of the server.\n     * @param {object} [options] - The app module's extra options defined in its parent's configuration.\n     * @property {object} [options.logger] - Logger options\n     * @property {bool} [options.verbose=false] - Flag to output trivial information for diagnostics\n     * @property {string} [options.env] - Environment, default to process.env.NODE_ENV\n     * @property {string} [options.workingPath] - App's working path, default to process.cwd()\n     * @property {string} [options.configPath] - App's config path, default to \"conf\" under workingPath\n     * @property {string} [options.configName] - App's config basename, default to \"app\"\n     * @property {string} [options.sourcePath='server'] - Relative path of back-end server source files\n     * @property {string} [options.appModulesPath=app_modules] - Relative path of child modules\n     */\n    constructor(name, options) {\n        if (typeof options === 'undefined' && isPlainObject(name)) {\n            options = name;\n            name = undefined;\n        }\n\n        super(name || 'server', {\n            ...defaultServerOpts,\n            ...options,\n        });\n\n        /**\n         * Hosting server.\n         * @member {WebServer}\n         **/\n        this.server = this;\n\n        /**\n         * Whether it is a server.\n         * @member {boolean}\n         **/\n        this.isServer = true;\n\n        /**\n         * App modules path.\n         * @member {string}\n         */\n        this.appModulesPath = this.toAbsolutePath(this.options.appModulesPath);\n\n        /**\n         * Base route.\n         * @member {string}\n         */\n        this.route = '/';\n\n        // preloaded modules\n        this.modulesRegistry = { ...this.options.modulesRegistry };\n\n        // register built-in middlewares\n        this.addMiddlewaresRegistryFrom(path.resolve(__dirname, 'middlewares'));\n\n        this.once('after:Initial', () => {\n            if (this.engine == null) {\n                throw new InvalidConfiguration('Missing server engine feature, e.g. koa or hono.', this);\n            }\n        });\n\n        process.on('SIGINT', () => {\n            this.stop_()\n                .catch((error) => console.error(error.message || error));\n        });\n    }\n\n    async stop_() {\n        let stopByThis = false;\n\n        if (this.started) {\n            stopByThis = true;\n\n            if (this.appModules) {\n                await batchAsync_(this.appModules, (app) => app.stop_());\n                delete this.appModules;\n                delete this.appModulesByAlias;\n            }\n        }\n\n        if (stopByThis && this.httpServer) {\n            await new Promise((resolve, reject) => {\n                this.httpServer.close((err) => {\n                    if (err) return reject(err);\n                    resolve();\n                });\n            });\n\n            delete this.httpServer;\n            this.log('info', `The http service is stopped.`);\n        }\n\n        return super.stop_();\n    }\n\n    visitChildModules(vistor) {\n        super.visitChildModules(vistor);\n\n        if (this.appModules) {\n            _.each(this.appModules, vistor);\n        }\n    }\n\n    getExports() {\n        return this._stuffToExport;\n    }\n\n    /**\n     * Mount an app at specified route.\n     * @param {WebModule} app\n     */\n    mountApp(app) {\n        if (!this.appModules) {\n            this.appModules = {};\n            this.appModulesByAlias = {};\n        }\n\n        if (app.route in this.appModules) {\n            throw new Error(`The route \"${app.route}\" is already mounted by another app.`);\n        }\n\n        this.engine.mount(app.route, app.router);\n\n        this.appModules[app.route] = app;\n\n        if (app.name in this.appModulesByAlias) {\n            let existingApp = this.appModulesByAlias[app.name];\n            //move bucket\n            this.appModulesByAlias[`${existingApp.name}[@${existingApp.route}]`] = existingApp;\n            delete this.appModulesByAlias[app.name];\n\n            this.appModulesByAlias[`${app.name}[@${app.route}]`] = app;\n        } else {\n            this.appModulesByAlias[app.name] = app;\n        }\n\n        this.log('verbose', `All routes from app [${app.name}] are mounted under \"${app.route}\".`);\n    }\n\n    /**\n     * Get the app module object by base route\n     * @param {string} p - App module base route started with \"/\"\n     */\n    getAppByRoute(p) {\n        return this.appModules[p];\n    }\n\n    /**\n     * Get the app module object by app alias, usually the app name if no duplicate entry\n     * @param {string} a - App module alias\n     */\n    getAppByAlias(a) {\n        return this.appModulesByAlias[a];\n    }\n\n    /**\n     * Require a js module from backend path\n     * @param {*} relativePath\n     */\n    require(relativePath) {\n        let modPath = path.join(this.sourcePath, relativePath);\n        return require(modPath);\n    }\n\n    /**\n     * Require a module from the source path of an app module\n     * @param {*} relativePath\n     */\n    requireFromApp(appName, relativePath) {\n        const app = this.getAppByAlias(appName);\n        return app.require(relativePath);\n    }\n\n    /**\n     * Get a registered service\n     * @param {string} name\n     *\n     * @example\n     *  // Get service from a lib module\n     *  const service = app.getService('<lib name>/<service name>');\n     *  // e.g const service = app.getService('data/mysql.mydb');\n     *\n     *  // Get service from a web app module\n     *  const service = app.getService('<app name>:<service name>');\n     *  // e.g const service = app.getService('admin:mysql.mydb');\n     */\n    getService(name) {\n        let pos = name.indexOf(':');\n        if (pos === -1) {\n            return super.getService(name);\n        }\n\n        let modAlias = name.substring(0, pos);\n        name = name.substring(pos + 1);\n\n        let app = this.getAppByAlias(modAlias);\n        return app && app.getService(name, true);\n    }\n\n    _getFeatureFallbackPath() {\n        let pathArray = super._getFeatureFallbackPath();\n        pathArray.splice(1, 0, path.resolve(__dirname, 'serverFeatures'));\n\n        return pathArray;\n    }\n}\n\nexport default WebServer;\n"],"names":["WebServer","Routable","Runnable","ServiceContainer","stop_","stopByThis","started","appModules","batchAsync_","app","appModulesByAlias","httpServer","Promise","resolve","reject","close","err","log","visitChildModules","vistor","_","each","getExports","_stuffToExport","mountApp","route","Error","engine","mount","router","name","existingApp","getAppByRoute","p","getAppByAlias","a","require","relativePath","modPath","path","join","sourcePath","requireFromApp","appName","getService","pos","indexOf","modAlias","substring","_getFeatureFallbackPath","pathArray","splice","__dirname","constructor","options","isPlainObject","undefined","defaultServerOpts","server","isServer","appModulesPath","toAbsolutePath","modulesRegistry","addMiddlewaresRegistryFrom","once","InvalidConfiguration","process","on","catch","error","console","message"],"mappings":"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"}