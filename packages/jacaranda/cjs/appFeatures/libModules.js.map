{"version":3,"sources":["../../src/appFeatures/libModules.js"],"sourcesContent":["/**\n * Load lib modules\n * @module Feature_LibModules\n *\n * @example\n *\n *  'libModules': {\n *      '<name>': {\n *          npmModule: false, // whether is a npm module\n *          options: { // module options\n *          },\n *          settings: { // can override module defined settings\n *          }\n *      }\n *  }\n */\n\nimport path from 'node:path';\nimport { _, batchAsync_ } from '@kitmi/utils';\nimport { fs, isDir_ } from '@kitmi/sys';\nimport { InvalidConfiguration } from '@kitmi/types';\nimport Feature from '../Feature';\nimport LibModule from '../LibModule';\n\nexport default {\n    /**\n     * This feature is loaded at plugin stage.\n     * @member {string}\n     */\n    stage: Feature.PLUGIN,\n\n    /**\n     * Load the feature.\n     * @param {App} app - The app module object.\n     * @param {object} entries - Lib module entries.\n     * @returns {Promise.<*>}\n     */\n    load_: async (app, entries) => {\n        return batchAsync_(entries, async (config, name) => {\n            let options = {\n                configType: app.options.configType,\n                logLevel: app.options.logLevel,\n                ...config.options,\n            };\n\n            let appPath;\n            let moduleMeta = app.registry?.libs?.[name];\n\n            if (moduleMeta != null) {\n                appPath = moduleMeta.appPath;\n            } else if (config.npmModule) {                \n                moduleMeta = await app.tryRequire_(name, true); \n                appPath = moduleMeta.appPath;\n            } else {\n                appPath = path.join(app.libModulesPath, name);\n            }\n\n            let exists = (await fs.pathExists(appPath)) && (await isDir_(appPath));\n            if (!exists) {\n                throw new InvalidConfiguration(`Lib [${name}] not exists.`, app, `libModules.${name}`);\n            }\n\n            let lib = new LibModule(app, name, appPath, { registry: moduleMeta?.registry, ...options });       \n\n            lib.once('configLoaded', () => {\n                if (!_.isEmpty(config.settings)) {\n                    lib.config.settings = { ...lib.config.settings, ...config.settings };\n                    app.log('verbose', `Lib settings of [${lib.name}] is overrided.`);\n                }\n            });\n\n            let relativePath = path.relative(app.workingPath, appPath);\n            app.log('verbose', `Loading lib [${lib.name}] from \"${relativePath}\" ...`);\n\n            await lib.start_();\n\n            app.registerLib(lib);  \n            app.log('verbose', `Lib [${lib.name}] is loaded.`);            \n        });\n    },\n};\n"],"names":["stage","Feature","PLUGIN","load_","app","entries","batchAsync_","config","name","options","configType","logLevel","appPath","moduleMeta","registry","libs","npmModule","tryRequire_","path","join","libModulesPath","exists","fs","pathExists","isDir_","InvalidConfiguration","lib","LibModule","once","_","isEmpty","settings","log","relativePath","relative","workingPath","start_","registerLib"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;;;;;;;;;;;;;;;CAeC;;;;+BASD;;;eAAA;;;iEAPiB;uBACc;qBACJ;uBACU;gEACjB;kEACE;;;;;;MAEtB,WAAe;IACX;;;KAGC,GACDA,OAAOC,gBAAO,CAACC,MAAM;IAErB;;;;;KAKC,GACDC,OAAO,OAAOC,KAAKC;QACf,OAAOC,IAAAA,kBAAW,EAACD,SAAS,OAAOE,QAAQC;YACvC,IAAIC,UAAU;gBACVC,YAAYN,IAAIK,OAAO,CAACC,UAAU;gBAClCC,UAAUP,IAAIK,OAAO,CAACE,QAAQ;gBAC9B,GAAGJ,OAAOE,OAAO;YACrB;YAEA,IAAIG;YACJ,IAAIC,aAAaT,IAAIU,QAAQ,EAAEC,MAAM,CAACP,KAAK;YAE3C,IAAIK,cAAc,MAAM;gBACpBD,UAAUC,WAAWD,OAAO;YAChC,OAAO,IAAIL,OAAOS,SAAS,EAAE;gBACzBH,aAAa,MAAMT,IAAIa,WAAW,CAACT,MAAM;gBACzCI,UAAUC,WAAWD,OAAO;YAChC,OAAO;gBACHA,UAAUM,iBAAI,CAACC,IAAI,CAACf,IAAIgB,cAAc,EAAEZ;YAC5C;YAEA,IAAIa,SAAS,AAAC,MAAMC,OAAE,CAACC,UAAU,CAACX,YAAc,MAAMY,IAAAA,WAAM,EAACZ;YAC7D,IAAI,CAACS,QAAQ;gBACT,MAAM,IAAII,2BAAoB,CAAC,CAAC,KAAK,EAAEjB,KAAK,aAAa,CAAC,EAAEJ,KAAK,CAAC,WAAW,EAAEI,KAAK,CAAC;YACzF;YAEA,IAAIkB,MAAM,IAAIC,kBAAS,CAACvB,KAAKI,MAAMI,SAAS;gBAAEE,UAAUD,YAAYC;gBAAU,GAAGL,OAAO;YAAC;YAEzFiB,IAAIE,IAAI,CAAC,gBAAgB;gBACrB,IAAI,CAACC,QAAC,CAACC,OAAO,CAACvB,OAAOwB,QAAQ,GAAG;oBAC7BL,IAAInB,MAAM,CAACwB,QAAQ,GAAG;wBAAE,GAAGL,IAAInB,MAAM,CAACwB,QAAQ;wBAAE,GAAGxB,OAAOwB,QAAQ;oBAAC;oBACnE3B,IAAI4B,GAAG,CAAC,WAAW,CAAC,iBAAiB,EAAEN,IAAIlB,IAAI,CAAC,eAAe,CAAC;gBACpE;YACJ;YAEA,IAAIyB,eAAef,iBAAI,CAACgB,QAAQ,CAAC9B,IAAI+B,WAAW,EAAEvB;YAClDR,IAAI4B,GAAG,CAAC,WAAW,CAAC,aAAa,EAAEN,IAAIlB,IAAI,CAAC,QAAQ,EAAEyB,aAAa,KAAK,CAAC;YAEzE,MAAMP,IAAIU,MAAM;YAEhBhC,IAAIiC,WAAW,CAACX;YAChBtB,IAAI4B,GAAG,CAAC,WAAW,CAAC,KAAK,EAAEN,IAAIlB,IAAI,CAAC,YAAY,CAAC;QACrD;IACJ;AACJ"}