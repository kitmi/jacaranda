{"version":3,"sources":["../../src/features/version.js"],"sourcesContent":["/**\n * Set app version\n * @module Feature_Version\n */\n\nimport { fs } from '@kitmi/sys';\nimport Feature from '../Feature';\n\nexport default {\n    /**\n     * This feature is loaded at init stage\n     * @member {string}\n     */\n    stage: Feature.INIT,\n\n    /**\n     * Load the feature\n     * @param {App} app - The cli app module object\n     * @param {string} version - Version information, use '@@package' to use the version info from package.json located under working folder\n     * @returns {Promise.<*>}\n     */\n    load_: async function (app, version) {\n        if (version === '@@package') {\n            let pkgFile = app.toAbsolutePath('package.json');\n            if (!(await fs.exists(pkgFile))) {\n                throw new Error('\"package.json\" not found in working directory. CWD: ' + app.workingPath);\n            }\n\n            let pkg = await fs.readJson(pkgFile);\n            version = pkg.version;\n        }\n\n        app.version = version;\n    },\n};\n"],"names":["stage","Feature","INIT","load_","app","version","pkgFile","toAbsolutePath","fs","exists","Error","workingPath","pkg","readJson"],"mappings":"AAAA;;;CAGC;;;;+BAKD;;;eAAA;;;qBAHmB;gEACC;;;;;;MAEpB,WAAe;IACX;;;KAGC,GACDA,OAAOC,gBAAO,CAACC,IAAI;IAEnB;;;;;KAKC,GACDC,OAAO,eAAgBC,GAAG,EAAEC,OAAO;QAC/B,IAAIA,YAAY,aAAa;YACzB,IAAIC,UAAUF,IAAIG,cAAc,CAAC;YACjC,IAAI,CAAE,MAAMC,OAAE,CAACC,MAAM,CAACH,UAAW;gBAC7B,MAAM,IAAII,MAAM,yDAAyDN,IAAIO,WAAW;YAC5F;YAEA,IAAIC,MAAM,MAAMJ,OAAE,CAACK,QAAQ,CAACP;YAC5BD,UAAUO,IAAIP,OAAO;QACzB;QAEAD,IAAIC,OAAO,GAAGA;IAClB;AACJ"}