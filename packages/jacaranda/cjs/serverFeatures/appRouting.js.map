{"version":3,"sources":["../../src/serverFeatures/appRouting.js"],"sourcesContent":["/**\n * Enable routing web requests to a child app.\n * @module Feature_AppRouting\n *\n * @example\n *\n *  'appRouting': {\n *      '<mounting point>': {\n *          name: 'app name',\n *          npmModule: false, // whether is a npm module\n *          options: { // module options\n *          },\n *          settings: { // can override module defined settings\n *          },\n *          middlewares: { // can override middlewares\n *          }\n *      }\n *  }\n */\n\nimport path from 'node:path';\nimport { _, batchAsync_ } from '@kitmi/utils';\nimport { fs, isDir_ } from '@kitmi/sys';\nimport { InvalidConfiguration } from '@kitmi/types';\nimport Feature from '../Feature';\n\nimport WebModule from '../WebModule';\n\nexport default {\n    /**\n     * This feature is loaded at plugin stage.\n     * @member {string}\n     */\n    stage: Feature.PLUGIN,\n\n    /**\n     * Load the feature.\n     * @param {WebServer} server - The web server module object.\n     * @param {object} routes - Routes and configuration.\n     * @returns {Promise.<*>}\n     */\n    load_: async (server, routes) =>\n        batchAsync_(routes, async (config, baseRoute) => {\n            if (!config.name) {\n                throw new InvalidConfiguration('Missing app name.', app, `appRouting.${baseRoute}.name`);\n            }\n\n            let options = {\n                env: server.env,\n                configType: server.options.configType,\n                logLevel: server.options.logLevel,\n                traceMiddlewares: server.options.traceMiddlewares,                \n                ...config.options,\n            };\n\n            let appPath;\n\n            if (config.npmModule) {\n                appPath = server.toAbsolutePath('node_modules', config.name);\n            } else {\n                appPath = path.join(server.appModulesPath, config.name);\n            }\n\n            let exists = (await fs.pathExists(appPath)) && (await isDir_(appPath));\n            if (!exists) {\n                throw new InvalidConfiguration(\n                    `App [${config.name}] not found at ${appPath}`,\n                    server,\n                    `appRouting[${baseRoute}].name`\n                );\n            }\n\n            let app = new WebModule(server, config.name, baseRoute, appPath, options);\n            app.now = server.now;\n\n            app.on('configLoaded', () => {\n                if (!_.isEmpty(config.overrides)) {\n                    Object.assign(app.config, config.overrides);\n                    server.log('verbose', 'App config is overrided.');\n                }\n\n                if (!_.isEmpty(config.settings)) {\n                    app.config.settings = Object.assign({}, app.config.settings, config.settings);\n                    server.log('verbose', `App settings of [${app.name}] is overrided.`);\n                }\n\n                if (!_.isEmpty(config.middlewares)) {\n                    let middlewaresToAppend = app.config.middlewares;\n                    app.config.middlewares = { ...config.middlewares };\n                    _.defaults(app.config.middlewares, middlewaresToAppend);\n                }\n            });\n\n            let relativePath = path.relative(server.workingPath, appPath);\n            server.log('verbose', `Loading app [${app.name}] from \"${relativePath}\" ...`);\n\n            await app.start_();\n\n            server.log('verbose', `App [${app.name}] is loaded.`);\n\n            //delayed the app routes mounting after all plugins of the server are loaded\n            server.on('before:' + Feature.FINAL, () => {\n                server.mountApp(app);\n            });\n        }),\n};\n"],"names":["stage","Feature","PLUGIN","load_","server","routes","batchAsync_","config","baseRoute","name","InvalidConfiguration","app","options","env","configType","logLevel","traceMiddlewares","appPath","npmModule","toAbsolutePath","path","join","appModulesPath","exists","fs","pathExists","isDir_","WebModule","now","on","_","isEmpty","overrides","Object","assign","log","settings","middlewares","middlewaresToAppend","defaults","relativePath","relative","workingPath","start_","FINAL","mountApp"],"mappings":"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"}