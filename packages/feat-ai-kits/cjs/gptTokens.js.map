{"version":3,"sources":["../src/gptTokens.js"],"sourcesContent":["import Feature from '../../jacaranda/src/Feature';\n\nexport default {\n    stage: Feature.SERVICE,\n\n    groupable: true,\n\n    packages: ['gpt-tokens'],\n\n    load_: async function (app, options, name) {\n        const { GPTTokens } = await app.tryRequire_('gpt-tokens');\n\n        const { model } = app.featureConfig(\n            options,\n            {\n                schema: {\n                    model: { type: 'text', default: 'gpt-3.5-turbo' },\n                },\n            },\n            name\n        );\n\n        const service = {\n            getUsedTokens: (messages) => {\n                const usageInfo = new GPTTokens({\n                    model,\n                    messages,\n                });\n\n                return usageInfo.usedTokens;\n            },\n        };\n\n        app.registerService(name, service);\n    },\n};\n"],"names":["stage","Feature","SERVICE","groupable","packages","load_","app","options","name","GPTTokens","tryRequire_","model","featureConfig","schema","type","default","service","getUsedTokens","messages","usageInfo","usedTokens","registerService"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAEA;;;eAAA;;;gEAFoB;;;;;;MAEpB,WAAe;IACXA,OAAOC,gBAAO,CAACC,OAAO;IAEtBC,WAAW;IAEXC,UAAU;QAAC;KAAa;IAExBC,OAAO,eAAgBC,GAAG,EAAEC,OAAO,EAAEC,IAAI;QACrC,MAAM,EAAEC,SAAS,EAAE,GAAG,MAAMH,IAAII,WAAW,CAAC;QAE5C,MAAM,EAAEC,KAAK,EAAE,GAAGL,IAAIM,aAAa,CAC/BL,SACA;YACIM,QAAQ;gBACJF,OAAO;oBAAEG,MAAM;oBAAQC,SAAS;gBAAgB;YACpD;QACJ,GACAP;QAGJ,MAAMQ,UAAU;YACZC,eAAe,CAACC;gBACZ,MAAMC,YAAY,IAAIV,UAAU;oBAC5BE;oBACAO;gBACJ;gBAEA,OAAOC,UAAUC,UAAU;YAC/B;QACJ;QAEAd,IAAIe,eAAe,CAACb,MAAMQ;IAC9B;AACJ"}