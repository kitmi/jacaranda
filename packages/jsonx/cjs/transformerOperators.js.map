{"version":3,"sources":["../src/transformerOperators.js"],"sourcesContent":["//Query & aggregate operators (pure)\nconst SIZE = 'size';\nconst SUM = 'sum';\nconst GET_TYPE = 'typeof';\n\nconst FIND_INDEX = 'findIndex';\nconst FIND = 'find';\nconst IF = 'if';\n\n//Type casting operators (pure)\nconst CAST_ARRAY = 'castArray';\n\n//Math operators (pure)\nconst ADD = 'add';\nconst SUB = 'sub';\nconst MUL = 'mul';\nconst DIV = 'div';\nconst MOD = 'mod';\nconst POW = 'pow';\n\n//Collection operators (pure)\nconst KEYS = 'keys';\nconst VALUES = 'values';\nconst ENTRIES = 'pairs';\nconst OBJ_TO_ARRAY = 'toArray'; // like $objectToArray of mongodb\nconst FILTER_NULL = 'xNull';\nconst PICK = 'pick'; // filter by key\nconst OMIT = 'omit';\nconst SLICE = 'slice'; // limit offset, count\nconst GROUP = 'groupBy';\nconst SORT = 'orderBy';\nconst REVERSE = 'reverse';\nconst CONCAT = 'concat';\nconst JOIN = 'join';\nconst MERGE = 'merge';\nconst FILTER = 'filterBy'; // filter by value\nconst REMAP = 'remap'; // map a key to another name\nconst TO_JSON = 'stringfy';\nconst TO_OBJ = 'parse';\n\n//Value updater (pure, copy on write)\nconst SET = 'set';\nconst ADD_ITEM = 'addItem';\nconst ASSIGN = 'assign';\nconst CREATE = 'create';\nconst APPLY = 'apply';\nconst SANITIZE = 'sanitize';\nconst SPLIT = 'split';\nconst INTERPOLATE = 'interpolate';\n\n//Colllection modifier\nconst MAP = 'map';\nconst REDUCE = 'reduce';\n\nexport default {\n    SIZE,\n    SUM,\n    GET_TYPE,\n    FIND_INDEX,\n    FIND,\n    IF,\n\n    CAST_ARRAY,\n\n    ADD,\n    SUB,\n    MUL,\n    DIV,\n    MOD,\n    POW,\n\n    KEYS,\n    VALUES,\n    ENTRIES,\n    OBJ_TO_ARRAY,\n    FILTER_NULL,\n    PICK, // filter by key\n    OMIT,\n    SLICE,\n    GROUP,\n    SORT,\n    REVERSE,\n    CONCAT,\n    JOIN,\n    MERGE,\n    FILTER, // filter by value\n    REMAP, // map a key to another name\n    TO_JSON,\n    TO_OBJ,\n\n    SET,\n    ADD_ITEM,\n    ASSIGN,\n    CREATE,\n    APPLY,\n    SANITIZE,\n    SPLIT,\n    INTERPOLATE,\n\n    MAP,\n    REDUCE,\n};\n"],"names":["SIZE","SUM","GET_TYPE","FIND_INDEX","FIND","IF","CAST_ARRAY","ADD","SUB","MUL","DIV","MOD","POW","KEYS","VALUES","ENTRIES","OBJ_TO_ARRAY","FILTER_NULL","PICK","OMIT","SLICE","GROUP","SORT","REVERSE","CONCAT","JOIN","MERGE","FILTER","REMAP","TO_JSON","TO_OBJ","SET","ADD_ITEM","ASSIGN","CREATE","APPLY","SANITIZE","SPLIT","INTERPOLATE","MAP","REDUCE"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA,oCAAoC;;;;;+BAsDpC;;;eAAA;;;AArDA,MAAMA,OAAO;AACb,MAAMC,MAAM;AACZ,MAAMC,WAAW;AAEjB,MAAMC,aAAa;AACnB,MAAMC,OAAO;AACb,MAAMC,KAAK;AAEX,+BAA+B;AAC/B,MAAMC,aAAa;AAEnB,uBAAuB;AACvB,MAAMC,MAAM;AACZ,MAAMC,MAAM;AACZ,MAAMC,MAAM;AACZ,MAAMC,MAAM;AACZ,MAAMC,MAAM;AACZ,MAAMC,MAAM;AAEZ,6BAA6B;AAC7B,MAAMC,OAAO;AACb,MAAMC,SAAS;AACf,MAAMC,UAAU;AAChB,MAAMC,eAAe,WAAW,iCAAiC;AACjE,MAAMC,cAAc;AACpB,MAAMC,OAAO,QAAQ,gBAAgB;AACrC,MAAMC,OAAO;AACb,MAAMC,QAAQ,SAAS,sBAAsB;AAC7C,MAAMC,QAAQ;AACd,MAAMC,OAAO;AACb,MAAMC,UAAU;AAChB,MAAMC,SAAS;AACf,MAAMC,OAAO;AACb,MAAMC,QAAQ;AACd,MAAMC,SAAS,YAAY,kBAAkB;AAC7C,MAAMC,QAAQ,SAAS,4BAA4B;AACnD,MAAMC,UAAU;AAChB,MAAMC,SAAS;AAEf,qCAAqC;AACrC,MAAMC,MAAM;AACZ,MAAMC,WAAW;AACjB,MAAMC,SAAS;AACf,MAAMC,SAAS;AACf,MAAMC,QAAQ;AACd,MAAMC,WAAW;AACjB,MAAMC,QAAQ;AACd,MAAMC,cAAc;AAEpB,sBAAsB;AACtB,MAAMC,MAAM;AACZ,MAAMC,SAAS;MAEf,WAAe;IACXxC;IACAC;IACAC;IACAC;IACAC;IACAC;IAEAC;IAEAC;IACAC;IACAC;IACAC;IACAC;IACAC;IAEAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IAEAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IAEAC;IACAC;AACJ"}