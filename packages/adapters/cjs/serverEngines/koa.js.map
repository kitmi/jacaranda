{"version":3,"sources":["../../src/serverEngines/koa.js"],"sourcesContent":["import http from 'node:http';\nimport { _, toBoolean, text } from '@kitmi/utils';\n\nclass KoaEngine {\n    constructor(appModule) {\n        this.app = appModule;\n    }\n\n    async init_(config) {\n        const Koa = await this.app.tryRequire_('koa');\n        const mounter = await this.app.tryRequire_('koa-mount');\n        const Router = await this.app.tryRequire_('@koa/router');\n\n        const koa = new Koa();\n\n        //create a module router\n        this.createModuleRouter = (appModule) => {\n            console.log('createModuleRouter', appModule.name);\n\n            const moduleEngine = new KoaEngine(appModule);\n            const _koa = new Koa();\n\n            //inject the appModule instance in the first middleware\n            _koa.use((ctx, next) => {\n                ctx.module = appModule;\n                return next();\n            });\n\n            moduleEngine.koa = _koa;\n            return moduleEngine;\n        };\n\n        //create a router instance\n        this.createRouter = (baseRoute) => {\n            console.log('createRouter', baseRoute);\n\n            return !baseRoute || baseRoute === '/'\n                ? new Router()\n                : new Router({ prefix: text.dropIfEndsWith(baseRoute, '/') });\n        };\n\n        //mount a sub engine instance\n        this.mount = (route, moduleRouter) => {\n            this.koa.use(mounter(route, moduleRouter.koa));\n        };\n\n        this.koa = koa;\n        this._initialize(config);\n    }\n\n    _initialize(options) {\n        const koa = this.koa;\n        const server = this.app;\n        koa.proxy = options.trustProxy && toBoolean(options.trustProxy);\n\n        if (options.subdomainOffset != null) {\n            koa.subdomainOffset = options.subdomainOffset;\n        }\n\n        if (options.keys) {\n            koa.keys = _.castArray(options.keys);\n        }\n\n        koa.on('error', (err, ctx) => {\n            const info = { err, app: ctx.module.name };\n\n            if (err.status && err.status < 500) {\n                if (ctx.log) {\n                    ctx.log.warn(info);\n                } else {\n                    ctx.module.log('warn', 'REQUEST ERROR', info);\n                }\n\n                return;\n            }\n\n            if (ctx.log) {\n                ctx.log.error(info);\n            } else {\n                ctx.module.log('error', 'SERVER ERROR', info);\n            }\n        });\n\n        server.httpServer = http.createServer(koa.callback());\n\n        let port = options.port;\n\n        server.on('ready', async () => {\n            return new Promise((resolve, reject) => {\n                server.httpServer.listen(port, function (err) {\n                    if (err) {\n                        return reject(err);\n                    }\n\n                    let address = server.httpServer.address();\n\n                    let host;\n                    if (address.family === 'IPv6' && address.address === '::') {\n                        host = '127.0.0.1';\n                    } else {\n                        host = address.address;\n                    }\n\n                    server.host = `${host}:${address.port}`;\n                    server.port = address.port;\n\n                    server.log('info', `A koa http service is listening on port [${address.port}] ...`);\n                    resolve();\n                });\n            });\n        });\n    }\n\n    use(middleware) {\n        this.koa.use(middleware);\n    }\n\n    attach(router) {\n        this.koa.use(router.routes());\n        this.koa.use(router.allowedMethods());\n    }\n}\n\nexport default KoaEngine;\n"],"names":["KoaEngine","init_","config","Koa","app","tryRequire_","mounter","Router","koa","createModuleRouter","appModule","console","log","name","moduleEngine","_koa","use","ctx","next","module","createRouter","baseRoute","prefix","text","dropIfEndsWith","mount","route","moduleRouter","_initialize","options","server","proxy","trustProxy","toBoolean","subdomainOffset","keys","_","castArray","on","err","info","status","warn","error","httpServer","http","createServer","callback","port","Promise","resolve","reject","listen","address","host","family","middleware","attach","router","routes","allowedMethods","constructor"],"mappings":"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"}