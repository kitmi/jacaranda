{"version":3,"sources":["../../src/serverEngines/koa.js"],"sourcesContent":["import http from 'node:http';\nimport { _, toBoolean, text } from '@kitmi/utils';\n\nclass KoaEngine {\n    constructor(app) {\n        this.app = app;\n    }\n\n    async init_(config) {\n        const Koa = await this.app.tryRequire_('koa');\n        const mounter = await this.app.tryRequire_('koa-mount');\n        const Router = await this.app.tryRequire_('@koa/router');\n\n        //create a koa instance and inject the appModule instance in the first middleware\n        const createEngine = (engineWrapper) => {\n            const koa = new Koa();\n\n            //inject the appModule instance in the first middleware\n            koa.use((ctx, next) => {\n                ctx.appModule = engineWrapper.app;                \n                return next();\n            });\n\n            return koa;\n        }        \n\n        //create a sub engine instance and inject the appModule instance in the first middleware\n        this.createSubEngine = (subApp) => {\n            const subEngineWrapper = new KoaEngine(subApp);\n            subEngineWrapper.koa = createEngine(subEngineWrapper);\n        };\n\n        //create a router instance\n        this.createRouter = (baseRoute) => {\n            console.log('createRouter', baseRoute);\n            return (!baseRoute || baseRoute === '/') ? new Router() : new Router({ prefix: text.dropIfEndsWith(baseRoute, '/') });\n        };\n\n        //mount a sub engine instance\n        this.mount = (route, childApp) => {\n            this.koa.use(mounter(route, childApp.engine.koa));\n        }\n\n        this.koa = createEngine(this);\n        this._initialize(config); \n    }    \n\n    _initialize(options) {\n        const koa = this.koa;\n        const server = this.app;\n        koa.proxy = options.trustProxy && toBoolean(options.trustProxy);\n\n        if (options.subdomainOffset != null) {\n            koa.subdomainOffset = options.subdomainOffset;\n        }\n\n        if (options.keys) {\n            koa.keys = _.castArray(options.keys);\n        }\n\n        koa.on('error', (err, ctx) => {\n            const info = { err, app: ctx.appModule.name };\n\n            if (err.status && err.status < 500) {\n                if (ctx.log) {\n                    ctx.log.warn(info);\n                } else {\n                    ctx.appModule.log('warn', 'REQUEST ERROR', info);\n                }\n\n                return;\n            }\n\n            if (ctx.log) {\n                ctx.log.error(info);\n            } else {\n                ctx.appModule.log('error', 'SERVER ERROR', info);\n            }\n        });\n\n        server.httpServer = http.createServer(koa.callback());\n\n        let port = options.port;\n\n        server.on('ready', () => {\n            server.httpServer.listen(port, function (err) {\n                if (err) throw err;\n\n                let address = server.httpServer.address();\n\n                let host;\n                if (address.family === 'IPv6' && address.address === '::') {\n                    host = '127.0.0.1';\n                } else {\n                    host = address.address;\n                }\n\n                server.host = `${host}:${address.port}`;\n                server.port = address.port;\n\n                server.log('info', `A koa http service is listening on port [${address.port}] ...`);\n                /**\n                 * Http server ready event\n                 * @event WebServer#httpReady\n                 */\n                server.emit_('httpReady', server);\n            });\n        });\n    }\n\n    use(middleware) {\n        this.koa.use(middleware);\n    }\n\n    attach(router) {\n        this.koa.use(router.routes());\n        this.koa.use(router.allowedMethods());\n    }\n}\n\nexport default KoaEngine;\n"],"names":["KoaEngine","init_","config","Koa","app","tryRequire_","mounter","Router","createEngine","engineWrapper","koa","use","ctx","next","appModule","createSubEngine","subApp","subEngineWrapper","createRouter","baseRoute","console","log","prefix","text","dropIfEndsWith","mount","route","childApp","engine","_initialize","options","server","proxy","trustProxy","toBoolean","subdomainOffset","keys","_","castArray","on","err","info","name","status","warn","error","httpServer","http","createServer","callback","port","listen","address","host","family","emit_","middleware","attach","router","routes","allowedMethods","constructor"],"mappings":"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"}