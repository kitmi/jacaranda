{"version":3,"sources":["../../src/processors/common.js"],"sourcesContent":["import {\n    _,\n    trimLines,\n    deleteLines,\n    grepLines,\n    quote,\n    unquote,\n    csvLineParse,\n    padLeft,\n    padRight,\n    base64Decode,\n    pascalCase,\n    camelCase,\n    kebabCase,\n    snakeCase,\n} from '@kitmi/utils';\n\nconst _quoteSet = ['\"', \"'\"];\n\nexport default {\n    trimLines: (value, options, meta, context) => trimLines(value, options?.lineDelimiter),\n\n    stripLines: (value, options, meta, context) =>\n        deleteLines(value, Array.isArray(options) ? options : options?.patterns, options?.lineDelimiter),\n    grepLines: (value, options, meta, context) =>\n        grepLines(value, Array.isArray(options) ? options : options?.patterns, options?.lineDelimiter),\n\n    quote: (value, options, meta, context) => quote(value, options?.quoteChar),\n    unquote: (value, options, meta, context) => unquote(value, options?.unescape, options?.quoteSet ?? _quoteSet),\n\n    fromCsv: (value, options, meta, context) => csvLineParse(value, options), // delimiter, emptyAsNull\n\n    padLeft: (value, options, meta, context) =>\n        padLeft(value, typeof options === 'string' ? options : _.repeat(' ', options)),\n    padRight: (value, options, meta, context) =>\n        padRight(value, typeof options === 'string' ? options : _.repeat(' ', options)),\n\n    fromBase64: (value, options, meta, context) => base64Decode(value),\n\n    pascalCase: (value) => pascalCase(value),\n    camelCase: (value) => camelCase(value),\n    kebabCase: (value) => kebabCase(value),\n    snakeCase: (value) => snakeCase(value),\n};\n"],"names":["_quoteSet","trimLines","value","options","meta","context","lineDelimiter","stripLines","deleteLines","Array","isArray","patterns","grepLines","quote","quoteChar","unquote","unescape","quoteSet","fromCsv","csvLineParse","padLeft","_","repeat","padRight","fromBase64","base64Decode","pascalCase","camelCase","kebabCase","snakeCase"],"mappings":";;;;+BAmBA;;;eAAA;;;uBAJO;AAEP,MAAMA,YAAY;IAAC;IAAK;CAAI;MAE5B,WAAe;IACXC,WAAW,CAACC,OAAOC,SAASC,MAAMC,UAAYJ,IAAAA,gBAAS,EAACC,OAAOC,SAASG;IAExEC,YAAY,CAACL,OAAOC,SAASC,MAAMC,UAC/BG,IAAAA,kBAAW,EAACN,OAAOO,MAAMC,OAAO,CAACP,WAAWA,UAAUA,SAASQ,UAAUR,SAASG;IACtFM,WAAW,CAACV,OAAOC,SAASC,MAAMC,UAC9BO,IAAAA,gBAAS,EAACV,OAAOO,MAAMC,OAAO,CAACP,WAAWA,UAAUA,SAASQ,UAAUR,SAASG;IAEpFO,OAAO,CAACX,OAAOC,SAASC,MAAMC,UAAYQ,IAAAA,YAAK,EAACX,OAAOC,SAASW;IAChEC,SAAS,CAACb,OAAOC,SAASC,MAAMC,UAAYU,IAAAA,cAAO,EAACb,OAAOC,SAASa,UAAUb,SAASc,YAAYjB;IAEnGkB,SAAS,CAAChB,OAAOC,SAASC,MAAMC,UAAYc,IAAAA,mBAAY,EAACjB,OAAOC;IAEhEiB,SAAS,CAAClB,OAAOC,SAASC,MAAMC,UAC5Be,IAAAA,cAAO,EAAClB,OAAO,OAAOC,YAAY,WAAWA,UAAUkB,QAAC,CAACC,MAAM,CAAC,KAAKnB;IACzEoB,UAAU,CAACrB,OAAOC,SAASC,MAAMC,UAC7BkB,IAAAA,eAAQ,EAACrB,OAAO,OAAOC,YAAY,WAAWA,UAAUkB,QAAC,CAACC,MAAM,CAAC,KAAKnB;IAE1EqB,YAAY,CAACtB,OAAOC,SAASC,MAAMC,UAAYoB,IAAAA,mBAAY,EAACvB;IAE5DwB,YAAY,CAACxB,QAAUwB,IAAAA,iBAAU,EAACxB;IAClCyB,WAAW,CAACzB,QAAUyB,IAAAA,gBAAS,EAACzB;IAChC0B,WAAW,CAAC1B,QAAU0B,IAAAA,gBAAS,EAAC1B;IAChC2B,WAAW,CAAC3B,QAAU2B,IAAAA,gBAAS,EAAC3B;AACpC"}