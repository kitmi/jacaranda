{"version":3,"sources":["../src/modifier.js"],"sourcesContent":["import { InvalidArgument, ValidationError } from '@kitmi/types';\nimport { eachAsync_ } from '@kitmi/utils';\n\nfunction getHandler(modifier, handlers) {\n    let handlerType = null;\n    let handlerKey = modifier.substring(1);\n    let isValidator = false;\n    let isActivator = false;\n\n    if (modifier.startsWith('~')) {\n        handlerType = handlers.validator;\n        isValidator = true;\n    } else if (modifier.startsWith('|')) {\n        handlerType = handlers.processor;\n    } else if (modifier.startsWith('=')) {\n        handlerType = handlers.activator;\n        isActivator = true;\n    } else {\n        throw new InvalidArgument(`Unknown modifier: ${modifier}`);\n    }\n\n    const hanlder = handlerType[handlerKey];\n\n    if (!hanlder) {\n        throw new InvalidArgument(`Handler not found for modifier: ${modifier}`);\n    }\n\n    if (isValidator) {\n        return validatorWrapper(hanlder);\n    }\n\n    if (isActivator) {\n        return activatorWrapper(hanlder);\n    }\n\n    return processorWrapper(hanlder);\n}\n\nfunction validatorWrapper(validator) {\n    return (value, options, meta, context) => {\n        if (value == null) return value;\n\n        const [validated, reason] = validator(value, options, meta, context);\n\n        if (!validated) {\n            throw new ValidationError(reason, { value, options });\n        }\n\n        return value;\n    };\n}\n\nfunction processorWrapper(processor) {\n    return (value, options, meta, context) => {\n        if (value == null) return value;\n        return processor(value, options, meta, context);\n    };\n}\n\nfunction activatorWrapper(activator) {\n    return (value, options, meta, context) => {\n        if (value == null) {\n            return activator(options, meta, context);\n        }\n\n        return value;\n    };\n}\n\nfunction createModifier(modifierItem, handlers) {\n    let modifier;\n    let options;\n    const type = typeof modifierItem;\n\n    if (type === 'string') {\n        modifier = modifierItem;\n    } else if (Array.isArray(modifierItem)) {\n        [modifier, options] = modifierItem;\n    } else if (type === 'object') {\n        modifier = modifierItem.name;\n        options = modifierItem.options;\n    }\n\n    if (!modifier) {\n        throw new InvalidArgument(`Invalid modifier syntax: ${JSON.stringify(modifierItem)}`);\n    }\n\n    return [getHandler(modifier, handlers), options];\n}\n\nconst applyModifiers = (value, meta, context) =>\n    meta.post.reduce((_value, modifier) => {\n        const [handler, options] = createModifier(modifier, context.system.handlers);\n        return handler(_value, options, meta, context);\n    }, value);\n\nconst applyModifiers_ = async (value, meta, context) => {\n    await eachAsync_(meta.post, async (modifier) => {\n        const [handler, options] = createModifier(modifier, context.system.handlers);\n        value = await handler(value, options, meta, context);\n    });\n\n    return value;\n};\n\nexport const postProcess_ = async (value, meta, opts) => {\n    if (meta.post) {\n        value = await applyModifiers_(value, meta, opts);\n    }\n\n    return value;\n};\n\nexport const postProcess = (value, meta, opts) => {\n    if (meta.post) {\n        value = applyModifiers(value, meta, opts);\n    }\n\n    return value;\n};\n"],"names":["postProcess","postProcess_","getHandler","modifier","handlers","handlerType","handlerKey","substring","isValidator","isActivator","startsWith","validator","processor","activator","InvalidArgument","hanlder","validatorWrapper","activatorWrapper","processorWrapper","value","options","meta","context","validated","reason","ValidationError","createModifier","modifierItem","type","Array","isArray","name","JSON","stringify","applyModifiers","post","reduce","_value","handler","system","applyModifiers_","eachAsync_","opts"],"mappings":"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"}