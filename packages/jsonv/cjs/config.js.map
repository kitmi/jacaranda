{"version":3,"sources":["../src/config.js"],"sourcesContent":["import { formatPath, makePath } from './utils';\n\nconst validatorHandlers = {};\nconst mapOfValidators = {};\n\n/**\n * Creates a new context object that represents the context of a child object within a larger data structure.\n * @param {Object} context - The current context of the data structure.\n * @param {*} currentValue - The current value of the object that the child object belongs to.\n * @param {string} childKey - The key of the child object within the parent object.\n * @param {*} childValue - The value of the child object.\n * @returns {Object} A new context object that represents the context of the child object within the larger data structure.\n */\nexport const getChildContext = (context, currentValue, childKey, childValue, extra) => ({\n    ...context,\n    ...extra,\n    path: makePath(childKey, context.path),\n    $$PARENT: currentValue,\n    $$CURRENT: childValue,\n    $$KEY: childKey,\n});\n\nexport const contextVarKeys = new Set(['$$', '$$ROOT', '$$PARENT', '$$CURRENT', '$$KEY']);\n\nexport const messages = {\n    //Exception messages\n    SYNTAX_OP_NOT_ALONE: 'Transformer operator can only be used alone in one pipeline stage.',\n    SYNTAX_INVALID_EXPR: (expr) => `Invalid expression syntax: ${JSON.stringify(expr)}`, // complext expr, not split out operator yet\n    SYNTAX_INVALID_OP: (op, prefix) => `Invalid operator \"${op}\" at ${formatPath(prefix)}.`,\n    SYNTAX_NUMBER_AS_EXPR: 'Number value cannot be used as a transformer expression.',\n    SYNTAX_INVALID_CONTEXT: (key) => `Invalid context variable \"${key}\".`,\n\n    INVALID_TRANSFORMER_OP: (op) => `Invalid transformer operator \"${op}\".`,\n    UNSUPPORTED_VALIDATION_OP: (op, prefix) => `Unsupported validation operator \"${op}\" at ${formatPath(prefix)}.`,\n    INVALID_COLLECTION_OP: (op) => `Invalid collection operator \"${op}\".`,\n\n    INVALID_TRANSFORMER_HANDLER: (tag) => `Handler for transformer \"${tag}\" not found.`,\n    INVALID_TEST_HANLDER: (tag) => `Handler for validator \"${tag}\" not found.`,\n\n    INVALID_OP_EXPR: (op, right, expected) =>\n        `Invalid \"${op}\" expression: ${JSON.stringify(right)}` +\n        (expected ? `, expected: ${JSON.stringify(expected)}.` : '.'),\n    INVALID_COLLECTION_OP_EXPR: (collectionOp, op, right) =>\n        `Invalid \"${op}\" expression for collection \"${collectionOp}\" traversing: ${JSON.stringify(right)}.`,\n    UNSUPPORTED_TYPE: (type) => `Supported type \"${type}\".`,\n\n    OPERAND_NOT_TUPLE: (op) =>\n        `The right operand of a collection operator ${op ? '\"' + op + '\" ' : ''}must be a two-tuple.`,\n    OPERAND_NOT_TUPLE_2_OR_3: (op) => `The right operand of a \"${op}\" operator must be either a 2-tuple or a 3-tuple.`,\n    OPERAND_NOT_ARRAY: (op) => `The right operand of a \"${op}\" operator must be an array.`,\n    OPERAND_NOT_BOOL: (op) => `The right operand of a \"${op}\" operator must be a boolean value.`,\n    OPERAND_NOT_STRING: (op) => `The right operand of a \"${op}\" operator must be a string.`,\n    OPERAND_NOT_OBJECT: (op) => `The right operand of a \"${op}\" operator must be an object.`,\n\n    VALUE_NOT_ARRAY: (op) => `The value to take a \"${op}\" operator must be an array.`,\n    VALUE_NOT_COLLECTION: (op) => `The value to take a \"${op}\" operator must be either an object or an array.`,\n    VALUE_NOT_PRIMITIVE: (op) => `The value to take a \"${op}\" operator must be a primitive value, e.g. string, number.`,\n    VALUE_NOT_STRING: (op) => `The value to take a \"${op}\" operator must be a string.`,\n    VALUE_NOT_OBJECT: (op) => `The value to take a \"${op}\" operator must be an object.`,\n\n    REQUIRE_RIGHT_OPERAND: (op) => `Binary operator \"${op}\" requires a right operand.`,\n    RIGHT_OPERAND_NOT_EMPTY: (op) => `Unary operator \"${op}\" does not require a right operand.`,\n\n    MULTI_ERRORS: (numErrors) => `${numErrors} errors occurred.`,\n};\n\nconst messagesCache = {};\n\n//JSON Validation Syntax Runtime Configuration\nconst config = {\n    messages,\n    addValidatorToMap: (tokens, handler) => {\n        const [tag, ...alias] = tokens;\n\n        alias.forEach((op) => {\n            if (op in mapOfValidators) {\n                throw new Error(`Duplicate validator alias \"${op}\" for operator \"${tag}\".`);\n            }\n            mapOfValidators[op] = tag;\n        });\n\n        if (tag in validatorHandlers) {\n            throw new Error(`Duplicate operator name \"${tag}\".`);\n        }\n\n        validatorHandlers[tag] = handler;\n    },\n    overrideValidator: (tag, handler) => {\n        validatorHandlers[tag] = handler;\n    },\n\n    getValidatorTag: (op) => mapOfValidators[op],\n    getValidator: (tag) => validatorHandlers[tag],\n\n    loadMessages: (locale, moreMessages) => {\n        messagesCache[locale] = moreMessages;\n        return config;\n    },\n    setLocale: (locale) => {\n        if (locale in messagesCache) {\n            Object.assign(messages, messagesCache[locale]);\n        }\n    },\n    supportedLocales: new Set(['en', 'en-AU', 'en-GB', 'en-US', 'zh', 'zh-CN', 'zh-HK', 'zh-TW'])\n};\n\nexport default config;\n"],"names":["contextVarKeys","getChildContext","messages","validatorHandlers","mapOfValidators","context","currentValue","childKey","childValue","extra","path","makePath","$$PARENT","$$CURRENT","$$KEY","Set","SYNTAX_OP_NOT_ALONE","SYNTAX_INVALID_EXPR","expr","JSON","stringify","SYNTAX_INVALID_OP","op","prefix","formatPath","SYNTAX_NUMBER_AS_EXPR","SYNTAX_INVALID_CONTEXT","key","INVALID_TRANSFORMER_OP","UNSUPPORTED_VALIDATION_OP","INVALID_COLLECTION_OP","INVALID_TRANSFORMER_HANDLER","tag","INVALID_TEST_HANLDER","INVALID_OP_EXPR","right","expected","INVALID_COLLECTION_OP_EXPR","collectionOp","UNSUPPORTED_TYPE","type","OPERAND_NOT_TUPLE","OPERAND_NOT_TUPLE_2_OR_3","OPERAND_NOT_ARRAY","OPERAND_NOT_BOOL","OPERAND_NOT_STRING","OPERAND_NOT_OBJECT","VALUE_NOT_ARRAY","VALUE_NOT_COLLECTION","VALUE_NOT_PRIMITIVE","VALUE_NOT_STRING","VALUE_NOT_OBJECT","REQUIRE_RIGHT_OPERAND","RIGHT_OPERAND_NOT_EMPTY","MULTI_ERRORS","numErrors","messagesCache","config","addValidatorToMap","tokens","handler","alias","forEach","Error","overrideValidator","getValidatorTag","getValidator","loadMessages","locale","moreMessages","setLocale","Object","assign","supportedLocales"],"mappings":"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"}