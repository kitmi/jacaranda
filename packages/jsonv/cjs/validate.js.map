{"version":3,"sources":["../src/validate.js"],"sourcesContent":["// JSON Validation Syntax\nimport { get as _get, esmCheck } from '@kit/utils';\nimport JsvError from './JvsError';\nimport config, { getChildContext } from './config';\nimport ops from './validateOperators';\n\nconst MSG = config.messages;\nconst DEFAULT_LOCALE = 'en';\n\nfunction getUnmatchedExplanation(op, leftValue, rightValue, context) {\n    if (context.$$ERROR) {\n        return context.$$ERROR;\n    }\n\n    let getter;\n\n    if (MSG.validationErrors) {\n        getter = MSG.validationErrors[op];\n    } else {\n        let locale = context.locale || DEFAULT_LOCALE;\n        if (!config.supportedLocales.has(locale)) {\n            locale = DEFAULT_LOCALE;\n        }\n        const messages = esmCheck(require('./locale/' + locale));\n        getter = messages.validationErrors[op];\n    }\n\n    return getter(context.name, leftValue, rightValue, context);\n}\n\n/**\n * Tests whether a left-hand value satisfies a given operator and right-hand value.\n * @param {*} left - The left-hand value to test.\n * @param {string} op - The operator to use for the test.\n * @param {*} right - The right-hand value to test against.\n * @param {Object} options - Options to use for the test.\n * @param {Object} context - The current context of the data structure being validated.\n * @returns {*} The result of the test.\n * @throws {Error} If the specified operator does not have a registered validator.\n */\nexport function test(left, op, right, options, context) {\n    const handler = config.getValidator(op);\n\n    if (!handler) {\n        throw new Error(MSG.INVALID_TEST_HANLDER(op));\n    }\n\n    return handler(left, right, options, context);\n}\n\n/**\n * Validate the given object with JSON Expression Syntax (JES)\n * @param {*} actual - The object to match\n * @param {*} jvs - Expected state in JSON Expression Syntax\n * @param {*} options - Validation options\n * @param {*} context - Validation context\n * @returns {array} - [ {boolean} matched, {string} unmatchedReason ]\n */\nfunction validate(actual, jvs, options, context = {}) {\n    if (jvs == null) {\n        return true;\n    }\n\n    const type = typeof jvs;\n\n    if (type === 'string') {\n        if (jvs.length === 0 || jvs[0] !== '$') {\n            throw new Error(MSG.SYNTAX_INVALID_EXPR(jvs));\n        }\n\n        if (jvs.startsWith('$$')) {\n            return validate(actual, { $equal: jvs }, options, context);\n        }\n\n        return validate(actual, { [jvs]: null }, options, context);\n    }\n\n    const { throwError, abortEarly, asPredicate, plainError } = options;\n\n    if (Array.isArray(jvs)) {\n        return validate(actual, { $match: jvs }, options, context);\n    }\n\n    if (type !== 'object') {\n        return validate(actual, { $equal: jvs }, options, context);\n    }\n\n    let { path } = context;\n    const errors = [];\n    const _options = !abortEarly && throwError ? { ...options, throwError: false } : options;\n\n    for (let operator in jvs) {\n        let op, left, _context;\n\n        const opValue = jvs[operator];\n\n        if (\n            // $match\n            (operator.length > 1 && operator[0] === '$') ||\n            // |>$all\n            (operator.length > 3 && operator[0] === '|' && operator[2] === '$')\n        ) {\n            //validator\n            op = config.getValidatorTag(operator);\n            if (!op) {\n                throw new Error(MSG.UNSUPPORTED_VALIDATION_OP(operator, path));\n            }\n\n            left = actual;\n            _context = context;\n        } else {\n            const fieldName = operator;\n            let isComplexKey = fieldName.indexOf('.') !== -1;\n\n            //pick a field and then apply manipulation\n            left = actual != null ? (isComplexKey ? _get(actual, fieldName) : actual[fieldName]) : undefined;\n\n            _context = getChildContext(context, actual, fieldName, left);\n\n            if (opValue != null && typeof opValue === 'object') {\n                op = ops.MATCH;\n            } else {\n                op = ops.EQUAL;\n            }\n        }\n\n        if (!test(left, op, opValue, _options, _context)) {\n            if (asPredicate) {\n                return false;\n            }\n\n            const reason = getUnmatchedExplanation(op, left, opValue, _context);\n            if (abortEarly && throwError) {\n                throw new JsvError(reason, left, _context.path);\n            }\n\n            errors.push(plainError ? reason : new JsvError(reason, left, _context.path));\n            if (abortEarly) {\n                break;\n            }\n        }\n    }\n\n    if (errors.length > 0) {\n        if (asPredicate) {\n            return false;\n        }\n\n        if (throwError) {\n            throw new JsvError(errors, actual, path);\n        }\n\n        return errors.length === 1 && plainError ? errors[0] : errors;\n    }\n\n    return true;\n}\n\nexport default validate;\n"],"names":["test","MSG","config","messages","DEFAULT_LOCALE","getUnmatchedExplanation","op","leftValue","rightValue","context","$$ERROR","getter","validationErrors","locale","supportedLocales","has","esmCheck","require","name","left","right","options","handler","getValidator","Error","INVALID_TEST_HANLDER","validate","actual","jvs","type","length","SYNTAX_INVALID_EXPR","startsWith","$equal","throwError","abortEarly","asPredicate","plainError","Array","isArray","$match","path","errors","_options","operator","_context","opValue","getValidatorTag","UNSUPPORTED_VALIDATION_OP","fieldName","isComplexKey","indexOf","_get","undefined","getChildContext","ops","MATCH","EQUAL","reason","JsvError","push"],"mappings":"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"}