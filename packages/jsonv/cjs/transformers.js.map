{"version":3,"sources":["../src/transformers.js"],"sourcesContent":["// JSON Expression Syntax (JES)\nimport { isInteger, get as _get, getBy, keyAt, valueAt } from '@kitmi/utils';\nimport config from './config';\nimport ops from './transformerOperators';\nimport transform from './transform';\nimport { test } from './validate';\n\nconst MSG = config.messages;\n\nconst UNARY = true;\nconst BINARY = false;\n\n// Collection operators (pure)\nconst OP_THIS = [ops.THIS, UNARY, '$this', '$@>', '$$CURRENT'];\nconst OP_PARENT = [ops.PARENT, UNARY, '$parent', '$@<', '$$PARENT'];\nconst OP_ROOT = [ops.ROOT, UNARY, '$root', '$@^', '$$ROOT'];\nconst OP_KEY = [ops.KEY, UNARY, '$key', '$$KEY'];\n\nconst OP_GET_BY_INDEX = [ops.VALUE_AT, BINARY, '$at', '$getByIndex', '$nth']; // supports -1 as the last index, -2 the second last\nconst OP_GET_BY_KEY = [ops.GET_BY_KEY, BINARY, '$valueOf', '$getByKey']; // support key path\nconst OP_KEY_AT = [ops.KEY_AT, BINARY, '$keyAt', '$nthKey'];\n\nconst OP_MATCH = [ops.MATCH, BINARY, '$has', '$match', '$all', '$validate', '$when'];\n\nconfig.addTransformerToMap(OP_THIS, (left, context) => context.THIS);\nconfig.addTransformerToMap(OP_PARENT, (left, context) => context.PARENT);\nconfig.addTransformerToMap(OP_ROOT, (left, context) => context.ROOT);\nconfig.addTransformerToMap(OP_KEY, (left, context) => context.KEY);\n\nconfig.addTransformerToMap(OP_GET_BY_INDEX, (left, right, context) => {\n    right = transform(undefined, right, context, true);\n\n    if (right != null && !isInteger(right)) {\n        throw new Error(MSG.INVALID_OP_EXPR(ops.VALUE_AT));\n    }\n\n    return valueAt(left, right);\n});\n\nconfig.addTransformerToMap(OP_GET_BY_KEY, (left, right, context) => {\n    right = transform(undefined, right, context, true);\n\n    return getBy(left, right, (obj, key) => transform(obj, key, context));\n});\n\nconfig.addTransformerToMap(OP_KEY_AT, (left, right, context) => {\n    right = transform(undefined, right, context, true);\n\n    if (right != null && !isInteger(right)) {\n        throw new Error(MSG.INVALID_OP_EXPR(ops.VALUE_AT));\n    }\n\n    return keyAt(left, right);\n});\n\nconst matchOptions = { throwError: false, abortEarly: true, asPredicate: true };\n\nconfig.addTransformerToMap(OP_MATCH, (left, right, context) => test(left, ops.MATCH, right, matchOptions, context));\n\nexport default transform;\n"],"names":["MSG","config","messages","UNARY","BINARY","OP_THIS","ops","THIS","OP_PARENT","PARENT","OP_ROOT","ROOT","OP_KEY","KEY","OP_GET_BY_INDEX","VALUE_AT","OP_GET_BY_KEY","GET_BY_KEY","OP_KEY_AT","KEY_AT","OP_MATCH","MATCH","addTransformerToMap","left","context","right","transform","undefined","isInteger","Error","INVALID_OP_EXPR","valueAt","getBy","obj","key","keyAt","matchOptions","throwError","abortEarly","asPredicate","test"],"mappings":"AAAA,+BAA+B;;;;;+BA2D/B;;;eAAA;;;uBA1D8D;+DAC3C;6EACH;kEACM;0BACD;;;;;;AAErB,MAAMA,MAAMC,eAAM,CAACC,QAAQ;AAE3B,MAAMC,QAAQ;AACd,MAAMC,SAAS;AAEf,8BAA8B;AAC9B,MAAMC,UAAU;IAACC,6BAAG,CAACC,IAAI;IAAEJ;IAAO;IAAS;IAAO;CAAY;AAC9D,MAAMK,YAAY;IAACF,6BAAG,CAACG,MAAM;IAAEN;IAAO;IAAW;IAAO;CAAW;AACnE,MAAMO,UAAU;IAACJ,6BAAG,CAACK,IAAI;IAAER;IAAO;IAAS;IAAO;CAAS;AAC3D,MAAMS,SAAS;IAACN,6BAAG,CAACO,GAAG;IAAEV;IAAO;IAAQ;CAAQ;AAEhD,MAAMW,kBAAkB;IAACR,6BAAG,CAACS,QAAQ;IAAEX;IAAQ;IAAO;IAAe;CAAO,EAAE,oDAAoD;AAClI,MAAMY,gBAAgB;IAACV,6BAAG,CAACW,UAAU;IAAEb;IAAQ;IAAY;CAAY,EAAE,mBAAmB;AAC5F,MAAMc,YAAY;IAACZ,6BAAG,CAACa,MAAM;IAAEf;IAAQ;IAAU;CAAU;AAE3D,MAAMgB,WAAW;IAACd,6BAAG,CAACe,KAAK;IAAEjB;IAAQ;IAAQ;IAAU;IAAQ;IAAa;CAAQ;AAEpFH,eAAM,CAACqB,mBAAmB,CAACjB,SAAS,CAACkB,MAAMC,UAAYA,QAAQjB,IAAI;AACnEN,eAAM,CAACqB,mBAAmB,CAACd,WAAW,CAACe,MAAMC,UAAYA,QAAQf,MAAM;AACvER,eAAM,CAACqB,mBAAmB,CAACZ,SAAS,CAACa,MAAMC,UAAYA,QAAQb,IAAI;AACnEV,eAAM,CAACqB,mBAAmB,CAACV,QAAQ,CAACW,MAAMC,UAAYA,QAAQX,GAAG;AAEjEZ,eAAM,CAACqB,mBAAmB,CAACR,iBAAiB,CAACS,MAAME,OAAOD;IACtDC,QAAQC,IAAAA,kBAAS,EAACC,WAAWF,OAAOD,SAAS;IAE7C,IAAIC,SAAS,QAAQ,CAACG,IAAAA,gBAAS,EAACH,QAAQ;QACpC,MAAM,IAAII,MAAM7B,IAAI8B,eAAe,CAACxB,6BAAG,CAACS,QAAQ;IACpD;IAEA,OAAOgB,IAAAA,cAAO,EAACR,MAAME;AACzB;AAEAxB,eAAM,CAACqB,mBAAmB,CAACN,eAAe,CAACO,MAAME,OAAOD;IACpDC,QAAQC,IAAAA,kBAAS,EAACC,WAAWF,OAAOD,SAAS;IAE7C,OAAOQ,IAAAA,YAAK,EAACT,MAAME,OAAO,CAACQ,KAAKC,MAAQR,IAAAA,kBAAS,EAACO,KAAKC,KAAKV;AAChE;AAEAvB,eAAM,CAACqB,mBAAmB,CAACJ,WAAW,CAACK,MAAME,OAAOD;IAChDC,QAAQC,IAAAA,kBAAS,EAACC,WAAWF,OAAOD,SAAS;IAE7C,IAAIC,SAAS,QAAQ,CAACG,IAAAA,gBAAS,EAACH,QAAQ;QACpC,MAAM,IAAII,MAAM7B,IAAI8B,eAAe,CAACxB,6BAAG,CAACS,QAAQ;IACpD;IAEA,OAAOoB,IAAAA,YAAK,EAACZ,MAAME;AACvB;AAEA,MAAMW,eAAe;IAAEC,YAAY;IAAOC,YAAY;IAAMC,aAAa;AAAK;AAE9EtC,eAAM,CAACqB,mBAAmB,CAACF,UAAU,CAACG,MAAME,OAAOD,UAAYgB,IAAAA,cAAI,EAACjB,MAAMjB,6BAAG,CAACe,KAAK,EAAEI,OAAOW,cAAcZ;MAE1G,WAAeE,kBAAS"}