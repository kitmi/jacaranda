{"version":3,"sources":["../../src/locale/en.js"],"sourcesContent":["import { namingFactory } from '../utils';\nimport vops from '../validateOperators';\n\nconst nameOfValue = (custom) => (custom?.lowerCase ? 'the value' : 'The value');\nconst formatName = namingFactory(nameOfValue);\n\nconst messages = {\n    formatName,\n    validationErrors: {\n        [vops.EQUAL]: (name, left, right, context) =>\n            `${formatName(name, left, context)} must be ${JSON.stringify(right)}.`,\n        [vops.NOT_EQUAL]: (name, left, right, context) =>\n            `${formatName(name, left, context)} must not be ${JSON.stringify(right)}.`,\n        [vops.NOT]: (name, left, right, context) =>\n            `${formatName(name, left, context)} must not match ${JSON.stringify(right)}.`,\n        [vops.GREATER_THAN]: (name, left, right, context) =>\n            `${formatName(name, left, context)} must be greater than ${right}.`,\n        [vops.GREATER_THAN_OR_EQUAL]: (name, left, right, context) =>\n            `${formatName(name, left, context)} must be greater than or equal to ${right}.`,\n        [vops.LESS_THAN]: (name, left, right, context) =>\n            `${formatName(name, left, context)} must be less than ${right}.`,\n        [vops.LESS_THAN_OR_EQUAL]: (name, left, right, context) =>\n            `${formatName(name, left, context)} must not exceed ${right}.`,\n        [vops.IN]: (name, left, right, context) =>\n            `${formatName(name, left, context)} must be one of ${JSON.stringify(right)}.`,\n        [vops.NOT_IN]: (name, left, right, context) =>\n            `${formatName(name, left, context)} must not be any one of ${JSON.stringify(right)}.`,\n        [vops.EXISTS]: (name, left, right, context) =>\n            `${formatName(name, left, context)} ${right ? 'must not be null' : 'must be null'}.`,\n        [vops.REQUIRED]: (name, left, right, context) => `${formatName(name, left, context)} is required.`,\n        [vops.TYPE]: (name, left, right, context) =>\n            `The value of ${formatName(name, left, context)} must be a(n) \"${right}\".`,\n        [vops.MATCH]: (name, left, right, context) =>\n            `${formatName(name, left, context)} must match ${JSON.stringify(right)}.`,\n        [vops.MATCH_ANY]: (name, left, right, context) =>\n            `${formatName(name, left, context)} does not match any of given criterias.`,\n\n        [vops.ALL_MATCH]: (name, left, right, context) =>\n            `One of the element of ${formatName(name, left, context, {\n                lowerCase: true,\n            })} does not match the requirement(s).`,\n        [vops.ANY_ONE_MATCH]: (name, left, right, context) =>\n            `None of the element of ${formatName(name, left, context, {\n                lowerCase: true,\n            })} matches the requirement(s).`,\n\n        [vops.HAS_KEYS]: (name, left, right, context) =>\n            `${formatName(name, left, context)} must have all of these keys [${\n                Array.isArray(right) ? right.join(', ') : [right]\n            }].`,\n        [vops.START_WITH]: (name, left, right, context) =>\n            `${formatName(name, left, context)} must start with \"${right}\".`,\n        [vops.END_WITH]: (name, left, right, context) => `${formatName(name, left, context)} must end with \"${right}\".`,\n        [vops.MATCH_PATTERN]: (name, left, right, context) => `${formatName(name, left, context)} must match the pattern \"${right}\".`,\n        [vops.CONTAINS]: (name, left, right, context) => `${formatName(name, left, context)} must contain \"${right}\".`,\n        [vops.SAME_AS]: (name, left, right, context) =>\n            `${formatName(name, left, context)} does not match ${formatName(right)}.`,\n    },\n};\n\nexport default messages;\n"],"names":["nameOfValue","custom","lowerCase","formatName","namingFactory","messages","validationErrors","vops","EQUAL","name","left","right","context","JSON","stringify","NOT_EQUAL","NOT","GREATER_THAN","GREATER_THAN_OR_EQUAL","LESS_THAN","LESS_THAN_OR_EQUAL","IN","NOT_IN","EXISTS","REQUIRED","TYPE","MATCH","MATCH_ANY","ALL_MATCH","ANY_ONE_MATCH","HAS_KEYS","Array","isArray","join","START_WITH","END_WITH","MATCH_PATTERN","CONTAINS","SAME_AS"],"mappings":"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"}