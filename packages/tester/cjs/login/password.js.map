{"version":3,"sources":["../../src/login/password.js"],"sourcesContent":["import { get } from '@kitmi/utils';\n\n/**\n * Use username and password to login and get the access token.\n * @param {*} client \n * @param {Object} loginOptions \n * @property {String} loginOptions.endpoint - The login endpoint.\n * @property {String} loginOptions.username - The username, can be customized by usernameField.\n * @property {String} loginOptions.password - The password.\n * @property {String} [loginOptions.usernameField] - The username field name, default \"username\".\n * @property {String} [loginOptions.tokenKey] - The token key path, default \"token\".\n * @property {Object} [loginOptions.query] - The query parameters.\n * @property {Object} [loginOptions.headers] - Extra headers.\n * @private\n */\nconst passwordAuth = async (client, loginOptions) => {\n    const usernameField = loginOptions.usernameField || 'username';\n\n    if (!loginOptions.endpoint || !loginOptions[usernameField] || !loginOptions.password) {\n        throw new Error(`\"endpoint\", \"${usernameField}\", \"password\" is required.`);\n    }\n\n    let body = await client.post(\n        loginOptions.endpoint,\n        {\n            [usernameField]: loginOptions[usernameField],\n            password: loginOptions.password,\n        },\n        loginOptions.query,\n        loginOptions.headers ? { headers: loginOptions.headers } : null\n    );\n    let accessToken;\n    \n    if (loginOptions.tokenKey) {\n        accessToken = get(body, loginOptions.tokenKey);\n    } else {\n        accessToken = body.token;\n    }\n\n    return accessToken;\n};\n\nexport default passwordAuth;"],"names":["passwordAuth","client","loginOptions","usernameField","endpoint","password","Error","body","post","query","headers","accessToken","tokenKey","get","token"],"mappings":";;;;+BA0CA;;;eAAA;;;uBA1CoB;AAEpB;;;;;;;;;;;;CAYC,GACD,MAAMA,eAAe,OAAOC,QAAQC;IAChC,MAAMC,gBAAgBD,aAAaC,aAAa,IAAI;IAEpD,IAAI,CAACD,aAAaE,QAAQ,IAAI,CAACF,YAAY,CAACC,cAAc,IAAI,CAACD,aAAaG,QAAQ,EAAE;QAClF,MAAM,IAAIC,MAAM,CAAC,aAAa,EAAEH,cAAc,0BAA0B,CAAC;IAC7E;IAEA,IAAII,OAAO,MAAMN,OAAOO,IAAI,CACxBN,aAAaE,QAAQ,EACrB;QACI,CAACD,cAAc,EAAED,YAAY,CAACC,cAAc;QAC5CE,UAAUH,aAAaG,QAAQ;IACnC,GACAH,aAAaO,KAAK,EAClBP,aAAaQ,OAAO,GAAG;QAAEA,SAASR,aAAaQ,OAAO;IAAC,IAAI;IAE/D,IAAIC;IAEJ,IAAIT,aAAaU,QAAQ,EAAE;QACvBD,cAAcE,IAAAA,UAAG,EAACN,MAAML,aAAaU,QAAQ;IACjD,OAAO;QACHD,cAAcJ,KAAKO,KAAK;IAC5B;IAEA,OAAOH;AACX;MAEA,WAAeX"}