{"version":3,"sources":["../src/createAuth.js"],"sourcesContent":["import { _ } from '@kitmi/utils';\nimport * as loginMethods from './login';\nimport * as accessMethods from './access';\n\n// Cache for storing user tokens\nconst tokenCache = {};\n\n/**\n * Returns a middleware function that adds user authentication to a client.\n * @param {string} authKey - The user tag or user authentication object.\n * @param {Object} authConfig - The user authentication settings.\n * @returns {Function} A middleware function that adds user authentication to a client.\n * @throws {Error} If the user authentication settings are missing required fields.\n * @private\n */\nfunction createAuth(authKey, authConfig) {\n    const { loginType = 'password', accessType = 'jwt' } = authConfig;\n\n    const accessMethod = accessMethods[accessType];\n    if (!accessMethod) {\n        throw new Error(`Unsuppported accessType \"${accessType}\". Should be one of ${_.keys(accessMethods)}.`);\n    }\n\n    return async (client) => {\n        let accessToken = tokenCache[authKey];\n\n        // If the token is not cached, authenticate the user and cache the token\n        if (!accessToken) {\n            const loginMethod = loginMethods[loginType];\n            if (!loginMethod) {\n                throw new Error(`Unsuppported loginType \"${loginType}\". Should be one of ${_.keys(loginMethods)}.`);\n            }\n\n            accessToken = tokenCache[authKey] = await loginMethod(client, authConfig.loginOptions);\n        }\n\n        await accessMethod(client, accessToken);\n    };\n}\n\nexport default createAuth;\n"],"names":["tokenCache","createAuth","authKey","authConfig","loginType","accessType","accessMethod","accessMethods","Error","_","keys","client","accessToken","loginMethod","loginMethods","loginOptions"],"mappings":";;;;+BAwCA;;;eAAA;;;uBAxCkB;+DACY;gEACC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE/B,gCAAgC;AAChC,MAAMA,aAAa,CAAC;AAEpB;;;;;;;CAOC,GACD,SAASC,WAAWC,OAAO,EAAEC,UAAU;IACnC,MAAM,EAAEC,YAAY,UAAU,EAAEC,aAAa,KAAK,EAAE,GAAGF;IAEvD,MAAMG,eAAeC,OAAa,CAACF,WAAW;IAC9C,IAAI,CAACC,cAAc;QACf,MAAM,IAAIE,MAAM,CAAC,yBAAyB,EAAEH,WAAW,oBAAoB,EAAEI,QAAC,CAACC,IAAI,CAACH,SAAe,CAAC,CAAC;IACzG;IAEA,OAAO,OAAOI;QACV,IAAIC,cAAcZ,UAAU,CAACE,QAAQ;QAErC,wEAAwE;QACxE,IAAI,CAACU,aAAa;YACd,MAAMC,cAAcC,MAAY,CAACV,UAAU;YAC3C,IAAI,CAACS,aAAa;gBACd,MAAM,IAAIL,MAAM,CAAC,wBAAwB,EAAEJ,UAAU,oBAAoB,EAAEK,QAAC,CAACC,IAAI,CAACI,QAAc,CAAC,CAAC;YACtG;YAEAF,cAAcZ,UAAU,CAACE,QAAQ,GAAG,MAAMW,YAAYF,QAAQR,WAAWY,YAAY;QACzF;QAEA,MAAMT,aAAaK,QAAQC;IAC/B;AACJ;MAEA,WAAeX"}