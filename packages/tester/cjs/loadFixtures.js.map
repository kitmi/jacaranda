{"version":3,"sources":["../src/loadFixtures.js"],"sourcesContent":["import dbgGetCallerFile from '@kitmi/utils/dbgGetCallerFile';\nimport path from 'node:path';\nimport { fs } from '@kitmi/sys';\n\nexport default function loadFixtures(testCase) {\n    const callerFileName = dbgGetCallerFile();\n    const baseName = path.basename(callerFileName, '.spec.js');\n    const testCaseDir = path.resolve('./test/fixtures', baseName);\n\n    if (!fs.existsSync(testCaseDir)) {\n        throw new Error('Fixtures directory not exist: ' + testCaseDir);\n    }\n\n    const files = fs.readdirSync(testCaseDir);\n    files.forEach((fixtureFile) => {\n        const fixtureFilePath = path.join(testCaseDir, fixtureFile);\n        const testCaseName = path.basename(fixtureFilePath, '.json');\n        const testCaseData = fs.readJsonSync(fixtureFilePath);\n\n        it(testCaseName, () => testCase(testCaseData));\n    });\n}\n"],"names":["loadFixtures","testCase","callerFileName","dbgGetCallerFile","baseName","path","basename","testCaseDir","resolve","fs","existsSync","Error","files","readdirSync","forEach","fixtureFile","fixtureFilePath","join","testCaseName","testCaseData","readJsonSync","it"],"mappings":";;;;+BAIA;;;eAAwBA;;;yEAJK;iEACZ;qBACE;;;;;;AAEJ,SAASA,aAAaC,QAAQ;IACzC,MAAMC,iBAAiBC,IAAAA,yBAAgB;IACvC,MAAMC,WAAWC,iBAAI,CAACC,QAAQ,CAACJ,gBAAgB;IAC/C,MAAMK,cAAcF,iBAAI,CAACG,OAAO,CAAC,mBAAmBJ;IAEpD,IAAI,CAACK,OAAE,CAACC,UAAU,CAACH,cAAc;QAC7B,MAAM,IAAII,MAAM,mCAAmCJ;IACvD;IAEA,MAAMK,QAAQH,OAAE,CAACI,WAAW,CAACN;IAC7BK,MAAME,OAAO,CAAC,CAACC;QACX,MAAMC,kBAAkBX,iBAAI,CAACY,IAAI,CAACV,aAAaQ;QAC/C,MAAMG,eAAeb,iBAAI,CAACC,QAAQ,CAACU,iBAAiB;QACpD,MAAMG,eAAeV,OAAE,CAACW,YAAY,CAACJ;QAErCK,GAAGH,cAAc,IAAMjB,SAASkB;IACpC;AACJ"}