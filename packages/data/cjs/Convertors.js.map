{"version":3,"sources":["../src/Convertors.js"],"sourcesContent":["const validator = require('validator');\nconst { _ } = require('@genx/july');\n\nexports.toBoolean = (value) =>\n    typeof value === 'boolean'\n        ? value\n        : validator.toBoolean(value.toString(), true);\n\nexports.toText = (value, noTrim) => {\n    if (value) {\n        value = typeof value !== 'string' ? value.toString() : value;\n        return noTrim ? value : value.trim();\n    }\n\n    return value;\n};\n\nexports.toInt = (value, radix) =>\n    _.isInteger(value) ? value : (typeof value === 'string' ? parseInt(value, radix) : NaN);\n\nexports.toFloat = (value) =>\n    _.isFinite(value) ? value : validator.toFloat(value);\n\nexports.jsonToBase64 = (obj) =>\n    Buffer.from(JSON.stringify(obj)).toString('base64');\n\nexports.base64ToJson = (base64) =>\n    JSON.parse(Buffer.from(base64, 'base64').toString('ascii'));\n\nexports.toKVPairs = (arrayOfObjects, property, transformer) => {\n    const keyGetter =\n        typeof property === 'function' ? property : (obj) => obj[property];\n\n    return arrayOfObjects.reduce((table, obj) => {\n        table[keyGetter(obj)] = transformer ? transformer(obj) : obj;\n        return table;\n    }, {});\n};\n\nexports.toSet = (arrayOfObjects, property) => {\n    if (!arrayOfObjects) return new Set();\n\n    const valueGetter =\n        typeof property === 'function' ? property : (obj) => obj[property];\n    const result = new Set();\n\n    arrayOfObjects.forEach((obj) => result.add(valueGetter(obj)));\n\n    return result;\n};\n\n/**\n * Remap the keys of object elements in an array, like projection.\n * @param {*} object\n * @param {*} mapping - key to newKey or key to array[ newKey, valueMap ] for next level mapping\n * @param {boolean} keepUnmapped - If true, will keep those not in mapping as its original key, otherwise filter out\n */\nconst mapKeysDeep = (object, mapping, keepUnmapped) => {\n    if (typeof mapping === 'string') return { [mapping]: object };\n\n    const newObj = {};\n    _.forOwn(object, (v, k) => {\n        if (k in mapping) {\n            const nk = mapping[k];\n            if (Array.isArray(nk)) {\n                newObj[nk[0]] = {\n                    ...newObj[nk[0]],\n                    ...mapKeysDeep(v, nk[1], keepUnmapped),\n                };\n            } else {\n                newObj[nk] = v;\n            }\n        } else {\n            if (keepUnmapped) {\n                newObj[k] = v;\n            }\n        }\n    });\n\n    return newObj;\n};\n\nconst mapArraysDeep = (arrayOfObjects, mapping, keepUnmapped) =>\n    _.map(arrayOfObjects, (obj) => mapKeysDeep(obj, mapping, keepUnmapped));\n\nexports.mapKeysDeep = mapKeysDeep;\nexports.mapArraysDeep = mapArraysDeep;\n"],"names":["validator","require","_","exports","toBoolean","value","toString","toText","noTrim","trim","toInt","radix","isInteger","parseInt","NaN","toFloat","isFinite","jsonToBase64","obj","Buffer","from","JSON","stringify","base64ToJson","base64","parse","toKVPairs","arrayOfObjects","property","transformer","keyGetter","reduce","table","toSet","Set","valueGetter","result","forEach","add","mapKeysDeep","object","mapping","keepUnmapped","newObj","forOwn","v","k","nk","Array","isArray","mapArraysDeep","map"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";AAAA,MAAMA,YAAYC,QAAQ;AAC1B,MAAM,EAAEC,CAAC,EAAE,GAAGD,QAAQ;AAEtBE,QAAQC,SAAS,GAAG,CAACC,QACjB,OAAOA,UAAU,YACXA,QACAL,UAAUI,SAAS,CAACC,MAAMC,QAAQ,IAAI;AAEhDH,QAAQI,MAAM,GAAG,CAACF,OAAOG;IACrB,IAAIH,OAAO;QACPA,QAAQ,OAAOA,UAAU,WAAWA,MAAMC,QAAQ,KAAKD;QACvD,OAAOG,SAASH,QAAQA,MAAMI,IAAI;IACtC;IAEA,OAAOJ;AACX;AAEAF,QAAQO,KAAK,GAAG,CAACL,OAAOM,QACpBT,EAAEU,SAAS,CAACP,SAASA,QAAS,OAAOA,UAAU,WAAWQ,SAASR,OAAOM,SAASG;AAEvFX,QAAQY,OAAO,GAAG,CAACV,QACfH,EAAEc,QAAQ,CAACX,SAASA,QAAQL,UAAUe,OAAO,CAACV;AAElDF,QAAQc,YAAY,GAAG,CAACC,MACpBC,OAAOC,IAAI,CAACC,KAAKC,SAAS,CAACJ,MAAMZ,QAAQ,CAAC;AAE9CH,QAAQoB,YAAY,GAAG,CAACC,SACpBH,KAAKI,KAAK,CAACN,OAAOC,IAAI,CAACI,QAAQ,UAAUlB,QAAQ,CAAC;AAEtDH,QAAQuB,SAAS,GAAG,CAACC,gBAAgBC,UAAUC;IAC3C,MAAMC,YACF,OAAOF,aAAa,aAAaA,WAAW,CAACV,MAAQA,GAAG,CAACU,SAAS;IAEtE,OAAOD,eAAeI,MAAM,CAAC,CAACC,OAAOd;QACjCc,KAAK,CAACF,UAAUZ,KAAK,GAAGW,cAAcA,YAAYX,OAAOA;QACzD,OAAOc;IACX,GAAG,CAAC;AACR;AAEA7B,QAAQ8B,KAAK,GAAG,CAACN,gBAAgBC;IAC7B,IAAI,CAACD,gBAAgB,OAAO,IAAIO;IAEhC,MAAMC,cACF,OAAOP,aAAa,aAAaA,WAAW,CAACV,MAAQA,GAAG,CAACU,SAAS;IACtE,MAAMQ,SAAS,IAAIF;IAEnBP,eAAeU,OAAO,CAAC,CAACnB,MAAQkB,OAAOE,GAAG,CAACH,YAAYjB;IAEvD,OAAOkB;AACX;AAEA;;;;;CAKC,GACD,MAAMG,cAAc,CAACC,QAAQC,SAASC;IAClC,IAAI,OAAOD,YAAY,UAAU,OAAO;QAAE,CAACA,QAAQ,EAAED;IAAO;IAE5D,MAAMG,SAAS,CAAC;IAChBzC,EAAE0C,MAAM,CAACJ,QAAQ,CAACK,GAAGC;QACjB,IAAIA,KAAKL,SAAS;YACd,MAAMM,KAAKN,OAAO,CAACK,EAAE;YACrB,IAAIE,MAAMC,OAAO,CAACF,KAAK;gBACnBJ,MAAM,CAACI,EAAE,CAAC,EAAE,CAAC,GAAG;oBACZ,GAAGJ,MAAM,CAACI,EAAE,CAAC,EAAE,CAAC;oBAChB,GAAGR,YAAYM,GAAGE,EAAE,CAAC,EAAE,EAAEL,aAAa;gBAC1C;YACJ,OAAO;gBACHC,MAAM,CAACI,GAAG,GAAGF;YACjB;QACJ,OAAO;YACH,IAAIH,cAAc;gBACdC,MAAM,CAACG,EAAE,GAAGD;YAChB;QACJ;IACJ;IAEA,OAAOF;AACX;AAEA,MAAMO,gBAAgB,CAACvB,gBAAgBc,SAASC,eAC5CxC,EAAEiD,GAAG,CAACxB,gBAAgB,CAACT,MAAQqB,YAAYrB,KAAKuB,SAASC;AAE7DvC,QAAQoC,WAAW,GAAGA;AACtBpC,QAAQ+C,aAAa,GAAGA"}