{"version":3,"sources":["../../src/entityFeatures/userEditTracking.js"],"sourcesContent":["const Rules = require('../enum/Rules');\nconst { InvalidArgument } = require('../utils/Errors');\nconst Lang = require('../utils/lang');\n\nfunction addCreatedBy_(entityModel, feature, context) {\n    if (context.options.$migration) {\n        context.latest[feature.fields.createdBy] = feature.migrationUser;\n        return true;\n    }\n\n    const uid = entityModel.getValueFromContext(context, feature.uidSource);\n    if (uid == null) {\n        throw new InvalidArgument(\n            `Context \"${feature.uidSource}\" not found. Entity: ${entityModel.meta.name}`\n        );\n    }\n    context.latest[feature.fields.createdBy] = uid;\n    return true;\n}\n\nfunction addUpdatedBy_(entityModel, feature, context) {\n    if (context.options.$skipFeatures?.includes('userEditTracking')) return true;\n\n    const uid = entityModel.getValueFromContext(context, feature.uidSource);\n    if (uid == null) {\n        throw new InvalidArgument(`Context \"${feature.uidSource}\" not found.`);\n    }\n    context.latest[feature.fields.updatedBy] = uid;\n    context.latest[feature.fields.revision] = Lang.$inc(feature.fields.revision, 1);\n    // revision++\n    return true;\n}\n\n/**\n * A rule specifies the change of state will be tracked automatically.\n * @module EntityFeatureRuntime_ChangeLog\n */\n\nmodule.exports = {\n    [Rules.RULE_BEFORE_VALIDATION]: (feature, entityModel, context) =>\n        context.op === 'create'\n            ? addCreatedBy_(entityModel, feature, context)\n            : addUpdatedBy_(entityModel, feature, context),\n};\n"],"names":["Rules","require","InvalidArgument","Lang","addCreatedBy_","entityModel","feature","context","options","$migration","latest","fields","createdBy","migrationUser","uid","getValueFromContext","uidSource","meta","name","addUpdatedBy_","$skipFeatures","includes","updatedBy","revision","$inc","module","exports","RULE_BEFORE_VALIDATION","op"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";AAAA,MAAMA,QAAQC,QAAQ;AACtB,MAAM,EAAEC,eAAe,EAAE,GAAGD,QAAQ;AACpC,MAAME,OAAOF,QAAQ;AAErB,SAASG,cAAcC,WAAW,EAAEC,OAAO,EAAEC,OAAO;IAChD,IAAIA,QAAQC,OAAO,CAACC,UAAU,EAAE;QAC5BF,QAAQG,MAAM,CAACJ,QAAQK,MAAM,CAACC,SAAS,CAAC,GAAGN,QAAQO,aAAa;QAChE,OAAO;IACX;IAEA,MAAMC,MAAMT,YAAYU,mBAAmB,CAACR,SAASD,QAAQU,SAAS;IACtE,IAAIF,OAAO,MAAM;QACb,MAAM,IAAIZ,gBACN,CAAC,SAAS,EAAEI,QAAQU,SAAS,CAAC,qBAAqB,EAAEX,YAAYY,IAAI,CAACC,IAAI,CAAC,CAAC;IAEpF;IACAX,QAAQG,MAAM,CAACJ,QAAQK,MAAM,CAACC,SAAS,CAAC,GAAGE;IAC3C,OAAO;AACX;AAEA,SAASK,cAAcd,WAAW,EAAEC,OAAO,EAAEC,OAAO;IAChD,IAAIA,QAAQC,OAAO,CAACY,aAAa,EAAEC,SAAS,qBAAqB,OAAO;IAExE,MAAMP,MAAMT,YAAYU,mBAAmB,CAACR,SAASD,QAAQU,SAAS;IACtE,IAAIF,OAAO,MAAM;QACb,MAAM,IAAIZ,gBAAgB,CAAC,SAAS,EAAEI,QAAQU,SAAS,CAAC,YAAY,CAAC;IACzE;IACAT,QAAQG,MAAM,CAACJ,QAAQK,MAAM,CAACW,SAAS,CAAC,GAAGR;IAC3CP,QAAQG,MAAM,CAACJ,QAAQK,MAAM,CAACY,QAAQ,CAAC,GAAGpB,KAAKqB,IAAI,CAAClB,QAAQK,MAAM,CAACY,QAAQ,EAAE;IAC7E,aAAa;IACb,OAAO;AACX;AAEA;;;CAGC,GAEDE,OAAOC,OAAO,GAAG;IACb,CAAC1B,MAAM2B,sBAAsB,CAAC,EAAE,CAACrB,SAASD,aAAaE,UACnDA,QAAQqB,EAAE,KAAK,WACTxB,cAAcC,aAAaC,SAASC,WACpCY,cAAcd,aAAaC,SAASC;AAClD"}