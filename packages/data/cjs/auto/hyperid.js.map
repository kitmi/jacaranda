{"version":3,"sources":["../../src/auto/hyperid.js"],"sourcesContent":["const { tryRequire } = require('@genx/sys');\n\nconst instances = [ null, null, null, null ];\n\nmodule.exports = function (info, i18n, options) {\n    const hyperid = tryRequire('hyperid');\n\n    let index = info && info.fixedLength ? 1 : 0;\n    index += (options == null || options.urlSafe) ? 0 : 2;\n\n    let generator = instances[index];\n\n    if (generator == null) {\n        switch (index) {\n            case 0: \n                generator = hyperid({ urlSafe: true });\n                break;\n\n            case 1:\n                generator = hyperid({ urlSafe: true, fixedLength: true });\n                break;\n\n            case 2:\n                generator = hyperid();\n                break; \n\n            case 3:\n                generator = hyperid({ fixedLength: true });\n                break; \n        }\n\n        instances[index] = generator;\n    }\n\n    let uid = generator();\n    if (options?.prefix) {\n        uid = options.prefix + uid;\n    }\n\n    return uid;\n};\n"],"names":["tryRequire","require","instances","module","exports","info","i18n","options","hyperid","index","fixedLength","urlSafe","generator","uid","prefix"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";AAAA,MAAM,EAAEA,UAAU,EAAE,GAAGC,QAAQ;AAE/B,MAAMC,YAAY;IAAE;IAAM;IAAM;IAAM;CAAM;AAE5CC,OAAOC,OAAO,GAAG,SAAUC,IAAI,EAAEC,IAAI,EAAEC,OAAO;IAC1C,MAAMC,UAAUR,WAAW;IAE3B,IAAIS,QAAQJ,QAAQA,KAAKK,WAAW,GAAG,IAAI;IAC3CD,SAAS,AAACF,WAAW,QAAQA,QAAQI,OAAO,GAAI,IAAI;IAEpD,IAAIC,YAAYV,SAAS,CAACO,MAAM;IAEhC,IAAIG,aAAa,MAAM;QACnB,OAAQH;YACJ,KAAK;gBACDG,YAAYJ,QAAQ;oBAAEG,SAAS;gBAAK;gBACpC;YAEJ,KAAK;gBACDC,YAAYJ,QAAQ;oBAAEG,SAAS;oBAAMD,aAAa;gBAAK;gBACvD;YAEJ,KAAK;gBACDE,YAAYJ;gBACZ;YAEJ,KAAK;gBACDI,YAAYJ,QAAQ;oBAAEE,aAAa;gBAAK;gBACxC;QACR;QAEAR,SAAS,CAACO,MAAM,GAAGG;IACvB;IAEA,IAAIC,MAAMD;IACV,IAAIL,SAASO,QAAQ;QACjBD,MAAMN,QAAQO,MAAM,GAAGD;IAC3B;IAEA,OAAOA;AACX"}