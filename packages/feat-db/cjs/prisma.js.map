{"version":3,"sources":["../src/prisma.js"],"sourcesContent":["import { _, camelCase, unexistDelegate } from '@kitmi/utils';\nimport { Feature } from '@kitmi/jacaranda';\n\nconst prismsHelper = {\n    $pushQuery: (where, query) => {\n        let { AND, ..._where } = where;\n\n        _.each(query, (value, key) => {\n            const existing = _where[key];\n            if (typeof existing !== 'undefined') {\n                if (!AND) {\n                    AND = [];\n                } else {\n                    AND = [...AND];\n                }\n\n                delete _where[key];\n                AND.push({ [key]: existing });\n                AND.push({\n                    [key]: value,\n                });\n            } else {\n                _where[key] = value;\n            }\n        });\n\n        if (AND) {\n            _where.AND = AND;\n        }\n\n        return _where;\n    },\n    $pushOrQuery: (where, query) => {\n        if (!where.OR) {\n            where = {\n                OR: [where],\n            };\n        } else {\n            where = {\n                OR: [...where.OR],\n            };\n        }\n\n        where.OR.push(query);\n        return where;\n    },\n};\n\nconst DEFAULT_CLIENT = '@prisma/client';\n\nconst modelDelegate = (target, prop) => {\n    return target.model[prop];\n};\n\nexport default {\n    stage: Feature.SERVICE,\n\n    groupable: true,\n\n    packages: (app, { clientPath }) => {\n        return clientPath && clientPath != DEFAULT_CLIENT ? [] : ['@prisma/client'];\n    },\n\n    load_: async function (app, options, name) {\n        const { useModels, clientPath, ttlCacheService, ...prismaOptions } = app.featureConfig(\n            options,\n            {\n                schema: {\n                    useModels: { type: 'boolean', default: false },\n                    clientPath: { type: 'string', default: '@prisma/client' },\n                    ttlCacheService: { type: 'string', optional: true },\n                    datasources: { type: 'object', optional: true },\n                    log: {\n                        type: 'array',\n                        element: { type: 'text' },\n                        optional: true,\n                    },\n                },\n            },\n            name\n        );\n\n        const { PrismaClient } = await app.tryRequire_(clientPath);\n        const _models = new Map();\n\n        const prisma = new PrismaClient(prismaOptions);\n        await prisma.$connect();\n\n        app.on('stopping', async () => {\n            await prisma.$disconnect();\n        });\n\n        Object.assign(prisma, prismsHelper);\n\n        const cacheService = ttlCacheService && app.getService(ttlCacheService);\n\n        prisma._$env = {\n            cacheService,\n        };\n\n        if (useModels) {\n            if (!app.registry.models) {\n                throw new Error('No models found in the app registry');\n            }\n\n            _.each(app.registry.models, (ModelClass, name) => {\n                const modelInstance = new ModelClass(app, prisma, name);\n                const modelObject = unexistDelegate(modelInstance, modelDelegate, true);\n                _models.set(modelInstance.name, modelObject);\n                const altName = camelCase(modelInstance.name);\n                if (altName !== modelInstance.name) {\n                    _models.set(altName, modelObject);\n                }\n            });\n        }\n\n        prisma.$model = (name) => _models.get(name);\n\n        app.registerService(name, prisma);\n    },\n};\n"],"names":["prismsHelper","$pushQuery","where","query","AND","_where","_","each","value","key","existing","push","$pushOrQuery","OR","DEFAULT_CLIENT","modelDelegate","target","prop","model","stage","Feature","SERVICE","groupable","packages","app","clientPath","load_","options","name","useModels","ttlCacheService","prismaOptions","featureConfig","schema","type","default","optional","datasources","log","element","PrismaClient","tryRequire_","_models","Map","prisma","$connect","on","$disconnect","Object","assign","cacheService","getService","_$env","registry","models","Error","ModelClass","modelInstance","modelObject","unexistDelegate","set","altName","camelCase","$model","get","registerService"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}