{"version":3,"sources":["../../src/tasks/hashFile.js"],"sourcesContent":["import { Types } from '@kitmi/validators/allSync';\nimport { hashFile_ } from '@kitmi/feat-cipher';\n\nexport default async function hashFile(step, settings) {\n    let { algorithm, file } = Types.OBJECT.sanitize(settings, {\n        schema: {\n            algorithm: { type: 'text' },\n            file: { type: 'text' },\n        },\n    });\n\n    algorithm = step.getValue(algorithm);\n    const filePath = step.getValue(file);\n\n    const digest = await hashFile_(algorithm, filePath);\n\n    step.syslog('info', `File \"${filePath}\" hashed with \"${algorithm}\" algorithm.`, {\n        digest,\n    });\n\n    return digest;\n}\n"],"names":["hashFile","step","settings","algorithm","file","Types","OBJECT","sanitize","schema","type","getValue","filePath","digest","hashFile_","syslog"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAGA;;;eAA8BA;;;yBAHR;4BACI;AAEX,eAAeA,SAASC,IAAI,EAAEC,QAAQ;IACjD,IAAI,EAAEC,SAAS,EAAEC,IAAI,EAAE,GAAGC,cAAK,CAACC,MAAM,CAACC,QAAQ,CAACL,UAAU;QACtDM,QAAQ;YACJL,WAAW;gBAAEM,MAAM;YAAO;YAC1BL,MAAM;gBAAEK,MAAM;YAAO;QACzB;IACJ;IAEAN,YAAYF,KAAKS,QAAQ,CAACP;IAC1B,MAAMQ,WAAWV,KAAKS,QAAQ,CAACN;IAE/B,MAAMQ,SAAS,MAAMC,IAAAA,qBAAS,EAACV,WAAWQ;IAE1CV,KAAKa,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAEH,SAAS,eAAe,EAAER,UAAU,YAAY,CAAC,EAAE;QAC5ES;IACJ;IAEA,OAAOA;AACX"}