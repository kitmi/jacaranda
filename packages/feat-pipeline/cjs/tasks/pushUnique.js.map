{"version":3,"sources":["../../src/tasks/pushUnique.js"],"sourcesContent":["import { Types } from '@kitmi/validators/allSync';\nimport { _, set as _set } from '@kitmi/utils';\n\nexport default function pushUnique(step, settings) {\n    let {\n        key,\n        value,\n        target: targetVarName,\n        throwOnDuplicate,\n    } = Types.OBJECT.sanitize(settings, {\n        schema: {\n            key: { type: 'text' },\n            value: { type: 'text' },\n            target: { type: 'text', optional: true, default: '$data' },\n            throwOnDuplicate: { type: 'boolean', optional: true, default: true },\n        },\n    });\n\n    const target = step.getValue(targetVarName);\n    if (target == null) {\n        throw new Error(`Target variable '${targetVarName}' is not an object.`);\n    }\n\n    value = step.getValue(value);\n\n    let bucket = target[key];\n    if (bucket == null) {\n        bucket = new Set();\n        target[key] = bucket;\n    } else {\n        if (!(bucket instanceof Set)) {\n            throw new Error(`Value at '${targetVarName}.${key}' is not a Set.`);\n        }\n\n        if (bucket.has(value)) {\n            if (throwOnDuplicate) {\n                throw new Error(`Value '${value}' already exists in '${targetVarName}.${key}'.`);\n            }\n\n            step.syslog('warn', `Value '${value}' already exists in '${targetVarName}.${key}'.`);\n            return false;\n        }\n    }\n\n    bucket.add(value);\n\n    step.syslog('info', `Added '${value}' to '${targetVarName}.${key}'.`);\n    return true;\n}\n"],"names":["pushUnique","step","settings","key","value","target","targetVarName","throwOnDuplicate","Types","OBJECT","sanitize","schema","type","optional","default","getValue","Error","bucket","Set","has","syslog","add"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAGA;;;eAAwBA;;;yBAHF;uBACS;AAEhB,SAASA,WAAWC,IAAI,EAAEC,QAAQ;IAC7C,IAAI,EACAC,GAAG,EACHC,KAAK,EACLC,QAAQC,aAAa,EACrBC,gBAAgB,EACnB,GAAGC,cAAK,CAACC,MAAM,CAACC,QAAQ,CAACR,UAAU;QAChCS,QAAQ;YACJR,KAAK;gBAAES,MAAM;YAAO;YACpBR,OAAO;gBAAEQ,MAAM;YAAO;YACtBP,QAAQ;gBAAEO,MAAM;gBAAQC,UAAU;gBAAMC,SAAS;YAAQ;YACzDP,kBAAkB;gBAAEK,MAAM;gBAAWC,UAAU;gBAAMC,SAAS;YAAK;QACvE;IACJ;IAEA,MAAMT,SAASJ,KAAKc,QAAQ,CAACT;IAC7B,IAAID,UAAU,MAAM;QAChB,MAAM,IAAIW,MAAM,CAAC,iBAAiB,EAAEV,cAAc,mBAAmB,CAAC;IAC1E;IAEAF,QAAQH,KAAKc,QAAQ,CAACX;IAEtB,IAAIa,SAASZ,MAAM,CAACF,IAAI;IACxB,IAAIc,UAAU,MAAM;QAChBA,SAAS,IAAIC;QACbb,MAAM,CAACF,IAAI,GAAGc;IAClB,OAAO;QACH,IAAI,CAAEA,CAAAA,kBAAkBC,GAAE,GAAI;YAC1B,MAAM,IAAIF,MAAM,CAAC,UAAU,EAAEV,cAAc,CAAC,EAAEH,IAAI,eAAe,CAAC;QACtE;QAEA,IAAIc,OAAOE,GAAG,CAACf,QAAQ;YACnB,IAAIG,kBAAkB;gBAClB,MAAM,IAAIS,MAAM,CAAC,OAAO,EAAEZ,MAAM,qBAAqB,EAAEE,cAAc,CAAC,EAAEH,IAAI,EAAE,CAAC;YACnF;YAEAF,KAAKmB,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAEhB,MAAM,qBAAqB,EAAEE,cAAc,CAAC,EAAEH,IAAI,EAAE,CAAC;YACnF,OAAO;QACX;IACJ;IAEAc,OAAOI,GAAG,CAACjB;IAEXH,KAAKmB,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAEhB,MAAM,MAAM,EAAEE,cAAc,CAAC,EAAEH,IAAI,EAAE,CAAC;IACpE,OAAO;AACX"}