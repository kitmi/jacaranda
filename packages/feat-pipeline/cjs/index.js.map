{"version":3,"sources":["../src/index.js"],"sourcesContent":["import { Feature } from '@kitmi/jacaranda';\nimport Pipeline, { normalizeSteps } from './Pipeline';\n\nexport default {\n    stage: Feature.PLUGIN,\n\n    groupable: true,\n\n    packages: ['mime'],\n\n    /**\n     * Load the feature\n     * @param {App} app - The app module object\n     * @param {object} options - Options for the feature\n     * @property {string} options.taskProvider - Task provider.\n     * @property {object} options.stepLogger - Logger used during step.\n     * @returns {Promise.<*>}\n     *\n     * @example\n     *\n     * provider: 'digitalocean',\n     * options: {\n     *\n     * }\n     */\n    load_: async function (app, options, name) {\n        let { taskProvider, stepLogger } = app.featureConfig(\n            options,\n            {\n                schema: {\n                    taskProvider: { type: 'text' },\n                    stepLogger: { type: 'text', optional: true, default: \"logger\" },\n                },\n            },\n            name\n        );\n\n        app.requireServices([ taskProvider, stepLogger ]);\n\n        const service = {\n            create(name, steps, env) {\n                const _steps = normalizeSteps(steps)\n\n                return async (input, variables) => {                    \n                    const pipeline = new Pipeline(app, name, _steps, { env, taskProvider, stepLogger });\n                    if (variables) {\n                        pipeline.setVariables(variables);\n                    }\n                    return [ pipeline, await pipeline.run_(input) ];\n                };\n            }\n        };\n\n        app.registerService(name, service);\n    }\n};\n"],"names":["stage","Feature","PLUGIN","groupable","packages","load_","app","options","name","taskProvider","stepLogger","featureConfig","schema","type","optional","default","requireServices","service","create","steps","env","_steps","normalizeSteps","input","variables","pipeline","Pipeline","setVariables","run_","registerService"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAGA;;;eAAA;;;2BAHwB;kEACiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAEzC,WAAe;IACXA,OAAOC,kBAAO,CAACC,MAAM;IAErBC,WAAW;IAEXC,UAAU;QAAC;KAAO;IAElB;;;;;;;;;;;;;;KAcC,GACDC,OAAO,eAAgBC,GAAG,EAAEC,OAAO,EAAEC,IAAI;QACrC,IAAI,EAAEC,YAAY,EAAEC,UAAU,EAAE,GAAGJ,IAAIK,aAAa,CAChDJ,SACA;YACIK,QAAQ;gBACJH,cAAc;oBAAEI,MAAM;gBAAO;gBAC7BH,YAAY;oBAAEG,MAAM;oBAAQC,UAAU;oBAAMC,SAAS;gBAAS;YAClE;QACJ,GACAP;QAGJF,IAAIU,eAAe,CAAC;YAAEP;YAAcC;SAAY;QAEhD,MAAMO,UAAU;YACZC,QAAOV,IAAI,EAAEW,KAAK,EAAEC,GAAG;gBACnB,MAAMC,SAASC,IAAAA,wBAAc,EAACH;gBAE9B,OAAO,OAAOI,OAAOC;oBACjB,MAAMC,WAAW,IAAIC,iBAAQ,CAACpB,KAAKE,MAAMa,QAAQ;wBAAED;wBAAKX;wBAAcC;oBAAW;oBACjF,IAAIc,WAAW;wBACXC,SAASE,YAAY,CAACH;oBAC1B;oBACA,OAAO;wBAAEC;wBAAU,MAAMA,SAASG,IAAI,CAACL;qBAAQ;gBACnD;YACJ;QACJ;QAEAjB,IAAIuB,eAAe,CAACrB,MAAMS;IAC9B;AACJ"}