{"version":3,"sources":["../src/Graph.js"],"sourcesContent":["import { _ } from '@kitmi/utils';\nimport TopoSort from './TopoSort';\n\nclass Graph {\n    /**\n     * Directed graph.\n     * @constructs Graph\n     * @param {object} json \n     * @property {object} json.nodes - key-value pairs of nodes\n     * @property {object} json.edges - key-value pairs of edges, source => [target1, target2, ...]\n     */\n    constructor(json) {\n        this.topo = new TopoSort();\n\n        if (json) {\n            this.nodes = _.cloneDeep(json.nodes);\n            if (!_.isEmpty(json.edges)) {\n                _.forOwn(json.edges, (targets, source) => {\n                    this.topo.add(source, targets);\n                });\n            }\n            this.startNodes = json.startNodes;\n            this.endNodes = json.endNodes;\n        } else {\n            this.nodes = {};\n        }\n    }\n\n    hasNode(key) {\n        return key in this.nodes;\n    }\n\n    getNode(key) {\n        return this.nodes[key];\n    }\n\n    setNode(key, value) {\n        this.nodes[key] = value;\n        return this;\n    }\n\n    setEdge(sourceNode, targetNode) {\n        if (!this.hasNode(sourceNode)) {\n            throw new Error(`Source node [${sourceNode}] not exists.`);\n        }\n        if (!this.hasNode(targetNode)) {\n            throw new Error(`Target node [${targetNode}] not exists.`);\n        }\n        this.topo.add(sourceNode, targetNode);\n        return this;\n    }\n\n    getTargetNodes(sourceNode) {\n        return Array.from(this.topo.mapOfDependents[sourceNode]);\n    }\n\n    getSourceNodes(targetNode) {\n        return Array.from(this.topo.mapOfDependencies[targetNode]);\n    }\n\n    /**\n     * Calculate start and end nodes.\n     * @returns {Graph}\n     */\n    calcStartEnd() {\n        const seq = this.topo.sort();\n        this.startNodes = _.takeWhile(seq, (e) => !this.topo.hasDependency(e));\n        this.endNodes = _.takeRightWhile(seq, (e) => !this.topo.hasDependent(e));\n\n        if (this.startNodes.length === 0) {\n            this.startNodes = Object.keys(this.nodes);\n        }\n\n        if (this.endNodes.length === 0) {\n            this.endNodes = Object.keys(this.nodes);\n        }\n\n        return this;\n    }\n\n    toJSON() {\n        return {\n            nodes: this.nodes,\n            edges: _.mapValues(this.topo.mapOfDependents, (nodes) => Array.from(nodes)),\n            startNodes: this.startNodes,\n            endNodes: this.endNodes,\n        };\n    }\n}\n\nexport default Graph;\n"],"names":["Graph","hasNode","key","nodes","getNode","setNode","value","setEdge","sourceNode","targetNode","Error","topo","add","getTargetNodes","Array","from","mapOfDependents","getSourceNodes","mapOfDependencies","calcStartEnd","seq","sort","startNodes","_","takeWhile","e","hasDependency","endNodes","takeRightWhile","hasDependent","length","Object","keys","toJSON","edges","mapValues","constructor","json","TopoSort","cloneDeep","isEmpty","forOwn","targets","source"],"mappings":";;;;+BA0FA;;;eAAA;;;uBA1FkB;iEACG;;;;;;AAErB,MAAMA;IAyBFC,QAAQC,GAAG,EAAE;QACT,OAAOA,OAAO,IAAI,CAACC,KAAK;IAC5B;IAEAC,QAAQF,GAAG,EAAE;QACT,OAAO,IAAI,CAACC,KAAK,CAACD,IAAI;IAC1B;IAEAG,QAAQH,GAAG,EAAEI,KAAK,EAAE;QAChB,IAAI,CAACH,KAAK,CAACD,IAAI,GAAGI;QAClB,OAAO,IAAI;IACf;IAEAC,QAAQC,UAAU,EAAEC,UAAU,EAAE;QAC5B,IAAI,CAAC,IAAI,CAACR,OAAO,CAACO,aAAa;YAC3B,MAAM,IAAIE,MAAM,CAAC,aAAa,EAAEF,WAAW,aAAa,CAAC;QAC7D;QACA,IAAI,CAAC,IAAI,CAACP,OAAO,CAACQ,aAAa;YAC3B,MAAM,IAAIC,MAAM,CAAC,aAAa,EAAED,WAAW,aAAa,CAAC;QAC7D;QACA,IAAI,CAACE,IAAI,CAACC,GAAG,CAACJ,YAAYC;QAC1B,OAAO,IAAI;IACf;IAEAI,eAAeL,UAAU,EAAE;QACvB,OAAOM,MAAMC,IAAI,CAAC,IAAI,CAACJ,IAAI,CAACK,eAAe,CAACR,WAAW;IAC3D;IAEAS,eAAeR,UAAU,EAAE;QACvB,OAAOK,MAAMC,IAAI,CAAC,IAAI,CAACJ,IAAI,CAACO,iBAAiB,CAACT,WAAW;IAC7D;IAEA;;;KAGC,GACDU,eAAe;QACX,MAAMC,MAAM,IAAI,CAACT,IAAI,CAACU,IAAI;QAC1B,IAAI,CAACC,UAAU,GAAGC,QAAC,CAACC,SAAS,CAACJ,KAAK,CAACK,IAAM,CAAC,IAAI,CAACd,IAAI,CAACe,aAAa,CAACD;QACnE,IAAI,CAACE,QAAQ,GAAGJ,QAAC,CAACK,cAAc,CAACR,KAAK,CAACK,IAAM,CAAC,IAAI,CAACd,IAAI,CAACkB,YAAY,CAACJ;QAErE,IAAI,IAAI,CAACH,UAAU,CAACQ,MAAM,KAAK,GAAG;YAC9B,IAAI,CAACR,UAAU,GAAGS,OAAOC,IAAI,CAAC,IAAI,CAAC7B,KAAK;QAC5C;QAEA,IAAI,IAAI,CAACwB,QAAQ,CAACG,MAAM,KAAK,GAAG;YAC5B,IAAI,CAACH,QAAQ,GAAGI,OAAOC,IAAI,CAAC,IAAI,CAAC7B,KAAK;QAC1C;QAEA,OAAO,IAAI;IACf;IAEA8B,SAAS;QACL,OAAO;YACH9B,OAAO,IAAI,CAACA,KAAK;YACjB+B,OAAOX,QAAC,CAACY,SAAS,CAAC,IAAI,CAACxB,IAAI,CAACK,eAAe,EAAE,CAACb,QAAUW,MAAMC,IAAI,CAACZ;YACpEmB,YAAY,IAAI,CAACA,UAAU;YAC3BK,UAAU,IAAI,CAACA,QAAQ;QAC3B;IACJ;IAnFA;;;;;;KAMC,GACDS,YAAYC,IAAI,CAAE;QACd,IAAI,CAAC1B,IAAI,GAAG,IAAI2B,iBAAQ;QAExB,IAAID,MAAM;YACN,IAAI,CAAClC,KAAK,GAAGoB,QAAC,CAACgB,SAAS,CAACF,KAAKlC,KAAK;YACnC,IAAI,CAACoB,QAAC,CAACiB,OAAO,CAACH,KAAKH,KAAK,GAAG;gBACxBX,QAAC,CAACkB,MAAM,CAACJ,KAAKH,KAAK,EAAE,CAACQ,SAASC;oBAC3B,IAAI,CAAChC,IAAI,CAACC,GAAG,CAAC+B,QAAQD;gBAC1B;YACJ;YACA,IAAI,CAACpB,UAAU,GAAGe,KAAKf,UAAU;YACjC,IAAI,CAACK,QAAQ,GAAGU,KAAKV,QAAQ;QACjC,OAAO;YACH,IAAI,CAACxB,KAAK,GAAG,CAAC;QAClB;IACJ;AA8DJ;MAEA,WAAeH"}