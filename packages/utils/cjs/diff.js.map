{"version":3,"sources":["../src/diff.js"],"sourcesContent":["import _isEqual from 'lodash/isEqual';\nimport _reduce from 'lodash/reduce';\nimport _isEmpty from 'lodash/isEmpty';\nimport _differenceWith from 'lodash/differenceWith';\n\nimport ifThen from './ifThen';\n\nconst arrayOperators = [() => [], (array, k, v) => array.push(v)];\nconst objectOperators = [() => ({}), (obj, k, v) => (obj[k] = v)];\n\nfunction _diff(base, object, creator, setter) {\n    return _reduce(\n        object,\n        (re, v, k) => {\n            const vb = base[k];\n            const tb = typeof vb;\n            const to = typeof v;\n\n            if (tb !== to) {\n                // different type at all\n                setter(re, k, v);\n            } else if (typeof vb === 'object') {\n                // both are object\n                if (Array.isArray(vb)) {\n                    // both are array\n                    const avd = _differenceWith(v, vb, _isEqual);\n                    if (avd.length > 0) {\n                        setter(re, k, avd);\n                    }\n                } else if (!_isEqual(vb, v)) {\n                    // object\n                    const baseIsEmpty = _isEmpty(vb);\n\n                    if (_isEmpty(v)) {\n                        if (!baseIsEmpty) {\n                            setter(re, k, v);\n                        }\n                    } else {\n                        if (baseIsEmpty) {\n                            setter(re, k, v);\n                        } else {\n                            // both not empty\n                            const vd = _diff(vb, v, objectOperators[0], objectOperators[1]);\n                            if (!_isEmpty(vd)) {\n                                setter(re, k, vd);\n                            }\n                        }\n                    }\n                }\n            } else if (vb !== v) {\n                setter(re, k, v);\n            }\n\n            return re;\n        },\n        creator()\n    );\n}\n\n/**\n * Deep diff between two object\n * @alias object.difference\n * @param  {Object} base - Object to be compared\n * @param  {Object} object - Object compared\n * @return {Object} Return the key-value pair from object which of the value is different from base with the same key, or undefined if no difference\n */\nfunction difference(base, object) {\n    const ops = Array.isArray(base) ? arrayOperators : objectOperators;\n    const baseIsEmpty = _isEmpty(base);\n    return _isEmpty(object)\n        ? baseIsEmpty\n            ? undefined\n            : object\n        : baseIsEmpty\n        ? object\n        : ifThen(_diff(base, object, ops[0], ops[1]), _isEmpty, undefined);\n}\n\nexport default difference;\n"],"names":["arrayOperators","array","k","v","push","objectOperators","obj","_diff","base","object","creator","setter","_reduce","re","vb","tb","to","Array","isArray","avd","_differenceWith","_isEqual","length","baseIsEmpty","_isEmpty","vd","difference","ops","undefined","ifThen"],"mappings":";;;;+BA8EA;;;eAAA;;;gEA9EqB;+DACD;gEACC;uEACO;+DAET;;;;;;AAEnB,MAAMA,iBAAiB;IAAC,IAAM,EAAE;IAAE,CAACC,OAAOC,GAAGC,IAAMF,MAAMG,IAAI,CAACD;CAAG;AACjE,MAAME,kBAAkB;IAAC,IAAO,CAAA,CAAC,CAAA;IAAI,CAACC,KAAKJ,GAAGC,IAAOG,GAAG,CAACJ,EAAE,GAAGC;CAAG;AAEjE,SAASI,MAAMC,IAAI,EAAEC,MAAM,EAAEC,OAAO,EAAEC,MAAM;IACxC,OAAOC,IAAAA,eAAO,EACVH,QACA,CAACI,IAAIV,GAAGD;QACJ,MAAMY,KAAKN,IAAI,CAACN,EAAE;QAClB,MAAMa,KAAK,OAAOD;QAClB,MAAME,KAAK,OAAOb;QAElB,IAAIY,OAAOC,IAAI;YACX,wBAAwB;YACxBL,OAAOE,IAAIX,GAAGC;QAClB,OAAO,IAAI,OAAOW,OAAO,UAAU;YAC/B,kBAAkB;YAClB,IAAIG,MAAMC,OAAO,CAACJ,KAAK;gBACnB,iBAAiB;gBACjB,MAAMK,MAAMC,IAAAA,uBAAe,EAACjB,GAAGW,IAAIO,gBAAQ;gBAC3C,IAAIF,IAAIG,MAAM,GAAG,GAAG;oBAChBX,OAAOE,IAAIX,GAAGiB;gBAClB;YACJ,OAAO,IAAI,CAACE,IAAAA,gBAAQ,EAACP,IAAIX,IAAI;gBACzB,SAAS;gBACT,MAAMoB,cAAcC,IAAAA,gBAAQ,EAACV;gBAE7B,IAAIU,IAAAA,gBAAQ,EAACrB,IAAI;oBACb,IAAI,CAACoB,aAAa;wBACdZ,OAAOE,IAAIX,GAAGC;oBAClB;gBACJ,OAAO;oBACH,IAAIoB,aAAa;wBACbZ,OAAOE,IAAIX,GAAGC;oBAClB,OAAO;wBACH,iBAAiB;wBACjB,MAAMsB,KAAKlB,MAAMO,IAAIX,GAAGE,eAAe,CAAC,EAAE,EAAEA,eAAe,CAAC,EAAE;wBAC9D,IAAI,CAACmB,IAAAA,gBAAQ,EAACC,KAAK;4BACfd,OAAOE,IAAIX,GAAGuB;wBAClB;oBACJ;gBACJ;YACJ;QACJ,OAAO,IAAIX,OAAOX,GAAG;YACjBQ,OAAOE,IAAIX,GAAGC;QAClB;QAEA,OAAOU;IACX,GACAH;AAER;AAEA;;;;;;CAMC,GACD,SAASgB,WAAWlB,IAAI,EAAEC,MAAM;IAC5B,MAAMkB,MAAMV,MAAMC,OAAO,CAACV,QAAQR,iBAAiBK;IACnD,MAAMkB,cAAcC,IAAAA,gBAAQ,EAAChB;IAC7B,OAAOgB,IAAAA,gBAAQ,EAACf,UACVc,cACIK,YACAnB,SACJc,cACAd,SACAoB,IAAAA,eAAM,EAACtB,MAAMC,MAAMC,QAAQkB,GAAG,CAAC,EAAE,EAAEA,GAAG,CAAC,EAAE,GAAGH,gBAAQ,EAAEI;AAChE;MAEA,WAAeF"}