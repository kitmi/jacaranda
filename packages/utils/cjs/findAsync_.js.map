{"version":3,"sources":["../src/findAsync_.js"],"sourcesContent":["import findKeyAsync_ from './findKeyAsync_';\n\n/**\n * Iterate a collection asynchronously until predicate returns true\n * The returned value is undefined if not found.\n * That's different from the _.find() function in lodash.\n * @alias collection.findAsync_\n * @async\n * @param {Array|Object} obj\n * @param {asyncIterator} asyncPredicate_\n * @returns {Promise.<Object|undefined>}\n */\nasync function findAsync_(obj, asyncPredicate_) {\n    const k = await findKeyAsync_(obj, asyncPredicate_);\n    return obj[k];\n}\n\nexport default findAsync_;\n"],"names":["findAsync_","obj","asyncPredicate_","k","findKeyAsync_"],"mappings":";;;;+BAiBA;;;eAAA;;;sEAjB0B;;;;;;AAE1B;;;;;;;;;CASC,GACD,eAAeA,WAAWC,GAAG,EAAEC,eAAe;IAC1C,MAAMC,IAAI,MAAMC,IAAAA,sBAAa,EAACH,KAAKC;IACnC,OAAOD,GAAG,CAACE,EAAE;AACjB;MAEA,WAAeH"}