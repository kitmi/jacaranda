{"version":3,"sources":["../src/isEmpty.js"],"sourcesContent":["import isTypedArray from './isTypedArray';\n\n/**\n * Check whether a value is empty, or an object is empty. \n * Note: lodash's isEmpty does not check symbol properties.\n *  const key = Symbol('key');\n *  const obj = {\n *      [key]: 'something'\n *  };\n *  _.isEmpty(obj).should.be.true;\n *  isEmpty(obj).should.be.false;\n * \n * @param {*} value \n * @returns {boolean}\n */\nfunction isEmpty(value) {\n    if (value == null) {\n        return true;\n    }\n\n    const type = typeof value;\n\n    if (type === 'string') return value.length === 0;\n\n    if (type === 'object') {\n        if (\n            Array.isArray(value) ||\n            Buffer.isBuffer(value) ||\n            isTypedArray(value) ||\n            value.toString() === '[object Arguments]'\n        ) {\n            return value.length === 0;\n        }\n\n        if (value instanceof Map || value instanceof Set) {\n            return value.size === 0;\n        }\n\n        return Object.keys(value).length === 0 && Object.getOwnPropertySymbols(value).length === 0;\n    }\n\n    return false;\n}\n\nexport default isEmpty;\n"],"names":["isEmpty","value","type","length","Array","isArray","Buffer","isBuffer","isTypedArray","toString","Map","Set","size","Object","keys","getOwnPropertySymbols"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA4CA;;;eAAA;;;qEA5CyB;;;;;;AAEzB;;;;;;;;;;;;CAYC,GACD,SAASA,QAAQC,KAAK;IAClB,IAAIA,SAAS,MAAM;QACf,OAAO;IACX;IAEA,MAAMC,OAAO,OAAOD;IAEpB,IAAIC,SAAS,UAAU,OAAOD,MAAME,MAAM,KAAK;IAE/C,IAAID,SAAS,UAAU;QACnB,IACIE,MAAMC,OAAO,CAACJ,UACdK,OAAOC,QAAQ,CAACN,UAChBO,IAAAA,qBAAY,EAACP,UACbA,MAAMQ,QAAQ,OAAO,sBACvB;YACE,OAAOR,MAAME,MAAM,KAAK;QAC5B;QAEA,IAAIF,iBAAiBS,OAAOT,iBAAiBU,KAAK;YAC9C,OAAOV,MAAMW,IAAI,KAAK;QAC1B;QAEA,OAAOC,OAAOC,IAAI,CAACb,OAAOE,MAAM,KAAK,KAAKU,OAAOE,qBAAqB,CAACd,OAAOE,MAAM,KAAK;IAC7F;IAEA,OAAO;AACX;MAEA,WAAeH"}