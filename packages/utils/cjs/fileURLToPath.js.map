{"version":3,"sources":["../src/fileURLToPath.js"],"sourcesContent":["// simplied version of url.fileURLToPath\nfunction fileURLToPath(url) {\n    // Determine the platform\n    const platform = process.env.TEST_PLATFORM || process.platform;\n\n    // Remove the \"file://\" from the start of the URL\n    let path = url.replace(/^file:\\/\\//, '');\n\n    // On Windows, handle UNC paths correctly and replace slashes with backslashes\n    if (platform === 'win32') {\n        if (path.toLowerCase().startsWith('localhost/')) {\n            path = path.slice(9);\n        }\n\n        // If the path starts with a slash followed by a letter and a colon, it's a drive letter\n        if (/^\\/[a-z]:/i.test(path)) {\n            path = path.slice(1);\n        }\n        // Otherwise, if the path starts with a slash, it's a UNC path\n        else {\n            path = '\\\\\\\\' + path;\n        }\n\n        // Replace the other slashes with backslashes\n        path = path.replace(/\\//g, '\\\\');\n    } else if (path.toLowerCase().startsWith('localhost/')) {\n        path = path.slice(9);\n    }\n\n    // Decode any URL-encoded characters\n    path = decodeURIComponent(path);\n\n    return path;\n}\n\nexport default fileURLToPath;\n"],"names":["fileURLToPath","url","platform","process","env","TEST_PLATFORM","path","replace","toLowerCase","startsWith","slice","test","decodeURIComponent"],"mappings":"AAAA,wCAAwC;;;;;+BAmCxC;;;eAAA;;;AAlCA,SAASA,cAAcC,GAAG;IACtB,yBAAyB;IACzB,MAAMC,WAAWC,QAAQC,GAAG,CAACC,aAAa,IAAIF,QAAQD,QAAQ;IAE9D,iDAAiD;IACjD,IAAII,OAAOL,IAAIM,OAAO,CAAC,cAAc;IAErC,8EAA8E;IAC9E,IAAIL,aAAa,SAAS;QACtB,IAAII,KAAKE,WAAW,GAAGC,UAAU,CAAC,eAAe;YAC7CH,OAAOA,KAAKI,KAAK,CAAC;QACtB;QAEA,wFAAwF;QACxF,IAAI,aAAaC,IAAI,CAACL,OAAO;YACzBA,OAAOA,KAAKI,KAAK,CAAC;QACtB,OAEK;YACDJ,OAAO,SAASA;QACpB;QAEA,6CAA6C;QAC7CA,OAAOA,KAAKC,OAAO,CAAC,OAAO;IAC/B,OAAO,IAAID,KAAKE,WAAW,GAAGC,UAAU,CAAC,eAAe;QACpDH,OAAOA,KAAKI,KAAK,CAAC;IACtB;IAEA,oCAAoC;IACpCJ,OAAOM,mBAAmBN;IAE1B,OAAOA;AACX;MAEA,WAAeN"}