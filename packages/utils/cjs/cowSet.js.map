{"version":3,"sources":["../src/cowSet.js"],"sourcesContent":["import _clone from 'lodash/clone';\nimport isInteger, { RANGE_INDEX } from './isInteger';\n\nimport { addEntry } from './set';\n\n// copy on write set\nfunction cowSet(collection, keyPath, value, options) {\n    options = { numberAsArrayIndex: true, keyPathSeparator: '.', ...options };\n\n    if (collection == null || typeof collection !== 'object') {\n        return collection;\n    }\n\n    if (keyPath == null) {\n        return collection;\n    }\n\n    let nodes = Array.isArray(keyPath) ? keyPath.concat() : keyPath.split(options.keyPathSeparator);\n    const length = nodes.length;\n\n    if (length > 0) {\n        const lastIndex = length - 1;\n\n        let index = 0;\n        let nested = _clone(collection);\n        collection = nested;\n\n        while (nested != null && index < lastIndex) {\n            const key = nodes[index++];\n\n            let next = nested[key];\n            if (next == null || typeof next !== 'object') {\n                // peek next node, see if it is integer\n                const nextKey = nodes[index];\n\n                if (options.numberAsArrayIndex && isInteger(nextKey, { range: RANGE_INDEX })) {\n                    next = addEntry(nested, key, [], options.numberAsArrayIndex);\n                } else {\n                    next = addEntry(nested, key, {}, options.numberAsArrayIndex);\n                }\n\n                nested = next;\n            } else {\n                nested[key] = _clone(next);\n                nested = nested[key];\n            }\n        }\n\n        const lastKey = nodes[lastIndex];\n        addEntry(nested, lastKey, value, options.numberAsArrayIndex);\n    }\n\n    return collection;\n}\n\nexport default cowSet;\n"],"names":["cowSet","collection","keyPath","value","options","numberAsArrayIndex","keyPathSeparator","nodes","Array","isArray","concat","split","length","lastIndex","index","nested","_clone","key","next","nextKey","isInteger","range","RANGE_INDEX","addEntry","lastKey"],"mappings":";;;;+BAuDA;;;eAAA;;;8DAvDmB;mEACoB;qBAEd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEzB,oBAAoB;AACpB,SAASA,OAAOC,UAAU,EAAEC,OAAO,EAAEC,KAAK,EAAEC,OAAO;IAC/CA,UAAU;QAAEC,oBAAoB;QAAMC,kBAAkB;QAAK,GAAGF,OAAO;IAAC;IAExE,IAAIH,cAAc,QAAQ,OAAOA,eAAe,UAAU;QACtD,OAAOA;IACX;IAEA,IAAIC,WAAW,MAAM;QACjB,OAAOD;IACX;IAEA,IAAIM,QAAQC,MAAMC,OAAO,CAACP,WAAWA,QAAQQ,MAAM,KAAKR,QAAQS,KAAK,CAACP,QAAQE,gBAAgB;IAC9F,MAAMM,SAASL,MAAMK,MAAM;IAE3B,IAAIA,SAAS,GAAG;QACZ,MAAMC,YAAYD,SAAS;QAE3B,IAAIE,QAAQ;QACZ,IAAIC,SAASC,IAAAA,cAAM,EAACf;QACpBA,aAAac;QAEb,MAAOA,UAAU,QAAQD,QAAQD,UAAW;YACxC,MAAMI,MAAMV,KAAK,CAACO,QAAQ;YAE1B,IAAII,OAAOH,MAAM,CAACE,IAAI;YACtB,IAAIC,QAAQ,QAAQ,OAAOA,SAAS,UAAU;gBAC1C,uCAAuC;gBACvC,MAAMC,UAAUZ,KAAK,CAACO,MAAM;gBAE5B,IAAIV,QAAQC,kBAAkB,IAAIe,IAAAA,kBAAS,EAACD,SAAS;oBAAEE,OAAOC,sBAAW;gBAAC,IAAI;oBAC1EJ,OAAOK,IAAAA,aAAQ,EAACR,QAAQE,KAAK,EAAE,EAAEb,QAAQC,kBAAkB;gBAC/D,OAAO;oBACHa,OAAOK,IAAAA,aAAQ,EAACR,QAAQE,KAAK,CAAC,GAAGb,QAAQC,kBAAkB;gBAC/D;gBAEAU,SAASG;YACb,OAAO;gBACHH,MAAM,CAACE,IAAI,GAAGD,IAAAA,cAAM,EAACE;gBACrBH,SAASA,MAAM,CAACE,IAAI;YACxB;QACJ;QAEA,MAAMO,UAAUjB,KAAK,CAACM,UAAU;QAChCU,IAAAA,aAAQ,EAACR,QAAQS,SAASrB,OAAOC,QAAQC,kBAAkB;IAC/D;IAEA,OAAOJ;AACX;MAEA,WAAeD"}