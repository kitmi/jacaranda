{"version":3,"sources":["../src/isInteger.js"],"sourcesContent":["const regexInt = /^(\\+|-)?\\d+$/;\nconst regexPos = /^\\+?[1-9]\\d*$/;\nconst regexIndex = /^0$|^([1-9]\\d*)$/;\nconst regexNeg = /^-[1-9]\\d*$/;\nconst regexNonZero = /^(\\+|-)?[1-9]\\d*$/;\n\nexport const RANGE_POSITIVE = 'positive';\nexport const RANGE_NEGATIVE = 'negative';\nexport const RANGE_INDEX = 'index';\nexport const RANGE_NON_ZERO = 'nonZero';\n\nconst mapRegex = {\n    [RANGE_POSITIVE]: regexPos,\n    [RANGE_INDEX]: regexIndex,\n    [RANGE_NEGATIVE]: regexNeg,\n    [RANGE_NON_ZERO]: regexNonZero,\n};\n\n/**\n * Check a number or string whether it is exactly an integer\n * @param {*} value\n * @returns {boolean}\n */\nconst isInteger = (value, options) => {\n    options = { range: 'all', ...options };\n    const type = typeof value;\n\n    if (type === 'number') {\n        return Number.isInteger(value);\n    } else if (type === 'string') {\n        value = value.trim();\n\n        const regex = mapRegex[options.range] || regexInt;\n        if (regex.test(value)) {\n            return true;\n        }\n    }\n\n    return false;\n};\n\nexport default isInteger;\n"],"names":["RANGE_INDEX","RANGE_NEGATIVE","RANGE_NON_ZERO","RANGE_POSITIVE","regexInt","regexPos","regexIndex","regexNeg","regexNonZero","mapRegex","isInteger","value","options","range","type","Number","trim","regex","test"],"mappings":";;;;;;;;;;;IAQaA,WAAW;eAAXA;;IADAC,cAAc;eAAdA;;IAEAC,cAAc;eAAdA;;IAHAC,cAAc;eAAdA;;IAmCb,OAAyB;eAAzB;;;AAzCA,MAAMC,WAAW;AACjB,MAAMC,WAAW;AACjB,MAAMC,aAAa;AACnB,MAAMC,WAAW;AACjB,MAAMC,eAAe;AAEd,MAAML,iBAAiB;AACvB,MAAMF,iBAAiB;AACvB,MAAMD,cAAc;AACpB,MAAME,iBAAiB;AAE9B,MAAMO,WAAW;IACb,CAACN,eAAe,EAAEE;IAClB,CAACL,YAAY,EAAEM;IACf,CAACL,eAAe,EAAEM;IAClB,CAACL,eAAe,EAAEM;AACtB;AAEA;;;;CAIC,GACD,MAAME,YAAY,CAACC,OAAOC;IACtBA,UAAU;QAAEC,OAAO;QAAO,GAAGD,OAAO;IAAC;IACrC,MAAME,OAAO,OAAOH;IAEpB,IAAIG,SAAS,UAAU;QACnB,OAAOC,OAAOL,SAAS,CAACC;IAC5B,OAAO,IAAIG,SAAS,UAAU;QAC1BH,QAAQA,MAAMK,IAAI;QAElB,MAAMC,QAAQR,QAAQ,CAACG,QAAQC,KAAK,CAAC,IAAIT;QACzC,IAAIa,MAAMC,IAAI,CAACP,QAAQ;YACnB,OAAO;QACX;IACJ;IAEA,OAAO;AACX;MAEA,WAAeD"}