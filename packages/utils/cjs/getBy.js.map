{"version":3,"sources":["../src/getBy.js"],"sourcesContent":["/**\n * Get a value by dot-separated path or key array from a collection\n * Does not support '[i]', e.g. 'a[0].b.c' style accessor, use [ 'a',  0, 'b', 'c' ] instead, different from lodash/get\n * @alias object.get\n * @param {Object} collection - The collection\n * @param {string|array} keyPath - A dot-separated path (dsp) or a key array, e.g. settings.xxx.yyy, or ['setting', 'xxx', 'yyy']\n * @param {function} [getValueBy] - A function to get the value, e.g. (collection, key) => collection[key]\n * @param {Object} [defaultValue] - The default value if the path does not exist\n * @returns {*}\n */\nconst _getBy = (collection, keyPath, getValueBy, defaultValue) => {\n    if (keyPath == null) {\n        return collection ?? undefined;\n    }\n    let nodes = Array.isArray(keyPath) ? keyPath : typeof keyPath === 'string' ? keyPath.split('.') : [keyPath];\n\n    if (collection == null) {\n        return defaultValue ?? collection;\n    }\n\n    let index = 0;\n    const length = nodes.length;\n\n    while (collection != null && index < length) {\n        collection = getValueBy(collection, nodes[index++]);\n    }\n\n    return typeof collection !== 'undefined' && index && index === length ? collection : defaultValue;\n};\n\nexport default _getBy;\n"],"names":["_getBy","collection","keyPath","getValueBy","defaultValue","undefined","nodes","Array","isArray","split","index","length"],"mappings":"AAAA;;;;;;;;;CASC;;;;+BAqBD;;;eAAA;;;AApBA,MAAMA,SAAS,CAACC,YAAYC,SAASC,YAAYC;IAC7C,IAAIF,WAAW,MAAM;QACjB,OAAOD,cAAcI;IACzB;IACA,IAAIC,QAAQC,MAAMC,OAAO,CAACN,WAAWA,UAAU,OAAOA,YAAY,WAAWA,QAAQO,KAAK,CAAC,OAAO;QAACP;KAAQ;IAE3G,IAAID,cAAc,MAAM;QACpB,OAAOG,gBAAgBH;IAC3B;IAEA,IAAIS,QAAQ;IACZ,MAAMC,SAASL,MAAMK,MAAM;IAE3B,MAAOV,cAAc,QAAQS,QAAQC,OAAQ;QACzCV,aAAaE,WAAWF,YAAYK,KAAK,CAACI,QAAQ;IACtD;IAEA,OAAO,OAAOT,eAAe,eAAeS,SAASA,UAAUC,SAASV,aAAaG;AACzF;MAEA,WAAeJ"}