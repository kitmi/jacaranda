{"version":3,"sources":["../src/zipAndFlat.js"],"sourcesContent":["/**\n * One-by-one merge two arrays into one\n * 10x faster than lodash flatten and zip\n * @alias array.zipAndFlat\n * @param {Array} arr1\n * @param {Array} arr2\n * @returns {Array}\n */\nfunction zipAndFlat(arr1, arr2) {\n    let long,\n        result = [],\n        ll,\n        ls;\n    const l1 = arr1 == null ? 0 : arr1.length;\n    const l2 = arr2 == null ? 0 : arr2.length;\n\n    if (l2 > l1) {\n        ll = l2;\n        ls = l1;\n        long = arr2;\n    } else {\n        ll = l1;\n        ls = l2;\n        long = arr1;\n    }\n\n    for (let i = 0; i < ls; i++) {\n        result.push(arr1[i]);\n        result.push(arr2[i]);\n    }\n\n    for (let i = ls; i < ll; i++) {\n        result.push(long[i]);\n    }\n\n    return result;\n}\n\nexport default zipAndFlat;\n"],"names":["zipAndFlat","arr1","arr2","long","result","ll","ls","l1","length","l2","i","push"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;;;;;;;CAOC;;;;+BA+BD;;;eAAA;;;AA9BA,SAASA,WAAWC,IAAI,EAAEC,IAAI;IAC1B,IAAIC,MACAC,SAAS,EAAE,EACXC,IACAC;IACJ,MAAMC,KAAKN,QAAQ,OAAO,IAAIA,KAAKO,MAAM;IACzC,MAAMC,KAAKP,QAAQ,OAAO,IAAIA,KAAKM,MAAM;IAEzC,IAAIC,KAAKF,IAAI;QACTF,KAAKI;QACLH,KAAKC;QACLJ,OAAOD;IACX,OAAO;QACHG,KAAKE;QACLD,KAAKG;QACLN,OAAOF;IACX;IAEA,IAAK,IAAIS,IAAI,GAAGA,IAAIJ,IAAII,IAAK;QACzBN,OAAOO,IAAI,CAACV,IAAI,CAACS,EAAE;QACnBN,OAAOO,IAAI,CAACT,IAAI,CAACQ,EAAE;IACvB;IAEA,IAAK,IAAIA,IAAIJ,IAAII,IAAIL,IAAIK,IAAK;QAC1BN,OAAOO,IAAI,CAACR,IAAI,CAACO,EAAE;IACvB;IAEA,OAAON;AACX;MAEA,WAAeJ"}