{"version":3,"sources":["../src/box.js"],"sourcesContent":["/**\n * Box is a utility function that wrap an inner object and returns a reader proxy and a writer function.\n * @returns {Array} - Reader proxy and writer function\n */\nfunction Box() {\n    const innerObject = {};\n    return [\n        new Proxy(innerObject, {\n            get: function (target, prop, receiver) {\n                if (target._ == null) {\n                    return undefined;\n                }\n\n                // Check if the property is a function\n                const origMethod = target._[prop];\n                if (typeof origMethod === 'function') {\n                    // Return a function that calls the same method on innerObject\n                    return function (...args) {\n                        return origMethod.apply(target._, args);\n                    };\n                }\n                // For non-function properties, just return the property from innerObject\n                return Reflect.get(target._, prop, receiver);\n            },\n        }),\n        (futureValue) => (innerObject._ = futureValue),\n    ];\n}\n\nexport default Box;\n"],"names":["Box","innerObject","Proxy","get","target","prop","receiver","_","undefined","origMethod","args","apply","Reflect","futureValue"],"mappings":"AAAA;;;CAGC;;;;+BA0BD;;;eAAA;;;AAzBA,SAASA;IACL,MAAMC,cAAc,CAAC;IACrB,OAAO;QACH,IAAIC,MAAMD,aAAa;YACnBE,KAAK,SAAUC,MAAM,EAAEC,IAAI,EAAEC,QAAQ;gBACjC,IAAIF,OAAOG,CAAC,IAAI,MAAM;oBAClB,OAAOC;gBACX;gBAEA,sCAAsC;gBACtC,MAAMC,aAAaL,OAAOG,CAAC,CAACF,KAAK;gBACjC,IAAI,OAAOI,eAAe,YAAY;oBAClC,8DAA8D;oBAC9D,OAAO,SAAU,GAAGC,IAAI;wBACpB,OAAOD,WAAWE,KAAK,CAACP,OAAOG,CAAC,EAAEG;oBACtC;gBACJ;gBACA,yEAAyE;gBACzE,OAAOE,QAAQT,GAAG,CAACC,OAAOG,CAAC,EAAEF,MAAMC;YACvC;QACJ;QACA,CAACO,cAAiBZ,YAAYM,CAAC,GAAGM;KACrC;AACL;MAEA,WAAeb"}