{"version":3,"sources":["../src/dbgGetCallerFile.js"],"sourcesContent":["/**\n * Get the nth call file name from callstack\n * @param {integer} depth - the nth depth, 0 means the file call this function, usually depth 1 is most expected result\n * @returns {string} filename\n */\nfunction dbgGetCallerFile(depth = 1) {\n    const originalFunc = Error.prepareStackTrace;\n\n    let callerfile;\n    try {\n        const err = new Error();\n        let currentfile;\n        let currentDepth = 0;\n\n        Error.prepareStackTrace = function (err, stack) {\n            return stack;\n        };\n\n        currentfile = err.stack.shift().getFileName();\n\n        while (err.stack.length) {\n            callerfile = err.stack.shift().getFileName();\n\n            if (currentfile !== callerfile) {\n                currentDepth++;\n                currentfile = callerfile;\n                if (currentDepth > depth) break;\n            }\n        }\n        // eslint-disable-next-line no-empty\n    } finally {\n    }\n\n    Error.prepareStackTrace = originalFunc;\n\n    return callerfile;\n}\n\nexport default dbgGetCallerFile;\n"],"names":["dbgGetCallerFile","depth","originalFunc","Error","prepareStackTrace","callerfile","err","currentfile","currentDepth","stack","shift","getFileName","length"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA;;;;CAIC;;;;+BAkCD;;;eAAA;;;AAjCA,SAASA,iBAAiBC,QAAQ,CAAC;IAC/B,MAAMC,eAAeC,MAAMC,iBAAiB;IAE5C,IAAIC;IACJ,IAAI;QACA,MAAMC,MAAM,IAAIH;QAChB,IAAII;QACJ,IAAIC,eAAe;QAEnBL,MAAMC,iBAAiB,GAAG,SAAUE,GAAG,EAAEG,KAAK;YAC1C,OAAOA;QACX;QAEAF,cAAcD,IAAIG,KAAK,CAACC,KAAK,GAAGC,WAAW;QAE3C,MAAOL,IAAIG,KAAK,CAACG,MAAM,CAAE;YACrBP,aAAaC,IAAIG,KAAK,CAACC,KAAK,GAAGC,WAAW;YAE1C,IAAIJ,gBAAgBF,YAAY;gBAC5BG;gBACAD,cAAcF;gBACd,IAAIG,eAAeP,OAAO;YAC9B;QACJ;IACA,oCAAoC;IACxC,SAAU,CACV;IAEAE,MAAMC,iBAAiB,GAAGF;IAE1B,OAAOG;AACX;MAEA,WAAeL"}