{"version":3,"sources":["../src/eachAsync_.js"],"sourcesContent":["import isPlainObject from './isPlainObject';\n\n/**\n * Iterate an array of an object asynchronously\n * @alias collection.eachAsync_\n * @async\n * @param {Array|Object} obj\n * @param {asyncIterator} iterator\n * @returns {Promise.<Array|Object>}\n */\nasync function eachAsync_(obj, iterator) {\n    if (Array.isArray(obj)) {\n        let r = [];\n\n        let l = obj.length;\n        for (let i = 0; i < l; i++) {\n            r.push(await iterator(obj[i], i, obj));\n        }\n\n        return r;\n    }\n\n    if (isPlainObject(obj)) {\n        let r = {};\n\n        for (let k in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, k)) {\n                r[k] = await iterator(obj[k], k, obj);\n            }\n        }\n\n        return r;\n    }\n\n    return Promise.reject('Invalid argument!');\n}\n\nexport default eachAsync_;\n"],"names":["eachAsync_","obj","iterator","Array","isArray","r","l","length","i","push","isPlainObject","k","Object","prototype","hasOwnProperty","call","Promise","reject"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAqCA;;;eAAA;;;sEArC0B;;;;;;AAE1B;;;;;;;CAOC,GACD,eAAeA,WAAWC,GAAG,EAAEC,QAAQ;IACnC,IAAIC,MAAMC,OAAO,CAACH,MAAM;QACpB,IAAII,IAAI,EAAE;QAEV,IAAIC,IAAIL,IAAIM,MAAM;QAClB,IAAK,IAAIC,IAAI,GAAGA,IAAIF,GAAGE,IAAK;YACxBH,EAAEI,IAAI,CAAC,MAAMP,SAASD,GAAG,CAACO,EAAE,EAAEA,GAAGP;QACrC;QAEA,OAAOI;IACX;IAEA,IAAIK,IAAAA,sBAAa,EAACT,MAAM;QACpB,IAAII,IAAI,CAAC;QAET,IAAK,IAAIM,KAAKV,IAAK;YACf,IAAIW,OAAOC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACd,KAAKU,IAAI;gBAC9CN,CAAC,CAACM,EAAE,GAAG,MAAMT,SAASD,GAAG,CAACU,EAAE,EAAEA,GAAGV;YACrC;QACJ;QAEA,OAAOI;IACX;IAEA,OAAOW,QAAQC,MAAM,CAAC;AAC1B;MAEA,WAAejB"}