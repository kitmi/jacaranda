{"version":3,"sources":["../src/size.js"],"sourcesContent":["import isTypedArray from './isTypedArray';\n\n/**\n * Get the size of a collection.\n * Note: lodash's size does not check symbol properties and will return unicode length for strings.\n * @param {*} collection \n * @returns {number}\n */\nfunction size(collection) {\n    if (collection == null) {\n        return 0;\n    }\n\n    const type = typeof collection;\n\n    if (type === 'string') return collection.length;\n\n    if (type === 'object') {\n        if (\n            Array.isArray(collection) ||\n            Buffer.isBuffer(collection) ||\n            isTypedArray(collection) ||\n            collection.toString() === '[object Arguments]'\n        ) {\n            return collection.length;\n        }\n\n        if (collection instanceof Map || collection instanceof Set) {\n            return collection.size;\n        }\n\n        if (collection instanceof DataView) {\n            return collection.byteLength;\n        }\n\n        return Object.keys(collection).length + Object.getOwnPropertySymbols(collection).length;\n    }\n\n    return 0;\n}\n\nexport default size;"],"names":["size","collection","type","length","Array","isArray","Buffer","isBuffer","isTypedArray","toString","Map","Set","DataView","byteLength","Object","keys","getOwnPropertySymbols"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAyCA;;;eAAA;;;qEAzCyB;;;;;;AAEzB;;;;;CAKC,GACD,SAASA,KAAKC,UAAU;IACpB,IAAIA,cAAc,MAAM;QACpB,OAAO;IACX;IAEA,MAAMC,OAAO,OAAOD;IAEpB,IAAIC,SAAS,UAAU,OAAOD,WAAWE,MAAM;IAE/C,IAAID,SAAS,UAAU;QACnB,IACIE,MAAMC,OAAO,CAACJ,eACdK,OAAOC,QAAQ,CAACN,eAChBO,IAAAA,qBAAY,EAACP,eACbA,WAAWQ,QAAQ,OAAO,sBAC5B;YACE,OAAOR,WAAWE,MAAM;QAC5B;QAEA,IAAIF,sBAAsBS,OAAOT,sBAAsBU,KAAK;YACxD,OAAOV,WAAWD,IAAI;QAC1B;QAEA,IAAIC,sBAAsBW,UAAU;YAChC,OAAOX,WAAWY,UAAU;QAChC;QAEA,OAAOC,OAAOC,IAAI,CAACd,YAAYE,MAAM,GAAGW,OAAOE,qBAAqB,CAACf,YAAYE,MAAM;IAC3F;IAEA,OAAO;AACX;MAEA,WAAeH"}