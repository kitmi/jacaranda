{"version":3,"sources":["../src/arrayToCsv.js"],"sourcesContent":["import quote from './quote';\n\n/**\n * Convert an array to CSV string.\n * @alias array.arrayToCsv\n * @param {Array} data \n * @param {*} [separator=','] - Separator, default , \n * @param {*} [replacer] - Replacer function \n * @returns {String}\n */\nconst arrayToCsv = (data, separator = ',', replacer) => {\n    if (data == null) {\n        return '';\n    }\n\n    if (!Array.isArray(data)) {\n        throw new Error('The target argument should be an array.');\n    }\n\n    return data\n        .map((elem) => {\n            elem = replacer ? replacer(elem) : elem.toString();\n            return elem.indexOf(separator) !== -1 ? quote(elem, '\"') : elem;\n        })\n        .join(separator);\n};\n\nexport default arrayToCsv;\n"],"names":["arrayToCsv","data","separator","replacer","Array","isArray","Error","map","elem","toString","indexOf","quote","join"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA2BA;;;eAAA;;;8DA3BkB;;;;;;AAElB;;;;;;;CAOC,GACD,MAAMA,aAAa,CAACC,MAAMC,YAAY,GAAG,EAAEC;IACvC,IAAIF,QAAQ,MAAM;QACd,OAAO;IACX;IAEA,IAAI,CAACG,MAAMC,OAAO,CAACJ,OAAO;QACtB,MAAM,IAAIK,MAAM;IACpB;IAEA,OAAOL,KACFM,GAAG,CAAC,CAACC;QACFA,OAAOL,WAAWA,SAASK,QAAQA,KAAKC,QAAQ;QAChD,OAAOD,KAAKE,OAAO,CAACR,eAAe,CAAC,IAAIS,IAAAA,cAAK,EAACH,MAAM,OAAOA;IAC/D,GACCI,IAAI,CAACV;AACd;MAEA,WAAeF"}