{"version":3,"sources":["../src/waitUntil_.js"],"sourcesContent":["import sleep_ from './sleep_';\n\n/**\n * Run the checker every given duration for certain rounds until the checker returns non-false value.\n * @alias lang.waitUntil_\n * @async\n * @param {Function} checker - predicator\n * @param {integer} [checkInterval=1000]\n * @param {integer} [maxRounds=10]\n * @returns {Promise.<boolean>}\n */\nasync function waitUntil_(checker, checkInterval = 1000, maxRounds = 10) {\n    let result = await checker();\n    if (result) return result;\n\n    let counter = 0;\n    do {\n        await sleep_(checkInterval);\n\n        result = await checker();\n\n        if (result) {\n            break;\n        }\n    } while (++counter < maxRounds);\n\n    return result;\n}\n\nexport default waitUntil_;\n"],"names":["waitUntil_","checker","checkInterval","maxRounds","result","counter","sleep_"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA6BA;;;eAAA;;;+DA7BmB;;;;;;AAEnB;;;;;;;;CAQC,GACD,eAAeA,WAAWC,OAAO,EAAEC,gBAAgB,IAAI,EAAEC,YAAY,EAAE;IACnE,IAAIC,SAAS,MAAMH;IACnB,IAAIG,QAAQ,OAAOA;IAEnB,IAAIC,UAAU;IACd,GAAG;QACC,MAAMC,IAAAA,eAAM,EAACJ;QAEbE,SAAS,MAAMH;QAEf,IAAIG,QAAQ;YACR;QACJ;IACJ,QAAS,EAAEC,UAAUF,UAAW;IAEhC,OAAOC;AACX;MAEA,WAAeJ"}