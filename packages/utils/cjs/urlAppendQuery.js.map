{"version":3,"sources":["../src/urlAppendQuery.js"],"sourcesContent":["import objectToQueryString from './urlObjectToQueryString';\nimport queryStringToObject from './urlQueryStringToObject';\n\n/**\n * Merge the query parameters into given url.\n * @function string.urlAppendQuery\n * @param {String} url - Original url.\n * @param {Object} query - Key-value pairs query object to be merged into the url.\n * @returns {String}\n */\nfunction appendQuery(url, query) {\n    if (!query) {\n        return url;\n    }\n\n    const posQM = url.indexOf('?');\n\n    if (posQM === -1) {\n        if (typeof query !== 'string') {\n            query = objectToQueryString(query);\n        }\n\n        return query ? url + '?' + query : url;\n    }\n\n    const [base, qs] = url.split('?', 2);\n    const previousObj = queryStringToObject(qs);\n    const newObj = typeof query === 'string' ? queryStringToObject(query) : query;\n\n    const newQs = objectToQueryString({ ...previousObj, ...newObj });\n\n    return newQs ? base + '?' + newQs : url;\n}\n\nexport default appendQuery;\n"],"names":["appendQuery","url","query","posQM","indexOf","objectToQueryString","base","qs","split","previousObj","queryStringToObject","newObj","newQs"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAkCA;;;eAAA;;;+EAlCgC;+EACA;;;;;;AAEhC;;;;;;CAMC,GACD,SAASA,YAAYC,GAAG,EAAEC,KAAK;IAC3B,IAAI,CAACA,OAAO;QACR,OAAOD;IACX;IAEA,MAAME,QAAQF,IAAIG,OAAO,CAAC;IAE1B,IAAID,UAAU,CAAC,GAAG;QACd,IAAI,OAAOD,UAAU,UAAU;YAC3BA,QAAQG,IAAAA,+BAAmB,EAACH;QAChC;QAEA,OAAOA,QAAQD,MAAM,MAAMC,QAAQD;IACvC;IAEA,MAAM,CAACK,MAAMC,GAAG,GAAGN,IAAIO,KAAK,CAAC,KAAK;IAClC,MAAMC,cAAcC,IAAAA,+BAAmB,EAACH;IACxC,MAAMI,SAAS,OAAOT,UAAU,WAAWQ,IAAAA,+BAAmB,EAACR,SAASA;IAExE,MAAMU,QAAQP,IAAAA,+BAAmB,EAAC;QAAE,GAAGI,WAAW;QAAE,GAAGE,MAAM;IAAC;IAE9D,OAAOC,QAAQN,OAAO,MAAMM,QAAQX;AACxC;MAEA,WAAeD"}