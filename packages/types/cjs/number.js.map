{"version":3,"sources":["../src/number.js"],"sourcesContent":["import { ValidationError } from './errors';\nimport toFloat from '@kit/utils/toFloat';\nimport { identity } from './functions';\n\nclass T_NUMBER {\n    name = 'number';\n    alias = ['float', 'double'];\n    primitive = true;\n    scalar = true;\n    defaultValue = 0;\n\n    constructor(system) {\n        this.system = system;\n    }\n\n    validate(value) {\n        return typeof value === 'number';\n    }\n\n    _sanitize(value, meta, opts) {\n        value = toFloat(value);\n\n        if (isNaN(value)) {\n            throw new ValidationError('Invalid number value.', {\n                value: null,\n                meta,\n                rawValue: opts.rawValue,\n                i18n: opts.i18n,\n                path: opts.path,\n            });\n        }\n\n        return value;\n    }\n\n    serialize = identity;\n}\n\nexport default T_NUMBER;\n"],"names":["T_NUMBER","validate","value","_sanitize","meta","opts","toFloat","isNaN","ValidationError","rawValue","i18n","path","constructor","system","name","alias","primitive","scalar","defaultValue","serialize","identity"],"mappings":";;;;+BAsCA;;;eAAA;;;wBAtCgC;gEACZ;2BACK;;;;;;;;;;;;;;;;;;;AAEzB,MAAMA;IAWFC,SAASC,KAAK,EAAE;QACZ,OAAO,OAAOA,UAAU;IAC5B;IAEAC,UAAUD,KAAK,EAAEE,IAAI,EAAEC,IAAI,EAAE;QACzBH,QAAQI,IAAAA,gBAAO,EAACJ;QAEhB,IAAIK,MAAML,QAAQ;YACd,MAAM,IAAIM,uBAAe,CAAC,yBAAyB;gBAC/CN,OAAO;gBACPE;gBACAK,UAAUJ,KAAKI,QAAQ;gBACvBC,MAAML,KAAKK,IAAI;gBACfC,MAAMN,KAAKM,IAAI;YACnB;QACJ;QAEA,OAAOT;IACX;IAtBAU,YAAYC,MAAM,CAAE;QANpBC,uBAAAA,QAAO;QACPC,uBAAAA,SAAQ;YAAC;YAAS;SAAS;QAC3BC,uBAAAA,aAAY;QACZC,uBAAAA,UAAS;QACTC,uBAAAA,gBAAe;QA0BfC,uBAAAA,aAAYC,mBAAQ;QAvBhB,IAAI,CAACP,MAAM,GAAGA;IAClB;AAuBJ;MAEA,WAAeb"}