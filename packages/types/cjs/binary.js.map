{"version":3,"sources":["../src/binary.js"],"sourcesContent":["import { ValidationError } from './errors';\n\nclass T_BINARY {\n    name = 'binary';\n    alias = ['blob', 'buffer'];\n    primitive = true;\n    defaultValue = null;\n\n    constructor(system) {\n        this.system = system;\n    }\n\n    validate(value) {\n        return value instanceof Buffer;\n    }\n\n    _sanitize(value, meta, opts) {\n        if (value instanceof Buffer) {\n            return value;\n        }\n    \n        if (typeof value === 'string') {\n            return Buffer.from(value, meta.encoding || 'base64');\n        }\n    \n        throw new ValidationError('Invalid binary value.', {\n            value,\n            meta,\n            rawValue: opts.rawValue,\n            i18n: opts.i18n,\n            path: opts.path,\n        });\n    }\n\n    serialize(value, meta) {\n        return (value == null ? null : value.toString(meta.encoding || 'base64'));\n    }\n};\n\nexport default T_BINARY;"],"names":["T_BINARY","validate","value","Buffer","_sanitize","meta","opts","from","encoding","ValidationError","rawValue","i18n","path","serialize","toString","constructor","system","name","alias","primitive","defaultValue"],"mappings":";;;;+BAuCA;;;eAAA;;;wBAvCgC;;;;;;;;;;;;;;AAEhC,MAAMA;IAUFC,SAASC,KAAK,EAAE;QACZ,OAAOA,iBAAiBC;IAC5B;IAEAC,UAAUF,KAAK,EAAEG,IAAI,EAAEC,IAAI,EAAE;QACzB,IAAIJ,iBAAiBC,QAAQ;YACzB,OAAOD;QACX;QAEA,IAAI,OAAOA,UAAU,UAAU;YAC3B,OAAOC,OAAOI,IAAI,CAACL,OAAOG,KAAKG,QAAQ,IAAI;QAC/C;QAEA,MAAM,IAAIC,uBAAe,CAAC,yBAAyB;YAC/CP;YACAG;YACAK,UAAUJ,KAAKI,QAAQ;YACvBC,MAAML,KAAKK,IAAI;YACfC,MAAMN,KAAKM,IAAI;QACnB;IACJ;IAEAC,UAAUX,KAAK,EAAEG,IAAI,EAAE;QACnB,OAAQH,SAAS,OAAO,OAAOA,MAAMY,QAAQ,CAACT,KAAKG,QAAQ,IAAI;IACnE;IA5BAO,YAAYC,MAAM,CAAE;QALpBC,uBAAAA,QAAO;QACPC,uBAAAA,SAAQ;YAAC;YAAQ;SAAS;QAC1BC,uBAAAA,aAAY;QACZC,uBAAAA,gBAAe;QAGX,IAAI,CAACJ,MAAM,GAAGA;IAClB;AA2BJ;MAEA,WAAehB"}